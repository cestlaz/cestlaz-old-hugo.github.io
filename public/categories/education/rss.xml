<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>education on C&#39;est la Z</title>
    <link>https://cestlaz.github.io/categories/education/</link>
    <description>C&#39;est la Z (education)</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 12 Jul 2024 16:57:44 -0400</lastBuildDate>
    
    <atom:link href="https://cestlaz.github.io/categories/education/rss.xml" rel="self" type="application/rss" />
    
    
    <item>
      <title>The Dino Podcast</title>
      <link>https://cestlaz.github.io/post/dino-podcast/</link>
      <pubDate>Fri, 12 Jul 2024 16:57:44 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/dino-podcast/</guid>
      <description>&lt;p&gt;
I love talking shop but I don&amp;#39;t have the opportunity to do so as much
now that I&amp;#39;m retired. So, when my former student &lt;a href=&#34;https://www.linkedin.com/in/dino-beslic-1b761a63/&#34;&gt;Dino Beslic&lt;/a&gt; emailed
me and asked if I wanted to be on his podcast, &lt;a href=&#34;https://open.spotify.com/show/6dJKlNZKxdaN6D6yrtDHBq&#34;&gt;The Dino Podcast&lt;/a&gt;, I was
both honored and excited.&lt;/p&gt;
&lt;p&gt;
Dino was a student of mine in the early 2000s but we haven&amp;#39;t been in
touch for years. I reached out to his brother Denis, also a student of
mine, in order to connect yet another student to him for a job
referral. Denis talked to Dino and that ended up in me being invited
on the show. Of course, I&amp;#39;m also excited about being reconnected with
both Denis and Dino.&lt;/p&gt;
&lt;p&gt;
Dino&amp;#39;s a Tech CFO and investor and his podcast is about &amp;#34;business,
technology, and geopolitics.&amp;#34;&lt;/p&gt;
&lt;p&gt;
The tech job market has been in a downturn for the past couple of
years and at the same time, we&amp;#39;ve seen a rise in AI an AI based
programming assistants and related technologies. Dino and I spent a
little over an hour talking about reasons for the downturn, if and how
AI and the downturn were affecting the market and education. We also
projected a bit into the future and made some recommendations for
youngsters starting out.&lt;/p&gt;
&lt;p&gt;
I particularly enjoyed the fact that we were talking about education
at the college level up into the workforce - most of my recent shop
talks have focused on K12 and while I&amp;#39;m passionate about my work
there, I&amp;#39;ve also done a lot with preparing students for the tech
workforce and navigating early careers and am wondering if that&amp;#39;s an
area I&amp;#39;ll go back to focusing on for my next adventure.&lt;/p&gt;
&lt;p&gt;
So, if you&amp;#39;ve got the time, check out the Dino Podcast. Here&amp;#39;s a link
to the episode I&amp;#39;m on: &lt;a href=&#34;https://open.spotify.com/episode/1MktTuxoD0QoWbwSh060CF&#34;&gt;link&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Good Schools for New Teachers</title>
      <link>https://cestlaz.github.io/post/good-schools-for-new-teachers/</link>
      <pubDate>Mon, 24 Jun 2024 14:13:06 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/good-schools-for-new-teachers/</guid>
      <description>&lt;p&gt;
Usually, when I write about a teacher get together it&amp;#39;s either my
StuyCS people or CS educators. Last week, it was another group. Each
year, Devorah, along with a bunch of her former colleagues from the
Manhattan Center for Science and Math (MCSM) get together for a year
end celebration. They&amp;#39;ve been doing this for something like 20 years
even though most of the crew is retired now and all but I think one or
two have left MCSM. For the most part, they all started close to the
same time and most were in the Science department. I&amp;#39;ve joined in from
time to time and they usually get a good crowd of between one to two
dozen teachers. Last year, the gathering focused on Devorah&amp;#39;s
retirement and this year on another from the crew. &lt;/p&gt;
&lt;p&gt;
To be honest, I&amp;#39;m a little jealous. sure, we used to have periodic end
of term lunches at Stuy but to keep a group together even after so
many have left the fold is pretty cool.&lt;/p&gt;
&lt;p&gt;
David, a terrific Physics teacher in the group (and presumably the retiring
honoree next year) made a comment, noting that so many of the group
started at around the same time. He said that they were really lucky
because MCSM was a really good school for new teachers. He commented
on how much support he got across the board and how his colleagues,
supervisors, and administrators really helped him and others grow.&lt;/p&gt;
&lt;p&gt;
This got me thinking. My first few years of teaching were at Seward
Park High School - actually, a school with some similarities to
MCSM. Both were large schools. Not giant monsters like Stuy or
Brooklyn Tech but still pretty large. Both also had a range of
students in terms of ethnicity as well as academic performance. In
those early days I had classes with kids on parole, drug dealers, and
thugs and I also had classes with the nicest kids you&amp;#39;d ever met. I
had kids who in 10th grade or beyond could barely add and I had super
high achieving honors students. All that and everything in between.&lt;/p&gt;
&lt;p&gt;
The biggest difference between MCSM and Seward Park is that at Seward most of
the faculty were at war with the administration.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve been told often that &amp;#34;bad&amp;#34; schools - rough students and/or
horrid administrations frequently result in very close knit faculties
and that seemed to be true at Seward. They all banded together and as
a newbie, they took me under their wings. Now, I personally had no
problems with the administration - I got along very well with my
direct supervisor and he loved me but I still was adopted by so many
others. New teachers frequently get the worst program but my chairman
had a different approach - he rotated everybody - he worked to give
me - the new kid - some tough classes and some easier ones and worked
to get me through the entire math sequence quickly. As to the
faculty - they helped me with lessons, sat in on my class, and let me sit
in with them. They also saved me with discipline issues. I had one
particularly rough class and a colleague with nonchalantly wander in
to use a computer in the back of the room. He came in because he knew
his presence would help with the discipline. The kids settled down and
were non the wiser. Mike (his name as well), would then on a day to
day basis work with me between classes until I could handle things on
my own.&lt;/p&gt;
&lt;p&gt;
Without the support of teachers like Mike, as well as a handful of
others, I would never have made it to year two let alone a three plus
decade career. Very little of this support I got was official but it
was critical in my staying in and succeeding as a teacher. &lt;/p&gt;
&lt;p&gt;
Now, MCSM didn&amp;#39;t have a dysfunctional administration. In fact, from
what I saw, they were pretty good. It wasn&amp;#39;t until three principals
later that they got their disaster, which ultimately prompted a
handful of retirements and many transfers so might be fairly unique
that Dave, Devorah, and all of them had a school with both a good
administration and a united faculty, or at least science department
that really fostered the development of new teachers.&lt;/p&gt;
&lt;p&gt;
I think something that also helped both at Seward for me and MCSM was
the size of the school. Being large schools, there were always
multiple teachers for each subject. That meant a new teacher was never
on an island. It also meant that there were many other teachers to
observe, learn from, and get support from. It also meant that there
was never just one or two of the more desirable classes so while new
teachers might have gotten less desirable programs, they didn&amp;#39;t get
the worst of the worst.&lt;/p&gt;
&lt;p&gt;
Contrast those two schools with Stuyvesant when I started. Stuy was
also a large school - in fact much larger, with few discipline
problems. I&amp;#39;d say that Stuy, back then, was much worse in terms of new teacher
development. Sure, teachers were nice enough - I became friends with a
number of them, but truth be told the most you&amp;#39;d get would be 
some notes from a previous semester or you could quietly sit in on
class. At Seward, I got that, plus debriefings but check ins and
more. At Stuy, I got the least desirable classes until I took over CS
(although even the worst classes at Stuy were pretty desirable) as
well as the worst rooming situation - I was running from the third
floor to the 7th and back between three periods early on. At Seward,
my program was pretty much the same as everyone else. 
I&amp;#39;d like to hope I helped foster a better environment as the CS
program grew and we brought in new teachers but I can&amp;#39;t say.&lt;/p&gt;
&lt;p&gt;
Another problem with Stuy, at least for new teachers, and this is
probably true at many high performing schools, both public and
private, is that new teachers don&amp;#39;t really have to learn how to
teach. They can be bad at their craft and the students will still pass
the standardized exams. I&amp;#39;ve seen new teachers at stuy who never
taught elsewhere who thought they were great but really weren&amp;#39;t - at
best they got by on the fact that they were young and had some
charisma. Their kids did alright but deserved better. Some were self
aware enough to figure it out but by and large it was an issue. Of
course at a tough school the new teacher would just leave the
profession while at the high performing school, the teacher in
question might go on to a career of just not teaching that well.&lt;/p&gt;
&lt;p&gt;
In a profession with an extremely high attrition rate and also one
where much preservice preparation is, let&amp;#39;s say, limited, we have to
do better. Obviously the biggest issues are things like class size,
pay, and benefits but starting out at a school that&amp;#39;s friendly to new
teachers can be the difference maker.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>AI in the classroom - it really isn&#39;t that simple</title>
      <link>https://cestlaz.github.io/post/ai-in-class-not-simple/</link>
      <pubDate>Tue, 20 Feb 2024 15:49:24 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/ai-in-class-not-simple/</guid>
      <description>&lt;p&gt;
Earlier today, I saw a linkedin post by Code.org&amp;#39;s &lt;a href=&#34;https://www.linkedin.com/in/patyongpradit/&#34;&gt;Pat Yongpradit&lt;/a&gt;
summarizing a series of articles on AI in K12 classrooms in Ed Week. I
couldn&amp;#39;t get far into the articles due to paywall restrictions but
Pat&amp;#39;s summary and the ensuing comments and discussion let me to
writing this.&lt;/p&gt;
&lt;p&gt;
One thing that stuck out in the comments, and this has been a
recurring theme in AI in K12 classroom discussions is that a teacher
who allows students to use AI, teaches AI, etc. will be more effective
than one who doesn&amp;#39;t.&lt;/p&gt;
&lt;p&gt;
While I&amp;#39;m against an AI ban and if I were still in the classroom I
don&amp;#39;t doubt that I&amp;#39;d be exploring the tools, it&amp;#39;s not that simple.&lt;/p&gt;
&lt;p&gt;
Let&amp;#39;s look at elementary math education. When I was in grade school in
the 70s, we learned our math facts, long division, and all sorts of
things that were positively uncool when my kids were in school in the
early 2000s. They didn&amp;#39;t learn there math facts and teachers had very
different ways of approaching most of the topics. This struck me as,
well, not good, so I started to talking to my students who had gone
through this &amp;#34;new math&amp;#34; education as well as to parents.&lt;/p&gt;
&lt;p&gt;
While this wasn&amp;#39;t an official study, it certainly appeared that by the
time kids who were educated in this newfangled way using all the new
tools and tech were by and large more poorly prepared than students
who either had an old school teacher who bucked the trend and did
things the old way or had parents who supplemented on their own.&lt;/p&gt;
&lt;p&gt;
How does this relate to AI in the classroom? Well, a teacher only has
so much time with their students and way more to teach than can
realistically be done in the time allotted. So, teacher A focuses on
the new hotness. Goes all in on AI - well, that&amp;#39;s great but
something&amp;#39;s got to give. At the same time, teacher B doesn&amp;#39;t do the AI
but goes old school - pen and paper and really focuses on teaching the
kids to write - that is - communicate effectively.&lt;/p&gt;
&lt;p&gt;
Fast forward a few years and teacher A&amp;#39;s kids are proficient in what
was modern AI a few years ago. Maybe this will be a tremendous boon
but maybe we&amp;#39;ve moved on to the next thing. Teacher B&amp;#39;s kids, on the
other hand are stronger communicators regardless of medium.&lt;/p&gt;
&lt;p&gt;
Who&amp;#39;s better off? Maybe A&amp;#39;s kids, Maybe B&amp;#39;s.&lt;/p&gt;
&lt;p&gt;
To make things more complicated, teachers have not been educated in AT
and neither have administrators and just adding more and more to
teachers plates is both unjust and not sustainable. &lt;/p&gt;
&lt;p&gt;
This hypothetical has played out before - with elementary math,
calculators, writing across the curriculum, CS4All and more. Over and
over again. There&amp;#39;s no simple answer. I wasn&amp;#39;t sure that calculators
were the way to go back when they came in. I&amp;#39;m still not and even if
they were the right move, why are kids and schools still forking money
over to TI when there are free and better alternatives on phones and
computers? Writing across the curriculum? Great idea but nobody carved
out anything from my required curricula to make room for it and while
I&amp;#39;d like to think I could do it, I&amp;#39;ve got nothing to show in my work
history or education to say that I was qualified to teach effective
writing.&lt;/p&gt;
&lt;p&gt;
Yes - let&amp;#39;s work on AI policies - hopefully informed by people who
know both the tech an the teaching but let&amp;#39;s not be so fast to say
that a teacher who embraces AI is good while one who does not is bad.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>The State of Developer Education podcast</title>
      <link>https://cestlaz.github.io/post/dev-educator-podcast/</link>
      <pubDate>Mon, 16 Oct 2023 09:22:58 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/dev-educator-podcast/</guid>
      <description>&lt;p&gt;
Now that I&amp;#39;m back from my trip (and the subsequent cold that I&amp;#39;ve
battled for the past few days), time to get back to &amp;#34;work.&amp;#34;&lt;/p&gt;
&lt;p&gt;
About a month ago, my friend &lt;a href=&#34;https://www.linkedin.com/in/jonmarkgo/&#34;&gt;Jonathan Gottfied&lt;/a&gt; interviewed me for his
&lt;a href=&#34;https://deveducation.fm/e/r8krr96n-mike-zamansky&#34;&gt;State of Developer Education&lt;/a&gt; podcast. It&amp;#39;s an hour plus dive into CS /
Tech education. It dropped when I was on the plane back to NY last
Thursday. I meant to write this on Friday but my cold took me out
until today.&lt;/p&gt;
&lt;p&gt;
It was a thrill to be asked and fun to do - as you know, I love
talking shop. I&amp;#39;ve known the host, Jon, for years, I think we met when
he was at Twilio. For the past almost decade though, Jon has been
building &lt;a href=&#34;https://mlh.io/&#34;&gt;Major League Hacking&lt;/a&gt; - &lt;strong&gt;the&lt;/strong&gt; organization to support
college hackathons. While I&amp;#39;m not  sold on the 30+ hours straight
format, a hackathon can be great tech extracurricular and MLH has done
so much to add structure and support for them. One of the things I
love about hackathons is that they&amp;#39;re tech education adjacent and can
fill in missing pieces for students - networking with others, a social
activity, project creation, and outside personal learning. All great
things. Running an organization like MLH can also give people like Jon
a valuable &amp;#34;outsiders&amp;#34; view of what&amp;#39;s coming out of the classroom. To
clarify, I say outsider to mean someone not employed as a teacher or
instructor. &lt;/p&gt;
&lt;p&gt;
As to the episode of the podcast I was on, you can check it out here:&lt;/p&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/rvTBhZo6rks?si=93vXdEqRZ0QRze3N&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;
or in podcast form here:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://podcasts.apple.com/us/podcast/the-evolving-landscape-of-computer-science/id1658813805?i=1000631091275&#34;&gt;https://podcasts.apple.com/us/podcast/the-evolving-landscape-of-computer-science/id1658813805?i=1000631091275&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://open.spotify.com/episode/576l1rFDpAQhaSHSgLd15H&#34;&gt;https://open.spotify.com/episode/576l1rFDpAQhaSHSgLd15H&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For teachers who read this blog, I&amp;#39;d recommend checking out the
podcast series in general. I&amp;#39;ve listened to a bunch and found them
both interesting and valuable. Most of the episodes I&amp;#39;ve listened to
are of professionals in the devrel space. Some come from traditional
CS backgrounds, some don&amp;#39;t. As teachers, we can learn from their
perspectives and also gain insights into the professional tech
world beyond just being a traditional software engineer.&lt;/p&gt;
&lt;p&gt;
So, I&amp;#39;d encourage you all to check out the series here:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://deveducation.fm/&#34;&gt;https://deveducation.fm/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/playlist?list=PLPDgudJ_VDUdqDSSq6-zmgeIWwULGQX7R&#34;&gt;https://www.youtube.com/playlist?list=PLPDgudJ_VDUdqDSSq6-zmgeIWwULGQX7R&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Enjoy.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>A new school year - what&#39;s to come</title>
      <link>https://cestlaz.github.io/post/school-start-2324/</link>
      <pubDate>Wed, 06 Sep 2023 06:46:45 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/school-start-2324/</guid>
      <description>&lt;p&gt;
Another school year is starting. Hunter College&amp;#39;s classes started last
week and public school K12 teachers went back yesterday. I&amp;#39;ve been
having some &amp;#34;back to school dreams&amp;#34; and, yeah, already missing being
with the kids but not missing those opening meetings and the rest of
the nonsense.&lt;/p&gt;
&lt;p&gt;
Still, I&amp;#39;m thinking about what this school year will bring in terms of
CS. &lt;/p&gt;
&lt;p&gt;
The elephant in the room is just the same as what we closed out with
last Spring - AI - specifically generative AI.&lt;/p&gt;
&lt;p&gt;
I think AI is particularly interesting because it&amp;#39;s going to be a big
topic in CS, in other subjects and also in school and district policy.&lt;/p&gt;
&lt;p&gt;
Unfortunately, we&amp;#39;re already seeing the education community - CS and
otherwise play the usual game - anoint the usual suspects experts and
give them a platform and eventually those opinions will become the
&amp;#34;right ones.&amp;#34; Please stop. There are AI experts - people who&amp;#39;ve
created, worked with, analyzed and studied these systems and they can
and should be engaged as experts to communicate what we&amp;#39;re dealing
with on a technical level but nobody&amp;#39;s been exploring and
experimenting with these tools long enough in school and class
settings to be an expert. All we have are people trying some new
things now. Results will start to come in and we might eventually have
&amp;#34;experts&amp;#34; in AI in education but we don&amp;#39;t know so just stop. I wrote
about this &lt;a href=&#34;https://cestlaz.github.io/post/expert-thought-leader/&#34;&gt;here&lt;/a&gt; where I was at a conference and there were two
speakers - both given a platform as &amp;#34;experts.&amp;#34; One was way off base
and should never have been given the platform. The other just shared
&amp;#34;here&amp;#39;s what I&amp;#39;m trying and here&amp;#39;s what others are trying - give it a
go yourself.&amp;#34; That second speaker was great.&lt;/p&gt;
&lt;p&gt;
In non CS classes, I suspect we&amp;#39;ll see the usual play out. Some
teachers and schools will go draconian with concerns over cheating and
copying and others will come up with clever ways to use generative AI
to help build classroom exercises and student experiences.&lt;/p&gt;
&lt;p&gt;
I saw one person talking about redefining how he taught his English
classes and that concerns me. He said that with generative AI, writing
is less important so he could now focus on reading.&lt;/p&gt;
&lt;p&gt;
This is a problem. Already there are too many HS English teachers who
fancy themselves college literature professors. Writing, as in pen to
paper or finger to keyboard might change because we have all these
newfangled tools but it&amp;#39;s not really about writing. It&amp;#39;s about
communication. That&amp;#39;s the needed skill and that isn&amp;#39;t going
away. Becoming a literature class won&amp;#39;t help there and I see this
attitude as problematic if it takes hold.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m also concerned about the AI tutor replacing teachers. This one&amp;#39;s
tricky. On the one hand, automated feedback can be a great addition in
terms of student support but it can also be used, as I spoke about
when writing about Harvard&amp;#39;s &lt;a href=&#34;https://cestlaz.github.io/post/ai-replace-teaching/&#34;&gt;CS50&lt;/a&gt; and their using AI tutors. This will
probably be good for the students but it&amp;#39;s also a way of glossing over
serious deficiencies in either course design or delivery. I&amp;#39;m also
concerned about students - particularly introverts connecting more
with AIs than with people.&lt;/p&gt;
&lt;p&gt;
On the CS front, we&amp;#39;ll see a rush of new AI units. I haven&amp;#39;t had a
chance to review what&amp;#39;s already been put out there but we&amp;#39;ll see. It&amp;#39;s
a tough thing to get right for a CS class. K12 students by and large
won&amp;#39;t have the background to get their heads around a lot of what&amp;#39;s
going on so how can you give a fair inkling without overwhelming.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve seen good and bad with this over the years. A good example in
another topic is networking - a complex topic that middle school kids
aren&amp;#39;t by and large ready for, at least for a deep dive. That said,
I&amp;#39;ve seen teachers do wonderful units where the class becomes a packet
switching network breaking up messages, writing down packets, putting
them in envelopes and passing them through the room. In the end they
can&amp;#39;t sit down and code a networking stack but they have a good idea,
in the general sense, how it works.&lt;/p&gt;
&lt;p&gt;
On the bad side, was a set of Google lessons that I saw at SIGCSE a
few years ago. All fancy with graphics and sliders but in the end
really communicated nothing about how the system (a neural net in this
case) worked.&lt;/p&gt;
&lt;p&gt;
It&amp;#39;ll be interesting to see what comes but my money is on more weak
stuff than strong.&lt;/p&gt;
&lt;p&gt;
Within CS and tech we&amp;#39;ll see continuations of the usual issues - lack
of teachers, digital divide, potential changes in curriculum and the
like but in education as a whole we&amp;#39;ll see some other big issues to
pay attention to.&lt;/p&gt;
&lt;p&gt;
The trends in red states like Florida and how their policies are
downright dangerous to minorities. Book bannings, policies harmful to
marginalized communities - particularly the Black and LGBTQ
communities and privatization. The CS community has mostly been silent
on these with a short lived limited exception when the College Board /
DeSantis APAAS thing first came up. On the one hand, the CS community
appears to do lot - in our conferences and events inclusion is a big
topic but that&amp;#39;s coffee cooler talk. To the outside the voices in the
community are happy to go along to get along. I&amp;#39;d love to see that
change this year - stronger voices by conference organizers and power
players. Take a stand - don&amp;#39;t give me the CS or education isn&amp;#39;t
political because these days, everything is.&lt;/p&gt;
&lt;p&gt;
Anyway, before I get myself too riled up, I think I&amp;#39;ll stop. It should
be an interesting school year. I&amp;#39;ll be on the outside looking in and
figuring out how I can remain involved. For those of you in the
classroom - good luck for your openings, have fun with your kids and
try not to let the administrations bring you down.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Teacher Movies</title>
      <link>https://cestlaz.github.io/post/teacher-movies/</link>
      <pubDate>Tue, 29 Aug 2023 08:36:17 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/teacher-movies/</guid>
      <description>
&lt;p&gt;
It&amp;#39;s back to school time and in addition to all the usual back to
school angst and excitement it&amp;#39;s also time for the networks to stream
all those teacher movies.&lt;/p&gt;
&lt;p&gt;
Lots of a-list actors have been in teacher movies and many are really
entertaining but I&amp;#39;ve also found many of them to be problematic.&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s not because many of them are &amp;#34;white savior&amp;#34; films, even though,
yeah, that too, but rather because many are indirectly demeaning to
teachers and the teaching profession in general.&lt;/p&gt;
&lt;p&gt;
The typical trope is non teacher with no teaching background gets job
in hard school. Teacher struggles. Amazingly, teacher with no
background wins over their students and performs miracles. Many of
these movies are &amp;#34;based on a true story.&amp;#34;&lt;/p&gt;
&lt;p&gt;
Other highlighted tropes are:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;None of the experienced career teachers are any good. Their all
horrible by every account.&lt;/li&gt;
&lt;li&gt;The administrations are also similarly bad. &lt;/li&gt;
&lt;li&gt;As a result, the teacher rescues their class all by themselves.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Also interesting is that the star teacher in all the movies only ever
seems to teach one class.&lt;/p&gt;
&lt;p&gt;
Another interesting thing is that when reading the movie post-text or
looking up the teacher afterwards, they almost invariably left
education soon after - frequently it seems to cash in on the fame
resulting from the movie.&lt;/p&gt;
&lt;p&gt;
If you think about it, this sends a horrible message - well prepared,
trained, dedicated teachers are all bad. No administrators care for
the students and it takes these miracle workers to swoop in.&lt;/p&gt;
&lt;p&gt;
Nonsense - education is hard and is the long game and just like every
profession - there are a few stars and a few rotten apples and bunch
of hard working solid professionals in between.&lt;/p&gt;
&lt;p&gt;
Another truth is that, at least in the few instances I know of, where
there was a success it was actually with the support of other teachers
and/or the administration.&lt;/p&gt;
&lt;p&gt;
My first exposure to this was from &amp;#34;Small Victories.&amp;#34; A book - never
made into a movie. It focused on a teacher at Seward Park High School
and was published right before I started there (my first teaching
gig). It wasn&amp;#39;t a miracle story but focused on how the teacher in
question embraced the students with challenges and they found many
&amp;#34;small victories&amp;#34; helping these students in their lives. The teacher,
Jessica Siegel was in her 10th year teaching which is pretty good but
she left soon after the book came out - right before I came on
board. The book mentioned many other teachers but the focus was on
her. The reality was that it was much more of a team effort. I got to
know many of the players briefly mentioned in the book and indeed I
can see that was the truth. Honestly, though, I don&amp;#39;t want to detract
from Jessica Siegel&amp;#39;s work there - my best guess it was an ensemble
effort in the school but as expected the author felt he had to focus on
somebody.&lt;/p&gt;
&lt;p&gt;
The next was &amp;#34;Stand and Deliver&amp;#34; with Edward James Olmos as Jaome
Escalante - the miracle teacher who overcame a school full of
loser teachers. From what I was told by teachers with more of an
inside view was that while Mr. Escalante did some great stuff it was a
team effort. Makes for a better story but it demeans the rest of the
hard working teachers in the school. I&amp;#39;m reminded of a piece a read
about how Dan Devine - the former Notre Dame coach was hurt when he
saw how he was portrayed in the movie &amp;#34;Rudy.&amp;#34; He was made the heavy
who was going to deny Rudy his shot. The reality was apparently
otherwise with Dan Devine being rather supportive.&lt;/p&gt;
&lt;p&gt;
Escalante and Siegel differ from many of the other miracle teacher
stories in that they both taught for at least 10 years. &lt;/p&gt;
&lt;p&gt;
Of course, not all teacher movies are bad and even the bad ones can be
entertaining and many were created as fiction and are not based on a
true story.&lt;/p&gt;
&lt;div id=&#34;outline-container-headline-1&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-1&#34;&gt;
Here are some that have school elements that I like:
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-1&#34; class=&#34;outline-text-2&#34;&gt;
&lt;div id=&#34;outline-container-headline-2&#34; class=&#34;outline-3&#34;&gt;
&lt;h3 id=&#34;headline-2&#34;&gt;
Lean on me
&lt;/h3&gt;
&lt;div id=&#34;outline-text-headline-2&#34; class=&#34;outline-text-3&#34;&gt;
&lt;p&gt;
Based on Joe Clark - a no excuses principal in New Jersey. I&amp;#39;m not
particularly a Joe Clark fan but there were a number of things I liked
about the movie.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;It showed both supportive and antagonistic parents, administrators,
and influences.&lt;/li&gt;
&lt;li&gt;By the end, Joe Clark acknowledged that he needed and appreciated the
hard work and dedication of his staff.&lt;/li&gt;
&lt;li&gt;It highlighted how educators are frequently between a rock and a
hard place - you&amp;#39;ve got to keep the drug dealers out but you can&amp;#39;t
lock the doors.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Again, not a Joe Clark fan but if you pay attention there&amp;#39;s some good
balance here and it&amp;#39;s early Morgan Friedman so that&amp;#39;s always a plus.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-3&#34; class=&#34;outline-3&#34;&gt;
&lt;h3 id=&#34;headline-3&#34;&gt;
To Sir with Love
&lt;/h3&gt;
&lt;div id=&#34;outline-text-headline-3&#34; class=&#34;outline-text-3&#34;&gt;
&lt;p&gt;
I mean, Sidney Poitier so that&amp;#39;s enough reason to watch. It&amp;#39;s
interesting because it&amp;#39;s kindof a reverse &amp;#34;White Savior&amp;#34; story with
Poitier being black and his class mostly poor white. It&amp;#39;s got plenty
of faults - he only appears to teach one class and he never does
anything academic but it&amp;#39;s got good balance. There&amp;#39;s a bad teacher
who&amp;#39;s the heavy but there are also good supportive teachers and
administrators. Poitier faces real challenges and even loses his cool,
gets advice from other teachers and finds his way.&lt;/p&gt;
&lt;p&gt;
This is a good one.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-4&#34; class=&#34;outline-3&#34;&gt;
&lt;h3 id=&#34;headline-4&#34;&gt;
Dead Poets Society
&lt;/h3&gt;
&lt;div id=&#34;outline-text-headline-4&#34; class=&#34;outline-text-3&#34;&gt;
&lt;p&gt;
I mention this as an aside. I think it&amp;#39;s interesting because the
teacher in question John Keating comes in with credentials. He also
isn&amp;#39;t saving the students in the same sense - I mean it is an elite
private boarding school. The other educators are a mixed bag and
that&amp;#39;s realistic and I think the description of the school is
reasonably accurate given the time and place.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-5&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-5&#34;&gt;
And maybe my favorite
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-5&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
One of the best teacher movies and a great one to watch at this time
of years is &amp;#34;Mr. Holland&amp;#39;s Opus.&amp;#34; Richard Dreyfuss, Olympia Dukakis,
and others. Frustrated musician takes a teaching job to pay the bills
and indeed becomes that influential teacher. Never shown as the super
charismatic miracle worker but a dedicated pro who would do anything
to reach his students and help them to love music. It&amp;#39;s a movie about
any of us, all of us who&amp;#39;ve pushed through the decades to work for our
students without the limelight but in the end, as Mr Holland got to
see, made a great difference in many lives.&lt;/p&gt;
&lt;p&gt;
So, as the school year starts, enjoy the teacher movies - the good,
the bad, and the fun.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Passing The Torch</title>
      <link>https://cestlaz.github.io/post/passing-the-torch/</link>
      <pubDate>Mon, 21 Aug 2023 12:52:19 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/passing-the-torch/</guid>
      <description>&lt;p&gt;
Passing another miletone on the way to retirement this week. I didn&amp;#39;t
think it would be this many steps - I figured I&amp;#39;d say I&amp;#39;m retiring,
fill out a form, and be done.&lt;/p&gt;
&lt;p&gt;
It turns out it&amp;#39;s a multi stage process.&lt;/p&gt;
&lt;p&gt;
This week, my contract with Hunter officially ends and as of Friday
I&amp;#39;m on Travia leave - that&amp;#39;s terminal leave to public school
teachers. I basically get full pay and benefits while my reserved sick
days get used up at a 2 sick for one real day rate. In about 2 weeks, I can
finally file my retirement forms and then on Dec 4th or so, it&amp;#39;s all
over.&lt;/p&gt;
&lt;p&gt;
More importantly, my replacements are now both, well, in place.&lt;/p&gt;
&lt;p&gt;
On the Daedalus honors undergraduate CS side, Hunter hired my
replacement about month ago. A terrific instructor who already, as an
adjunct has proven herself both in terms of teaching and also in
connecting with her students. She&amp;#39;s terrific but we only knew each
other because we were both at Hunter. I have no doubt that she&amp;#39;ll take
the Daedalus program to the next level but due to personal
connections, I&amp;#39;m more excited about the new hire for my education
school work.&lt;/p&gt;
&lt;p&gt;
On that side, to run Hunters CS Teacher Education programs, they&amp;#39;ve
brought on Edgar Troudt. Edgar&amp;#39;s spent a good amount of his career in
the CUNY system but has also made stops at LIU and Vaughn
College. Like my Daedalus successor, Edgar is a highly regarded
classroom teacher, is a strong computer scientist and brings a lot of
extras to the table.&lt;/p&gt;
&lt;p&gt;
For me though, it&amp;#39;s extra special because I&amp;#39;ve known Edgar for
years. Back in the day, he was in my CS classes when he was a student
at Stuyvesant (note: I was not on the hiring committee so other than
telling Edgar and a few other people to apply, I had nothing to do
with the process). Since then, we&amp;#39;ve become friends and we&amp;#39;ve
worked together on a couple of projects.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m particularly excited because Edgar brings things to the position
that I lacked. We both have strong CS backgrounds but where my other
strength is K12 education and pipeline from start to industry, Edgar&amp;#39;s
spent his career not only creating but more importantly growing
programs with a focus on entrepreneurship.&lt;/p&gt;
&lt;p&gt;
That background in program growth is what Hunter and in fact, NY needs
now. I planted the seed and got things off the ground but now the
program needs someone adept at growth and sustainability and that&amp;#39;s
a special that Edgar brings to the table. I started the Masters in
CS Ed program but it&amp;#39;s in a seedling state. A handful of students a
year. The next step for Hunter is to nurture it and grow it. At the
same time, the advanced certificate program will probably see reduced
demand but I&amp;#39;ve written on that before.&lt;/p&gt;
&lt;p&gt;
What gets me excited about Hunter&amp;#39;s programs futures is that the
person they chose to succeed me has the unique skill set to take the
programs to the next levels. Something that maybe I could have done,
maybe I couldn&amp;#39;t but passing the torch to someone with  a history of
program growth is the right move.&lt;/p&gt;
&lt;p&gt;
Nine years ago, it was time for me to leave Stuyvesant. I had done my
thing there, for better or worse and it was time for someone else to
take the reins. There and then it was JonAlf who I describe as being
very similar to me but with a better big picture view and a higher
upside. He hasn&amp;#39;t disappointed in the role. I was happy then that he
succeeded me and just as delighted now. Same with Edgar.&lt;/p&gt;
&lt;p&gt;
I left Stuy confident that I left the program there in better
hands. Now that my successors at Hunter are both in place, I feel the
same way.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Who&#39;s the Expert Thought Leader</title>
      <link>https://cestlaz.github.io/post/expert-thought-leader/</link>
      <pubDate>Thu, 10 Aug 2023 11:26:48 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/expert-thought-leader/</guid>
      <description>&lt;p&gt;
Last weekend I attended the AI X Education Conference - an online
conference on, well, AI in education. There were some talks about AI
and generative AI in particular but really the split was that Saturday
was focused on college education and Sunday on K12.&lt;/p&gt;
&lt;p&gt;
I only caught a bit of each day but fortunately, the sessions were
recorded. Two in particular or more specifically two specific
speakers, one in a K12 STEM education session and another in a
humanities education session caught my attention. One for good, one
for bad.&lt;/p&gt;
&lt;p&gt;
All of the speakers at conferences like these are anointed with
authority. By being included and given a speaking platform they
automatically become &amp;#34;experts&amp;#34; and &amp;#34;thought leaders.&amp;#34; This has been
true throughout the decades I&amp;#39;ve been involved in CS Ed. Sometimes the
&amp;#34;expert&amp;#34; does indeed the deserve the platform. Far too often, they
don&amp;#39;t.&lt;/p&gt;
&lt;p&gt;
Let&amp;#39;s dive in.&lt;/p&gt;
&lt;p&gt;
One speaker, let&amp;#39;s call him speaker A, spoke about AI. Repeatedly
stated how we should be using it (I agree, with this one point) but
also how AI tutors and teachers &lt;strong&gt;will&lt;/strong&gt; be better than human
counterparts. Speaker A also segued into how discovery learning is a
must and anyone who doesn&amp;#39;t approach their classes from that point of
view isn&amp;#39;t doing it right. He went on but it was all in a similar
vein.&lt;/p&gt;
&lt;p&gt;
The other speaker, speaker B started by saying he was going to share
some of the things he (or maybe he said he and his colleagues, I
forget) were doing and seemed to be having some success. He shared how
he used generative AI to build scenarios for student activities, for
example. Speaker B encouraged the audience to try similar but never
made authoritative statements of &amp;#34;this is the one true way.&amp;#34;&lt;/p&gt;
&lt;p&gt;
Both of these speakers, by virtue of the conference organizers have
been anointed as &amp;#34;thought leaders&amp;#34; and &amp;#34;experts.&amp;#34; Are they?&lt;/p&gt;
&lt;p&gt;
Maybe.&lt;/p&gt;
&lt;p&gt;
Speaker B may or may not be an expert but in my opinion, he did it
right. Here&amp;#39;s what we tried. Here&amp;#39;s what happens. Our situations might
differ so your mileage might vary but think about giving it a go.&lt;/p&gt;
&lt;p&gt;
This was just a report on his experiences but this is what, in my
opinion, good ed research is like - we tried something, here&amp;#39;s what
happened but there are a million variables we can never account for so
take it all with a grain of salt.&lt;/p&gt;
&lt;p&gt;
This is also how I approach preparing teachers - give them the tools
but emphasize there is no single true way. Speaker A talked of how you
&lt;strong&gt;have&lt;/strong&gt; to teach but he was wrong. Based on circumstance, students,
environment, and yes, that often omitted aspect - teacher strengths
and preferences you make the best possible choice. You might want to
have a discover lesson because it would work with your students and
you love to do it but your class might be too big or maybe the class
length isn&amp;#39;t long enough or there could be a myriad of other reasons
why another approach might be better in that particular instance.&lt;/p&gt;
&lt;p&gt;
Speaking of speaker A, let&amp;#39;s revisit him. You already know that I
wasn&amp;#39;t impressed but I decided to dig a little deeper. Best I can
determine he teaches at a private school with an enrollment of 225,
resources and small classes. It looks to have a high performing
population.&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Of course discovery learning works&lt;/strong&gt; in that environment. Most things
are easy if you have a dozen kids who are performing at or above grade
level. Will that translate to the underfunded overcrowded public
school? Well, I think you know the answer.&lt;/p&gt;
&lt;p&gt;
So, we have speaker A - anointed but in my opinion, not worthy. If one
teaches at a rich private school does that mean they can&amp;#39;t be an
expert or real thought leader? Of course not. But the ones that are
the real experts know that their school - whatever it is, is not the
same as the next teachers so, unlike the Sith, they don&amp;#39;t talk in
absolutes. Many teachers in many types of schools - public, private,
religious, urban, and rural have shared great ideas in education but
the good ones understand it&amp;#39;s not a best practice, just a practice that
might have been best for them at a certain place and time.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve learned a lot from many, &lt;strong&gt;many&lt;/strong&gt; great people in the CS Ed space
but I also can&amp;#39;t tell you how many times I&amp;#39;ve sat in on a session and
just had to shake my head knowing that the &amp;#34;expert&amp;#34; didn&amp;#39;t really know
what they were talking about. Many times we do great but often, I
think we can do better. &lt;/p&gt;
&lt;p&gt;
Anyway, that&amp;#39;s my education rant for the day.&lt;/p&gt;
&lt;p&gt;
I wasn&amp;#39;t able to hit all the sessions but overall what I did see was
enjoyable and worthwhile. It looks like you can request access if you
want to watch the recordings of the conference &lt;a href=&#34;https://www.aixeducation.com/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;
Enjoy.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Design decisions when planning a class</title>
      <link>https://cestlaz.github.io/post/design-decisions/</link>
      <pubDate>Thu, 27 Jul 2023 10:31:49 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/design-decisions/</guid>
      <description>&lt;p&gt;
Now that I&amp;#39;ve got a little more free time and energy I decided to get
working on a short video series on elisp - the language that&amp;#39;s built
in to and intertwined with the Emacs editor.&lt;/p&gt;
&lt;p&gt;
As I&amp;#39;ve been thinking through and starting the series I started to
think about the design decisions, big and small, one makes when
designing a class, unit or lesson.&lt;/p&gt;
&lt;p&gt;
I know many teachers are forced to teach scripted, canned curricula
these days but the act of developing something and delivering it is so
much more interesting and I dare say better for students.&lt;/p&gt;
&lt;p&gt;
I thought it might be interesting to share a bit of my thought process
as my little video project takes shape.&lt;/p&gt;
&lt;p&gt;
On the big side I had to think about overall structure. Who&amp;#39;s this
series for and how should it basically be shaped. Well, primarily,
this is for me. I thought it would be a good way to dive in to Emacs
programming a bit more deeply. Of course, others in the Emacs
community have requested I do something like this and I do hope they
get something useful out of all of this.&lt;/p&gt;
&lt;p&gt;
Combining the two groups - the Emacs community and me, I figured that
most viewers would have at least some programming experience. This led
me to decide on the format. I wasn&amp;#39;t going to go through the language
and programming from scratch like a CS0 programming intro but rather,
I&amp;#39;d build small elisp programs and projects to illustrate elisp
concepts.  I felt that for my potential audience, videos incrementally
going through language constructs, library calls and features in a
systematic way would give better coverage but I thought it would be
more boring. I also thought that having little working code examples
to modify would probably be more useful for an elisp newbie who wanted
to noodle around and customize Emacs. Were I teaching a regular
class - that is something with student feedback or even in person, I
might have made a different decision.&lt;/p&gt;
&lt;p&gt;
Similar decisions for a traditional course might be objects first or
constructs first in APCS-A or whether or not to base a class on
students writing new code or working in a code base provided by the
instructor.&lt;/p&gt;
&lt;p&gt;
Maybe more interesting are the smaller choices. As an example, I just
did my first video on &lt;a href=&#34;https://cestlaz.github.io/post/learning-elisp-4/&#34;&gt;rot13&lt;/a&gt;. We wrote a function to rotate a
character, and the one to rotate a word. I decided intentionally to
leave out two things:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;integrating this into the Emacs interface&lt;/li&gt;
&lt;li&gt;handling rotating robustly - our solution assumes all lower case
letters only.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I decided to leave those two out for a few reasons.&lt;/p&gt;
&lt;p&gt;
First was video length. The video was going to be about 30 minutes
which is already longer than I&amp;#39;d like.&lt;/p&gt;
&lt;p&gt;
Second, the Emacs integration is a rich enough topic that I wanted it
to have its own video or lesson. That&amp;#39;ll be the one I record next.&lt;/p&gt;
&lt;p&gt;
Finally, making the code robust will allow us to cover conditionals -
another subject worthy of its own lesson.&lt;/p&gt;
&lt;p&gt;
By delaying those two concepts I was also able to finish the first
video with something that worked and if a view wanted, they had
something that they could explore on their own without too much
difficulty. &lt;/p&gt;
&lt;p&gt;
There were also decisions to be made on specific constructs to
include. In the video, I talked about the &lt;code&gt;mapcar&lt;/code&gt; function. This is
similar to the &lt;code&gt;map&lt;/code&gt; function you&amp;#39;ll find in many other languages
today.&lt;/p&gt;
&lt;div class=&#34;src src-emacs-lisp&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  (&lt;span style=&#34;color:#a6e22e&#34;&gt;mapcar&lt;/span&gt; func &lt;span style=&#34;color:#a6e22e&#34;&gt;list&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
Will apply func to every item in a list so &lt;code&gt;(mapcar #&amp;#39;square &amp;#39;(1 2 3
4))&lt;/code&gt; yields &lt;code&gt;(1 4 9 16)&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;
All of the code can be found &lt;a href=&#34;https://gitlab.com/zamansky/learning-elisp-code/-/blob/main/rot13.el?ref_type=heads&#34;&gt;here&lt;/a&gt; but the gist is that I had a
function to rotate a character by any amount using 2 parameters. I
then wrote another function that called that function forcing a
rotation of 13 and then used that in the map.&lt;/p&gt;
&lt;p&gt;
We could have been finished but I decided to show how elisp uses
anonymous functions using &lt;code&gt;lambda&lt;/code&gt;. This allows one to create a throw
away function on the fly. &lt;/p&gt;
&lt;p&gt;
Alternatively, I could have used Emacs&amp;#39; &lt;code&gt;apply-partially&lt;/code&gt; function to
take our function with 2 parameters and set one of them to be fixed.&lt;/p&gt;
&lt;p&gt;
For example, in bad Python pseudocode (and this won&amp;#39;t work in Python):&lt;/p&gt;
&lt;div class=&#34;src src-python&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;# assume we have a function rotate(amt,letter) which rotates letter by amount&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  rotate&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;13&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; apply&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;partially(rotate,&lt;span style=&#34;color:#ae81ff&#34;&gt;13&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;# now calling rotate-13(&amp;#39;a&amp;#39;) would be the same as&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;# rotate(13,&amp;#39;a&amp;#39;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;# apply-partially, gave us a new function with the first parameter set&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;# at 13.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
Pretty cool, right?&lt;/p&gt;
&lt;p&gt;
I think it is but I also feel that &lt;code&gt;lambda&lt;/code&gt; is more fundamental and
more widely applied across languages.&lt;/p&gt;
&lt;p&gt;
I also could have left it out altogether but felt that early
introduction, even as a little hand wavy extra, would be of benefit
later on when we use lambda more seriously.&lt;/p&gt;
&lt;p&gt;
This type of decision is similar to how I usually sequence my data
structure courses. I usually use this outline:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;recursion (blind search)&lt;/li&gt;
&lt;li&gt;linked lists / dynamic memory&lt;/li&gt;
&lt;li&gt;sorting (nlogn)&lt;/li&gt;
&lt;li&gt;stacks/queues&lt;/li&gt;
&lt;li&gt;trees&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;We get our feet wet with recursion but after a couple of weeks, we do
dynamic memory and the recursion can marinate in the subconscious.&lt;/p&gt;
&lt;p&gt;
Then, we come back to recursion a little more deeply and the dynamic
data structures marinate.&lt;/p&gt;
&lt;p&gt;
Rinse and repeat.&lt;/p&gt;
&lt;p&gt;
So, these are some of the examples of the types of decisions one makes
when designing instruction. Will I be right? I don&amp;#39;t know. If I were
teaching a real course, I&amp;#39;d figure that out over time and iterate -
education is playing the long game.&lt;/p&gt;
&lt;p&gt;
In any event, these should be conscious decisions. Creating a class,
unit, or lesson shouldn&amp;#39;t be just following the text book or the
content provider but intentional choices based on the content, the
class, the teacher and the environment.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Tech and the liberal arts</title>
      <link>https://cestlaz.github.io/post/tech-and-lib-arts/</link>
      <pubDate>Wed, 14 Jun 2023 07:12:43 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/tech-and-lib-arts/</guid>
      <description>&lt;p&gt;
Last night, I gave a talk to this years &lt;a href=&#34;https://hackny.org/&#34;&gt;HackNY&lt;/a&gt; fellows. It was a lot
of fun. I was originally going to speak about liberal arts and tech
education but I was asked to do something more on my professional
journey as a teacher so I did that. Had a great time but figured I&amp;#39;d
write about the liberal art stuff here anyway.&lt;/p&gt;
&lt;p&gt;
Over the last few months, I&amp;#39;ve noticed a surge in social media pushing
the humanities in CS education. This has mostly been a reaction to the
recent AI craze, chatGPT and related ethical concerns. This doubles
down on the ethics based push for more humanities resulting from all
of the plain as day ethic issues in the tech world.&lt;/p&gt;
&lt;p&gt;
I say surge but it&amp;#39;s all relative. I haven&amp;#39;t seen major initiatives to
change CS programs or anything like that, just more buzz.&lt;/p&gt;
&lt;p&gt;
Personally, I&amp;#39;ve been on the humanities bus for a long time. Going all
the way back to when I went to a liberal arts school as opposed to an
engineering school. Here, I&amp;#39;m not going to talk about the humanities
specifically with respect to ethics or ai, the issues du jour, but rather
what I&amp;#39;ve always spoken out on - their value to a student following a
tech path. I&amp;#39;m also not going to talk about the teaching side of
things. I&amp;#39;ll save that for another day.&lt;/p&gt;
&lt;p&gt;
On one side, a side that&amp;#39;s been covered for years is the whole cross
and interdisciplinary thing. Even before CS was big in K12 there were
plenty of efforts of including STEM in humanities classes and the
humanities in STEM classes. Makes sense. The whole silo thing that
we&amp;#39;ve evolved into works in some cases but is lacking in so many
more. For tech, the truth, contrary to most college CS programs is
that most CS majors will apply CS to some other field and not go on to
get PhDs. This means that having CS students with deep exposure to
other fields is a good thing. It&amp;#39;s also easy - opportunities abound
just by choosing the right problems to explore. One I love is the
&lt;a href=&#34;https://www.netlogoweb.org/launch#https://www.netlogoweb.org/assets/modelslib/Sample%20Models/Biology/Termites.nlogo&#34;&gt;termite gathering&lt;/a&gt; model in NetLogo. On it&amp;#39;s own, it explores just
that - termites gathering woods as an emergent behavior. Beyond that,
though, I&amp;#39;ve read articles describing the same model as an exploration
of things as widely disparate as galaxy formation and wealth distribution.&lt;/p&gt;
&lt;p&gt;
The other side, and more interesting one as far as I&amp;#39;m concerned is
the value of a liberal arts education to a CS major ignoring the
above interdisciplinary utility. Disclaimer- I&amp;#39;m going to talk a bit
about the differences in a liberal arts education vs a more
engineering one (for lack of a better term). This does &lt;strong&gt;not&lt;/strong&gt; mean that
individuals educated in one way are necessarily in any way lacking in
the other. That comes down to the individual.&lt;/p&gt;
&lt;p&gt;
I was once talking to two of my closest friends, independently about
this. Changing names to ensure privacy, let&amp;#39;s call my friend educated
in a liberal arts school Liberal Arts Larry and my engineer friend,
Engineering Ed.&lt;/p&gt;
&lt;p&gt;
Talking about his education, Ed was able to pinpoint where he learned
specifically useful things for his career. &amp;#34;I really got Fourier
Transformations when a Took blahblahblah&amp;#34; or &amp;#34;automata really made
sense after I took compilers.&amp;#34;&lt;/p&gt;
&lt;p&gt;
Larry on the other hand described his experience by saying &amp;#34;I really
can&amp;#39;t say anything specific in any of my core (liberal arts) courses
but as a whole they&amp;#39;ve shaped who I am today and at some fundamental
level they inform so many of my decisions.&amp;#34;&lt;/p&gt;
&lt;p&gt;
Interesting difference, at least between these two. Also, I would be
remiss if I didn&amp;#39;t mention that Ed is very well read in the classics,
and knowledgeable in music and the arts and on the other side Larry is
as strong technically as anyone I know. At the same time, both were CS
majors and both have been very successful over their careers.&lt;/p&gt;
&lt;p&gt;
We can drill down more on Larry&amp;#39;s statement to really think about
how liberal arts, if taken by a student ready for them, shine. High
School students frequently tell me they want to work on games. They
think they need all the science and math, and to a certain extent,
they might, but I ask them, what is a game really? It&amp;#39;s a
story. Playing a game is being a player in a story. Every game I can
think of, save one &lt;sup class=&#34;footnote-reference&#34;&gt;&lt;a id=&#34;footnote-reference-1&#34; href=&#34;#footnote-1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; tells a story. Story telling is liberal
arts. Other aspects that might influence a young individual embarking
on their tech career? How about psychology - how people
thing. Certainly a boon in understanding your users and pitching a
solution. In a similar vein, anthropology. Okay, maybe not the bone
digging side of physical anthro but certainly cultural anthropology -
how groups of people live - customs, cultures, taboos
etc. Understanding people is not part of a CS curriculum but it&amp;#39;s
layered all over the humanities. Of course literature and writing
quite literally is story telling and art and related fields as well
and even history, particularly if it&amp;#39;s not just a collection of facts
but more  cause and effect based. &lt;/p&gt;
&lt;p&gt;
In short, at least in my opinion, unless you&amp;#39;re really going down the
engineering side rabbit hole a liberal arts education can be super
beneficial to students moving into tech and so many dismiss BA
offering schools in favor of a BS. This isn&amp;#39;t even getting to the
ethics and AI side of things but, as I said up top - that&amp;#39;s for another post. &lt;/p&gt;
&lt;p&gt;
The catch with all of this, though, is that the student must be ready
for a liberal arts education. Our society pushes really hard on the
&amp;#34;college is for jobs only&amp;#34; button and while I&amp;#39;ve argued that a BA can
in fact be better for a tech career in many cases many dismiss the
idea. How many students look for the easiest distribution requirements
and take their liberal arts classes in a vacuum - only about the class
itself as opposed to how it can grow them as a person. In my
experience, most colleges don&amp;#39;t help matters with professors self
silo-ing their subjects making matters worse. If a student doesn&amp;#39;t
approach  a liberal arts education with the right attitude and
investment, much of the value can be lost.&lt;/p&gt;
&lt;p&gt;
Still, I hope that the pendulum will swing and more people will see
how a tech education without the humanities is only half an
education. I&amp;#39;ve been talking about it for years. I hope others start
to do the same.&lt;/p&gt;
&lt;div class=&#34;footnotes&#34;&gt;
&lt;hr class=&#34;footnotes-separatator&#34;&gt;
&lt;div class=&#34;footnote-definitions&#34;&gt;
&lt;div class=&#34;footnote-definition&#34;&gt;
&lt;sup id=&#34;footnote-1&#34;&gt;&lt;a href=&#34;#footnote-reference-1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;
&lt;div class=&#34;footnote-body&#34;&gt;
&lt;p&gt;Tetris&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Rubrics for teacher observations are garbage</title>
      <link>https://cestlaz.github.io/post/observation-rubrics/</link>
      <pubDate>Wed, 09 Feb 2022 12:12:26 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/observation-rubrics/</guid>
      <description>&lt;p&gt;
There have been a lot of bad ideas foisted onto educators over the
course of my career. One of the ones that always pissed me off was the
use of a rubric for teacher observation. Specifically, using the
Danielson Framework. &lt;/p&gt;
&lt;p&gt;
The Danielson Framework is a LONG laundry list of topics and concepts
and for each a teacher could be rated ineffective, developing,
effective, or highly effective.&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s garbage.&lt;/p&gt;
&lt;p&gt;
Sure, there are some good things in the framework but using a
restrictive rubric to judge a teacher is just a bad idea. Even the
frameworks creator, Charlotte Danielson publicly stated when this
nonsense got started that the framework should not be used to evaluate
teachers. Of course departments of education would give a nod nod
wink wink and say &amp;#34;no, it&amp;#39;s not for evaluation, it&amp;#39;s for teacher
improvement.&amp;#34;&lt;/p&gt;
&lt;p&gt;
I remember talking to a colleague at Stuy. She hated the Danielson
Framework that was being forced on teachers for observations. She was
known to be a strong teacher but according to Danielson, she was off
the charts good. She reason she hated it was because she recognized
that her teaching style just happened to map well to the framework du
jour and eventually it would be a different rubric and she would no
longer be good.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve actually seen this happen - teachers going from good to bad or
the reverse based on an observation rubric. The teacher didn&amp;#39;t change,
nor the students but change the rubric and you can get the results you
want. Good, or more frequently bad, I mean it was then Governor Cuomo
who said that his teacher evaluation metric was clearly no good
because too many teachers were scoring well.&lt;/p&gt;
&lt;p&gt;
Why am I bringing this up? Because student teachers. My CS Education
Masters program is about to have it&amp;#39;s first graduates and New York
State will have it&amp;#39;s first two newly certified CS teachers with said
degrees. They&amp;#39;re both finishing up our program with a last course (CS
Topics) and student teaching. Both of our student teachers will have
to be officially observed three times and ultimately I&amp;#39;ll have to rate
them and enter those ratings into Hunter&amp;#39;s system.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m ranting on Danielson because Hunter uses said framework to
evaluate its student teachers. Like an institution, Hunter&amp;#39;s a complex
beast and there&amp;#39;s both good and bad but seeing what is essentially the
Danielson framework being used to evaluate student teachers knocked
them (us) down a peg in my book.&lt;/p&gt;
&lt;p&gt;
Now, from a top down approach, using something like Danielson makes
sense. It gives a series of check boxes making things easy to measure
even if they&amp;#39;re the wrong things. It also made sense back when it came
to be because of the leadership model espoused by people like Michael
Bloomberg where he would take young teachers with a year or two of
experience and make them principals. A horrible idea which persists to
this day. Traditionally, an AP or P would have decades of teaching
under their belt. They knew what a good lesson looked like. Not
Bloomberg era principals. I mean, it takes a dozen years before you&amp;#39;re
really an intermediate stage teacher. A two year principal doesn&amp;#39;t
have a chance nor a clue.&lt;/p&gt;
&lt;p&gt;
The bottom line is that good (and bad) teaching is so varied and
nuanced that you can&amp;#39;t boil it down to a rubric. All you can say are
things like look for questioning, engagement etc..&lt;/p&gt;
&lt;p&gt;
My approach to observations was set by my first supervisor at Seward
Park High School. He was a master teacher. Just ask him. Unlike many
APs who just teach honors or the top level class, he would rotate
classes among his entire department. He would teach everything from
calculus to remedial math. He&amp;#39;d say &amp;#34;those kids deserve me too.&amp;#34; Yeah,
he was arrogant, but he really was a master teacher. He was also great
if he liked you but a horror if he didn&amp;#39;t. Fortunately, he liked me.&lt;/p&gt;
&lt;p&gt;
He said that the one thing you have to keep asking yourself when you
observe a class is &amp;#34;is learning happening.&amp;#34; It&amp;#39;s that simple. Then,
it&amp;#39;s up to you as the observer to figure out where, how and why and
what you can suggest to make it better (while observing the cardinal
rule of not fixing the lesson). This makes all the sense in the world
to an experienced educator and it allows them to hone in on an
observee&amp;#39;s strenghts and weaknesses while also adjusting for the class
and circumstances.&lt;/p&gt;
&lt;p&gt;
If you&amp;#39;ve got good observers and trust them, it works and works very
well.&lt;/p&gt;
&lt;p&gt;
What don&amp;#39;t work? Detailed rubrics by non teachers.&lt;/p&gt;
&lt;p&gt;
Unfortunately, right now, this is just another idiotic idea that
teachers are forced to deal with and just another thing driving
teachers away from the profession.&lt;/p&gt;
&lt;p&gt;
Will the powers that be ever learn? Probably not so for now it&amp;#39;s up to
good supervisors to shield their teachers from the nonsense and I
hope, in my capacity, when I&amp;#39;m able I can do the same.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Do you need to know assembly to be a computer scientist?</title>
      <link>https://cestlaz.github.io/post/assembly/</link>
      <pubDate>Wed, 19 Jan 2022 06:47:18 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/assembly/</guid>
      <description>&lt;p&gt;
Another recent discussion online asked &amp;#34;do you need to know assembly
language to be a computer scientist?&amp;#34;&lt;/p&gt;
&lt;p&gt;
Sides quickly formed. On one side, it was a strict requirement. Some
going so far as saying you &lt;strong&gt;had&lt;/strong&gt; to start with it or at worst a
language like C. On the other side you had people claiming that it&amp;#39;s
wholly unnecessary for most CS graduates like many of the classes we
require of a CS major (I&amp;#39;m looking at you Calc II and beyond).&lt;/p&gt;
&lt;p&gt;
I don&amp;#39;t dispute that many people with CS degrees have great tech
careers and never program in assembly. Further, the idea that a low
level assembly programmer describes what a &amp;#34;computer scientist looks
like&amp;#34; or &amp;#34;should look like&amp;#34; is pretty off base.&lt;/p&gt;
&lt;p&gt;
On the other hand, I&amp;#39;d argue that a well educated computer scientist
should have some knowledge of low level concepts which can probably
best be explored through some exposure to assembly language.&lt;/p&gt;
&lt;p&gt;
To start, what is a computer scientist? As a field we still haven&amp;#39;t
worked that one out. Certainly, people employed as professors in
computer science departments are pretty much, by definition, computer
scientists but that&amp;#39;s the minority of CS majors.&lt;/p&gt;
&lt;p&gt;
To me, and this isn&amp;#39;t really a great formal definition, a person who
employs the creative and problem solving techniques associated with
computer science in their day to day can certainly call themselves a
computer scientist.&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s a wishy washy definition, I know but to me, it works. Someone
employed as a software engineer &lt;strong&gt;can&lt;/strong&gt; be a computer scientist or they
might not be. It depends on their job and how they approach it. Say
said SE is given screen descriptions, layouts and what to do when
events happen and they write code to implement this, they&amp;#39;re not being
a computer scientist. Likewise, if they implement an algorithm
specifically given to them for a task. On the other hand, if the same
person designs the interface making creative decisions involving
accessibility and usability or solves a problem using or designing an
algorithm then implementing one, then they would be, in my view acting
as a computer scientist.&lt;/p&gt;
&lt;p&gt;
Of course, in the general sense a SE could be a real software
engineer, software architect, or many more things as well.&lt;/p&gt;
&lt;p&gt;
So, does a computer scientist &lt;strong&gt;need&lt;/strong&gt; to actively know assembly?
No. That said, do they benefit from knowing something about it? I&amp;#39;d
say yes.&lt;/p&gt;
&lt;p&gt;
Years ago, I was watching a special with Itzhak Perlman, arguably the
greatest violinist of a generation and one of my favorites. He was
talking to and playing with a bunch of &lt;a href=&#34;https://en.wikipedia.org/wiki/Klezmer&#34;&gt;klezmer&lt;/a&gt; musucians. Or rather, I
should say trying to play with. Klezmer is something of a Jewish jazz
with a lot of improvisation. Perlman understood this, could
meaningfully converse about it with the other musucians but he had the
hardest time trying to keep up with them. Nobody could seriously say
that Izhak Perlman wasn&amp;#39;t and isn&amp;#39;t a brilliant musician and artist
but he really couldn&amp;#39;t play improvisational jazz. His training and art
are just in a different corner of the music world. That said, he was
certainly well versed in it. He knew jazz even though he didn&amp;#39;t
perform it.&lt;/p&gt;
&lt;p&gt;
I also saw this at a Bobby Mcferrin concert. He was performing with a
small string orchestra. I think maybe it was Gidon Kremer&amp;#39;s Kremerate
Baltica but I don&amp;#39;t remember. At one point he was calling out the
individual orchestra members to do some improv. It did not go
well. Again, these were all clearly master artists and they certainly
knew and were comfortable with Jazz, just not performing it on the
fly.&lt;/p&gt;
&lt;p&gt;
In case you really want to see what I&amp;#39;m talking about, I&amp;#39;ll give one
more example:&lt;/p&gt;


&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/6mRT61rRSGc?t=37&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/iframe&gt;
&lt;p&gt;
Having some knowledge of assembly, or more specifically, how low level
things work is what I call a &amp;#34;latin&amp;#34; of CS. Understanding things like
memory or how a processor works help an individual understand buffer
overflows or why data types matter, why floating point calculations
are innacurate or why a hash table has to be sparse. They may never
program in assembly but some knowledge will make them a stronger
computer scientist. I would say the same for my other CS latin -
theory. They might not use it day to day but it will help shape their
decisions and make them a stronger software engineer or whatever.&lt;/p&gt;
&lt;p&gt;
So, can you be a gainfully employed tech person and never have seen
anything low level? Of course. Can you do computer science stuff and
say the same? Sure. But a well educated, well rounded computer
scientist will have had some exposure to low level concepts and have
some base level understanding.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>How Will Online Influence Teaching</title>
      <link>https://cestlaz.github.io/post/how-will-online-influence-teaching/</link>
      <pubDate>Mon, 03 Jan 2022 08:53:28 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/how-will-online-influence-teaching/</guid>
      <description>&lt;p&gt;
I always enjoy Fred Wilson&amp;#39;s predictions for the new year over on his
  &lt;a href=&#34;https://avc.com&#34;&gt;blog&lt;/a&gt; and &lt;a href=&#34;https://avc.com/2022/01/what-is-going-to-happen-in-2022&#34;&gt;this year&lt;/a&gt;  was no exception.&lt;/p&gt;
&lt;p&gt;
I was inspired to think a bit on his education prediction:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;K12 systems around the US (and around the world) faced with teacher
shortages and desperate to erase several years of learning shortfalls,
will increasingly adopt online learning services in the school
building in lieu of and in addition to in-class learning.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Fred&amp;#39;s a VERY sharp and perceptive guy and a friend and I think
he&amp;#39;s correct on the adoption of online learning but I thought a couple
of points merited a deeper dive from a guy who&amp;#39;s spent a lifetime in
the trenches.&lt;/p&gt;
&lt;p&gt;
The first thing I think worth talking about, and this isn&amp;#39;t really
about the adoption of online learning are learning shortfalls They
don&amp;#39;t exist. Learning shortfalls due to Covid, also described as
learning loss is a made up concept. Usually pushed by politicians.&lt;/p&gt;
&lt;p&gt;
The claim is that due to COVID students learned less than what they
were supposed to and we have to make that up. Less than what? Less
than who? Everyone in the world was hit with this.&lt;/p&gt;
&lt;p&gt;
This comes back to our countries love affair with high stakes
testing - every student MUST finish Algebra by 8th grade, or MUST have
a certain reading proficiency by 5th grade (whatever that means).&lt;/p&gt;
&lt;p&gt;
On the other hand, we&amp;#39;re told that students work at their own
pace.&lt;/p&gt;
&lt;p&gt;
Which is it?&lt;/p&gt;
&lt;p&gt;
The truth is that a large amount of specific topics we cover in K12
could be eliminated and we&amp;#39;d be none the worse for wear. In Algebra 2
/ Trig there&amp;#39;s around a month of Circle Geometry. It seems randomly
placed and really doesn&amp;#39;t introduce any new meaningful concepts. I
suspect that it originally was placed in the course when Alg2/Trig was
the terminal HS math course and people through &amp;#34;well, kids should see
this sometime&amp;#34; but now this is no longer the case. We could easily
knock it out.&lt;/p&gt;
&lt;p&gt;
Likewise, look at how Geometry evolved. Even though it&amp;#39;s supposed to
be a course about proof many schools only pay lip service to teaching
it. This is a result of high stakes testing. Teachers know that
teaching proof is HARD and learning it likewise. They also know that
the students need to pass the regents to graduate and that both
student and teacher will be judged on passing the exam. Further, they
know that the best route to get the student passing is to barely deal
with proof and focus on the rest of the class which is easier to teach
and learn and is worth the lions share of the points on the regents.&lt;/p&gt;
&lt;p&gt;
In English we can read one less Shakespeare and I&amp;#39;m sure we can go
down the list we&amp;#39;ll find that a lot of these things that kids didn&amp;#39;t
learn are really just arbitrary.&lt;/p&gt;
&lt;p&gt;
The other truth is that indeed people learn at different rates and
if we really cared about education we&amp;#39;d admit and deal with this
rather than keeping our lock step testing based system.&lt;/p&gt;
&lt;p&gt;
So, learning shortfalls are manufactured and could easily be
dismissed.&lt;/p&gt;
&lt;p&gt;
With that aside, we can look at online learning.&lt;/p&gt;
&lt;p&gt;
Just to get started - I think that online learning has a place. It can
be at times a great supplement to in person learning and at times it
can be the superior option. I&amp;#39;ll write more about that soon. Probably
not for another week or so since Devorah and I are hoping to get away
to San Diego for a little vacation later this week. My concern comes
from me being much more the pessimist than Fred.&lt;/p&gt;
&lt;p&gt;
Well, I used to be more of an optimist but working in the system for
30 years has a way of beating you down. Now I&amp;#39;m much more of a &amp;#34;hope
for the best, expect the worst&amp;#34; kind of guy.&lt;/p&gt;
&lt;p&gt;
My first fear is that online learning will be used just as Fred
mentioned, due to teacher shortages. I think this is likely to happen
and it&amp;#39;s not going to be pretty. Better to actually address teacher
shortages by, I don&amp;#39;t know, paying teachers fairly and having them
work in safe environments with reasonable work loads.&lt;/p&gt;
&lt;p&gt;
Instead, I see a new wave of technology based solutions like online
charters which have proven to be ripe for scandal or programs like the
technology based &amp;#34;credit recovery&amp;#34; courses that came online under
Bloomberg. These were self paced online courses where students clicked
through repeatedly. Great for graduation rates. Horrible for actual
learning.&lt;/p&gt;
&lt;p&gt;
We&amp;#39;re also going to see technology being used not to make teachers
more effective but either to add to their workload and/or class sizes.
A small and maybe frivolous example is when politicians were talking
about eliminating snow days - they&amp;#39;ll just teach online. Now, since
you don&amp;#39;t know a snow day is coming this leaves a teacher to scramble
at the last minute to come up with something and given how much time
can go into prep, this is a BIG add to the teachers week. As a
teacher, I loved snow days not so much as a &amp;#34;party day&amp;#34; but rather as
a day where I got the gift of a day back to catch up on planning,
grading, and paperwork. Besides, I think that rare surprise day off is
actually healthy for kids.&lt;/p&gt;
&lt;p&gt;
A bigger example is that I&amp;#39;m thinking that we&amp;#39;ll see schools expecting
teachers be available to students and parents 24x7. We already see
this starting.&lt;/p&gt;
&lt;p&gt;
A third would be instead of a small class where teachers and students
interact using technology to balloon up the class size. So much of
teaching, particularly in K12 is about relationships and interactions
and you just don&amp;#39;t get that when you decide to do a class on computers
and drive up the enrollment.&lt;/p&gt;
&lt;p&gt;
You&amp;#39;ll also see technology that seem to help teachers but even those
have a downside. Prime example - autograders. They&amp;#39;re great for
providing students with instant feedback and for grading &amp;#34;short
answer&amp;#34; or &amp;#34;right or wrong&amp;#34; questions but when a teacher grades a
teacher sees a students work and gains insights into the student. If
I&amp;#39;m not grading projects, I&amp;#39;m losing that insight.&lt;/p&gt;
&lt;p&gt;
Actually, a great example is looking at student projects in the old
world and in the new one.&lt;/p&gt;
&lt;p&gt;
In the old world, a project is assigned in class. Maybe we have a lab
day or two, then some work on their own time. More lab days, then
finally the project is due and the teacher grades. With all that in
class time, the teacher is observing and interacting and getting to
know the students and their work. To be honest, by the time I grade a
project, I already know most of the story but reading over the code
and running the program on my own is the final piece.&lt;/p&gt;
&lt;p&gt;
The new way? The project is assigned. Work is done outside of hte
teacher&amp;#39;s view. The teacher only sees the students work if they ask
for help outside of class hours (since you can&amp;#39;t use that important
synchronous class time for that with 100+ students) and then it&amp;#39;s
autograded.&lt;/p&gt;
&lt;p&gt;
The old way takes more time and more work but that&amp;#39;s teaching and
learning. The new way will work great for the autodidacts and a number
of kids will flow through the machine but here technology which would
seem like a win, really isn&amp;#39;t.&lt;/p&gt;
&lt;p&gt;
This is a lot of &amp;#34;expect the worst&amp;#34; and I do want to be clear - I love
tech and think that tech can be a great boon to education if done
right. I&amp;#39;m just really wary of past experience being a predictor of
how things will go in the future. I think Smart, well meaning people
are going to continue to come up with wonderful tools that could do
worlds of good for students and teachers but I have little confidence
in the decision makers deploying them in ways that will truly benefit
students.&lt;/p&gt;
&lt;p&gt;
I hope I&amp;#39;m wrong and none of this pessimism will stop me from working
with technologists, ed tech people, and playing with the new toys as
they become available. I just also want to be prepared for the worst
while I&amp;#39;m hoping for  the best.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>How The Hash Is Made</title>
      <link>https://cestlaz.github.io/post/how-the-hash-is-made/</link>
      <pubDate>Thu, 16 Sep 2021 17:08:19 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/how-the-hash-is-made/</guid>
      <description>&lt;p&gt;
Following up on my &lt;a href=&#34;https://cestlaz.github.io/post/what-they-used-to-know/&#34;&gt;last post&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;
Soon after I read that tweet, I read Julia&amp;#39;s post on &lt;a href=&#34;https://jvns.ca/blog/2021/09/10/hashmaps-make-things-fast/&#34;&gt;hash tables&lt;/a&gt;. This
got me thinking more about what is and isn&amp;#39;t taught in school. Hash
tables were always taught in CS programs but back in the day you might
not have used them much after your data structures or algorithms
classes. Nowadays you&amp;#39;re much more likely to use them as they&amp;#39;re built
in to so many platforms.&lt;/p&gt;
&lt;p&gt;
Hash tables and related structures are great - I use them all the time
but they can also become a go to without thinking it through. This
actually came up in conversation with the same my high level SE friend
at that big bank from the last post. He also noticed that many interviewees would always
go right to the hash table even when there were red flags in the
question to warn away fro them.&lt;/p&gt;
&lt;p&gt;
For a hash table to get you that nice fast expected constant time
performance, it has to be sparse - few collisions. If you implement a
closed hash table (all the data is in a single array) and there&amp;#39;s not
a lot of spare space, it will fill up and all of a sudden that O(1)
insertion and retrieval time will go linear. I can&amp;#39;t say for certain
but I&amp;#39;m guessing the vast majority of Python programmers who use hash
tables (dictionaries) all the time don&amp;#39;t really know this or if they
do never think about it.&lt;/p&gt;
&lt;p&gt;
Is this a byproduct of using the built in implementations in college
combined with self taught programmers never seeing this at all? Maybe
but this was probably a deficiency even in my day.&lt;/p&gt;
&lt;p&gt;
This also came up when I accidentally interviewed for a position at
Google. There was a question about storing and accessing a bunch of
data. I don&amp;#39;t remember the question but there was a key line - &amp;#34;you
have unlimited storage&amp;#34; which is the trigger phrase for &amp;#34;use a hash
table.&amp;#34; I got a kick out of it but felt this was a you know it or you
don&amp;#39;t. I think I mentioned it to the interviewer.&lt;/p&gt;
&lt;p&gt;
This also brought to mind another example. Not mine - I read this in
John Bentley&amp;#39;s terrific book &lt;a href=&#34;https://tfetimes.com/wp-content/uploads/2015/04/ProgrammingPearls2nd.pdf&#34;&gt;&amp;#34;Programming Pearls.&amp;#34;&lt;/a&gt; The gist was that a
room full of very smart people were implementing a binary search. The
idea is that you have an array of data that is sorted and instead of
looking through every item one at a time, you calculate the middle of
the array, look there and then, if you haven&amp;#39;t found the item, you
throw away half the data and repeat the process with the remaining
half.&lt;/p&gt;
&lt;p&gt;
Every now and then, the implementations had a problem and nobody could
figure out why. As it turns out, in calculating the midpoint, they&amp;#39;d
add the lower value and the higher value and then divide the sum by
two.&lt;/p&gt;
&lt;p&gt;
Sounds reasonable.&lt;/p&gt;
&lt;p&gt;
The problem was that when low and high were at the upper end of the
data set the addition would go past the largest integer wrapping
around and causing wonky results.&lt;/p&gt;
&lt;p&gt;
Pretty subtle error but at least you&amp;#39;ve got a shot at figuring it out
if you understand integer sizes and how they work on your machine. &lt;/p&gt;
&lt;p&gt;
Having some solid low level knowledge won&amp;#39;t prevent this bug from
cropping up but it will give you a fighting chance at fixing it if it
does. &lt;/p&gt;
&lt;p&gt;
This particular problem probably won&amp;#39;t come up these days as integers
are MUCH larger than back in the day but I think it illustrates the
point.&lt;/p&gt;
&lt;p&gt;
Anyway, just more food for thought on how CS Education has changed
over the years, what we leave in, and what we leave out.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>What They Used To Know</title>
      <link>https://cestlaz.github.io/post/what-they-used-to-know/</link>
      <pubDate>Thu, 16 Sep 2021 10:42:05 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/what-they-used-to-know/</guid>
      <description>&lt;p&gt;
I saw this tweet by Julia Evans the other day.&lt;/p&gt;

&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;if you&amp;#39;ve
been working in computing for &amp;gt; 15 years -- are there fundamentals
that you learned &amp;quot;on the job&amp;quot; 15 years ago that you think
most people aren&amp;#39;t learning on the job today?&lt;br&gt;&lt;br&gt;(I&amp;#39;m
thinking about how for example nobody has ever paid me to write C
code)&lt;/p&gt;&amp;mdash; 🔎Julia Evans🔍 (@b0rk) &lt;a
href=&#34;https://twitter.com/b0rk/status/1435965181847343108?ref_src=twsrc%5Etfw&#34;&gt;September
9, 2021&lt;/a&gt;&lt;/blockquote&gt; &lt;script async
src=&#34;https://platform.twitter.com/widgets.js&#34;
charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;p&gt;
I&amp;#39;ve never met Julia but have been following her on Twitter and
reading her &lt;a href=&#34;https://jvns.ca/&#34;&gt;blog&lt;/a&gt; for some time now.&lt;/p&gt;
&lt;p&gt;
The tweet got me thinking. Not so much about learning on the job but
rather on how colleges prepare their students. Recent boutique majors
and concentrations notwithstanding, a degree in CS seems to have
largely stayed the same from the early/mid 1980s when I got my BA to
today. There are variations but it was and still is largely&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;programming–&amp;gt;data structures–&amp;gt;algorithms&lt;/li&gt;
&lt;li&gt;some systems or OS stuff&lt;/li&gt;
&lt;li&gt;some theory &lt;/li&gt;
&lt;li&gt;math: calc 1, calc 2, discrete, linear, maybe stats&lt;/li&gt;
&lt;li&gt;another requirement or two which might differ based on institution&lt;/li&gt;
&lt;li&gt;electives&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Sure, programs have changed over the years. At one point, computer
graphics was hot. Now, not so much. Courses like compilers also used
to be required more frequently but overall things look much the
same. That said, there have been some major changes - at least from my
perspective and those changes really affected how students were
prepared for professional careers. Now of course this is only my
perspective so who knows how accurate it is. Regardless, it should be
good food for thought.&lt;/p&gt;
&lt;p&gt;
I got my BA back in the mid 80s. That was the start of the PC
generation. Colleges were starting to get computer labs full of
IBM-PCs and then  later clones. MS-DOS ruled the day. &lt;/p&gt;
&lt;p&gt;
What did that mean?&lt;/p&gt;
&lt;p&gt;
It meant that while a few years prior, students used a time sharing
system for their programming classes now they were using  an
IBM-PC with Turbo Pascal. I can&amp;#39;t say for sure but looking back, it
seemed that people educated in PC heavy programs had a weaker sense of
all those issues that come with multiple people and multiple processes
happening on a machine at the same time.&lt;/p&gt;
&lt;p&gt;
On the other hand, having a relatively simple computer - one that you
had full control over may have led to an easier time in understanding
the low level ins and outs. You could learn about low level issues on
a PC and really understand everything. That doesn&amp;#39;t seem to happen as
much nowadays when even our personal computers and computing devices
run more like those multi user computers of old than the single
process no threads IBM-PC.&lt;/p&gt;
&lt;p&gt;
There was an opportunity to recapture this right before the Arduino
got big. The Arduino was based on an Atmel processer with a small
instruction set - a platform where a student could understand
everything from wire to application. For all the good that the Arduion
and related projects have led to, they&amp;#39;ve abstracted that low level
away.&lt;/p&gt;
&lt;p&gt;
A few years later Java became a popular college CS language followed
by Python. Both of these took memory management out of the core
programming-&amp;gt;data structures-&amp;gt;algorithms sequence. Sure, you probably got to
learn a bit about memory management and related issues in your systems
classes but I have to believe you didn&amp;#39;t really own that knowledge
like you would have had you had to manage memory throughout the core
courses.&lt;/p&gt;
&lt;p&gt;
Now, I&amp;#39;m not knocking the change. Moving to Java brought some
improvements and so does moving to Python. It&amp;#39;s just that as a
language or platform giveth it also taketh away.&lt;/p&gt;
&lt;p&gt;
The interesting things here is that the changes I noticed were not
directly intended but rather byproducts of changes made for other
reasons.&lt;/p&gt;
&lt;p&gt;
A final unintended consequence I noticed also seems to be a byproduct
of the Java revolution. Years ago after many programs had adopted
Java I was talking to a friend who was a high level SE at a big NY
bank. At the time finance was NY&amp;#39;s biggest tech employer. I think
Google might have recently moved to NY but wasn&amp;#39;t yet the player
they&amp;#39;d become - this was pre-IPO days and NY tech hadn&amp;#39;t yet
exploded. My friend was lamenting after a long day of interviews. None
of his interviewees - all from top rated CS colleges could handle what
he viewed as easy algorithm questions. Questions a that were
considered close to trivial by his interviewees from a few years
back.&lt;/p&gt;
&lt;p&gt;
After some discussion, we developed a theory. It might not be true but
looking around the landscape in the months and years following that
discussion, it might hold some water. With the acceptance of Java
students were now, more frequently using library calls. The .sort
method, the built in List, Tree, Map, and Set classes and more. This
is not to say that the students hadn&amp;#39;t learned about, say, the
mergesort in their data structures or algorithms classes but rather
they didn&amp;#39;t live it. Maybe  they did a quick implementation but then
it was gone from their memories.  Back in the day, most people in my
peer group started in Pascal and frequently moved to C. Even though C
had it&amp;#39;s built in sort, we coded our own more frequently. We also
didn&amp;#39;t have easy access to all the data structure and algorithm
libraries that Java had so we rolled our own and continued to use
them. When kids who did that interviewed, they could more easily see
how an interview problem related to an algorithm they coded and
tweaked half a dozen times. On the other hand, those that saw it once
and moved to a library didn&amp;#39;t have that in depth understanding.&lt;/p&gt;
&lt;p&gt;
Now, this is not to say that it was better in the old days. When they
removed memory management, they were able to add other
topics. Likewise when students didn&amp;#39;t need to implement their own
version of everything for their class projects, instructors could
steer students towards learning other new things.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m not making a judgement call on better or worse but rather that
even without formal curricular changes the strengths and weaknesses of
our CS graduates have changed over the years quite possibly as a
result of unintended consequences of a variety of decisions.&lt;/p&gt;
&lt;p&gt;
I also don&amp;#39;t this only happens in CS. Take a look at math - the big
one would probably be bringing the calculator to the classroom. The in
your face change was the idea that on the one hand, students would
become weaker in arithmetic and manual calculation. On the other hand,
time could be spent on what might be considered richer topics due to
time saved. Lost in the shuffle were topics like linear
interpolation - a useful skill taught to navigate log and trig
tables. Those skills would be forever lost.&lt;/p&gt;
&lt;p&gt;
So, there&amp;#39;s my rant and ramble inspired by Julia&amp;#39;s post.&lt;/p&gt;
&lt;p&gt;
A day after I saw the tweet I saw &lt;a href=&#34;https://jvns.ca/blog/2021/09/10/hashmaps-make-things-fast/&#34;&gt;this post&lt;/a&gt; by Julia. Unless some
shiny object distracts me I think I want to look at how the unintended
consequences from some of the changes I mentioned directly relates to
it.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Hunter College CS Teacher Certification - Final Project Fun Time</title>
      <link>https://cestlaz.github.io/post/teacher-cert-presentations/</link>
      <pubDate>Tue, 28 Jul 2020 10:09:25 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/teacher-cert-presentations/</guid>
      <description>&lt;p&gt;
Well, we just delivered the last formal piece of instruction for the
summer intensive. Writing this post between visits to breakout rooms
as the cohort works on their final projects.&lt;/p&gt;
&lt;p&gt;
Tomorrow and Thursday will be presentation time. Each group will give
spend thirty minutes teaching us all about some topic in CS along with
the plan for how we could teach the topic to our kids. We&amp;#39;ve got a few
more things to talk about as a group but it&amp;#39;s mostly time to sit back
and enjoy the show.&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s been a long hard month for JonAlf Topher and me. A lot of work
goes in to a first time program and when you&amp;#39;re meeting every day all
day with off hours student support there&amp;#39;s not a lot of time for the
inevitable steering that comes with something new.&lt;/p&gt;
&lt;p&gt;
Now though we can sit back and enjoy some presentations by some great
teachers and provide some meaningful feedback. We&amp;#39;ve got a nice list
of topics.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Blockchain&lt;/li&gt;
&lt;li&gt;Genetic Algorithms&lt;/li&gt;
&lt;li&gt;Data Mining&lt;/li&gt;
&lt;li&gt;Machine Learning&lt;/li&gt;
&lt;li&gt;Natural Language Processing&lt;/li&gt;
&lt;li&gt;Public Key Encryption&lt;/li&gt;
&lt;li&gt;Data Visualization&lt;/li&gt;
&lt;li&gt;Classic AI - Decision Trees&lt;/li&gt;
&lt;li&gt;Classic AI - search&lt;/li&gt;
&lt;li&gt;Databases / SQL&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Obviously we&amp;#39;re not going to learn everything about topics like NLP or
ML but rather a single unit that can be done in a lass.&lt;/p&gt;
&lt;p&gt;
In the end, the idea is that every cohort member will have a nice set
of topics and support materials from which to choose for their classes.&lt;/p&gt;
&lt;p&gt;
Should be a lot of fun.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Hunter&#39;s CS Teacher Certification program Week 2</title>
      <link>https://cestlaz.github.io/post/teacher-cert-week-2/</link>
      <pubDate>Sun, 12 Jul 2020 10:31:53 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/teacher-cert-week-2/</guid>
      <description>&lt;p&gt;
Time for some thoughts after week 2.&lt;/p&gt;
&lt;p&gt;
Since this is the inaugural edition of our program and there was no
way to really know what the cohort would be like we&amp;#39;ve been adjusting
on the fly. This was expected but we&amp;#39;re finally starting to settle
in. We&amp;#39;re still finding more zoom heavy days but as we move towards
the end of our data structures segment there should be fewer of those.&lt;/p&gt;
&lt;p&gt;
The cohort is progressing nicely. They&amp;#39;re working hard - we&amp;#39;ve got
some members who are former CS majors or otherwise came in with a
strong CS background but many were relative beginners. They&amp;#39;re all
coming along. We have to remind them that some topics just take
time. I&amp;#39;ve taught these subjects for years at Stuy but also at Hunter
College and NYU and recursion just takes time. So do Linked Lists and
dynamic data structures. It&amp;#39;s typical for CS majors not to be really
comfortable with them for a couple of years. I think I was near the
end of my college days before I&amp;#39;d roll out a pointer based solution to
a problem with the same comfort as with an array. So, the long and
short is that they&amp;#39;re doing great.&lt;/p&gt;
&lt;p&gt;
When we started, we tried to integrate a discussion of pedagogy with
the CS but found that we were expecting too much as the CS was new to
a large portion of the group. We decided instead to model assorted
teaching techniques but keep the analysis and discussion mostly to the
CS. Last Friday though we spent most of the morning looking back at
the pedagogy. It was a rich discussion. We loved that many of the
teachers commented on &amp;#34;when we modeled&amp;#34; one technique or another. We
ended up spending a good amount of time talking about scaffolding and
code skeletons, code reading and tracing, live coding and a bunch of
others. What was also cool was that some of the techniques we modeled
didn&amp;#39;t come up in our discussion originally (we had to interject them)
and some things we did unintentionally were also highlighted by the
cohort. &lt;/p&gt;
&lt;p&gt;
It was a fun and productive morning. &lt;/p&gt;
&lt;p&gt;
Another thing that came out of the discussion was our use of
technology but I&amp;#39;m saving that for another post. &lt;/p&gt;
&lt;p&gt;
Finally, I&amp;#39;m remembering that a month long summer intensive is, well,
intensive. It&amp;#39;s really draining. After Friday&amp;#39;s session was done and
JonAlf, Topher and I debriefed, I just crashed for the night and
pretty much took Saturday off save making one video that we&amp;#39;ll need on
Monday. It&amp;#39;s also hard on the students - 12 credits in one month. &lt;/p&gt;
&lt;p&gt;
That said, we&amp;#39;re chugging along and they&amp;#39;re doing great. More
confident than ever that we&amp;#39;re going to have a 21 new leaders in CS Ed
in NY come the program&amp;#39;s conclusion.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Hunter&#39;s CS Teacher Certification program  Week 1</title>
      <link>https://cestlaz.github.io/post/teacher-cert-week-1/</link>
      <pubDate>Thu, 02 Jul 2020 13:48:21 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/teacher-cert-week-1/</guid>
      <description>&lt;p&gt;
Time for an update on our NY State Teacher Certification Program. &lt;/p&gt;
&lt;p&gt;
We kicked off on Monday. Twenty two students working with three
instructors from 9:00 - 3:00 every day. We&amp;#39;ve been using a combination
of synchronous with Zoom and async using Slack and GitHub
discussions. We&amp;#39;re using GitHub as our main platform.&lt;/p&gt;
&lt;p&gt;
Day 0 was very Zoom heavy but we&amp;#39;re trying to balance one big Zoom
session a day combined with other work so as to minimize fatigue. &lt;/p&gt;
&lt;p&gt;
Due to our time constraints we had some prework before we officially
started. We had to debrief on that at the start and then also had to
deliver new instruction and all that made for a rough first day. &lt;/p&gt;
&lt;p&gt;
Things got better in day 1. We were able to do one zoom session in the
morning to set the stage on 2D arrays and were able to work more
independently with slack support in the afternoon.&lt;/p&gt;
&lt;p&gt;
On Day 2 I finally got to teach as I had been running a &lt;a href=&#34;https://cestlaz.github.io/post/teaching-cs-in-all-the-grades/&#34;&gt;Computational
Thinking&lt;/a&gt; workshop during days 0 and 1. I led the morning session on
Conway&amp;#39;s Game of Life which led to a coding project in the afternoon. &lt;/p&gt;
&lt;p&gt;
Today we flipped the script doing self directed work in the morning
and then got together to go over objects and classes in the afternoon.&lt;/p&gt;
&lt;p&gt;
While there&amp;#39;s more to tweak I&amp;#39;m very happy with how things are
going. We have a great cohort. In addition to supporting each other in
class they&amp;#39;ve started to organize their own study groups and sessions
both off hours and during our independant work. I haven&amp;#39;t said
anything about this nor have I intruded as I think it&amp;#39;s healthy for
the cohort to have their own self directed space. I&amp;#39;m glad it&amp;#39;s
happening without me having to prod behind the scenes.&lt;/p&gt;
&lt;p&gt;
While I&amp;#39;m very happy with how it&amp;#39;s gone so far there are some areas of
concern. Since this is a new program with an unknown cohort we&amp;#39;re
figuring out a lot on the fly. We&amp;#39;re doing better on the format and
pacing of activities but I feel we can still do better. With this in
mind we&amp;#39;re all having an online discussion throughout the weekend
about how to adjust and by we I mean the entire cohort and all the
instructors. If you&amp;#39;ve got a cohort of 22 experienced teachers you&amp;#39;re
foolish not to exploit their expertise. I&amp;#39;m also a little concerned
about the methods component. We&amp;#39;re already integrating some things -
live coding and subgoal labeling for example but some of the methods I
wanted to cover just don&amp;#39;t fit well in a remote model and we also have
to be careful about not overloading the teachers while many are just
learning the CS.&lt;/p&gt;
&lt;p&gt;
Next week we&amp;#39;ll start getting into data structures. We&amp;#39;ve got four
more weeks but we&amp;#39;re well on our way.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Education is not a spectator sport</title>
      <link>https://cestlaz.github.io/post/education-not-spec-sport/</link>
      <pubDate>Fri, 17 Jan 2020 08:07:26 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/education-not-spec-sport/</guid>
      <description>&lt;p&gt;
As many of you know, the CS Education programs I designed here at
Hunter were finally approved by NY State late last year. We&amp;#39;re
planning to get started this summer. I&amp;#39;ve received many questions
about the program and will write up the details here sooner or later
but one question I frequently get is &amp;#34;will it be offered online?&amp;#34; This
is also something I&amp;#39;ve been asked more than once internal to Hunter.&lt;/p&gt;
&lt;p&gt;
Some of these requests make sense - we&amp;#39;re in the heart of NYC so
someone out on Long Island or further afield upstate won&amp;#39;t be able to
take our courses in person. This is the advantage of online
education. You can partake, or probably more often, consume it from
anywhere. Leaving out completion rates, that makes things very
attractive. Online is also very popular with bean counters. With it
you can set up practically unlimited class sizes. Lots of potential
profits. &lt;/p&gt;
&lt;p&gt;
On the other hand, is it better?&lt;/p&gt;
&lt;p&gt;
While there are certainly many things you can learn online, is it the
same? Some argue that if a professor is straight out lecturing you
might as well watch the video. Probably true but is a dynamic
professor lecturing online the same as in person?&lt;/p&gt;
&lt;p&gt;
Is a recorded concert the same as attending live? What about a
Broadway show? Sporting event?&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ll listen to music at home, watch a ballgame or even a recording of
a live show but it isn&amp;#39;t the same. Even when presenter-audience
interaction and audience-audience interaction is at a minimum - say a
classical concert, the live experience is both different, superior,
and more memorable than the memorex.&lt;/p&gt;
&lt;p&gt;
Now, there&amp;#39;s certainly value added by augmenting classes with online
content but all too often it&amp;#39;s used for cost cutting or profit
making. See &lt;a href=&#34;https://dianeravitch.net/2019/07/18/oklahoma-legislator-questions-why-state-is-giving-millions-to-virtual-charter-school/&#34;&gt;Virtual&lt;/a&gt; or &lt;a href=&#34;https://dianeravitch.net/2019/08/14/ohio-gets-another-virtual-charter-school/&#34;&gt;Cyber&lt;/a&gt; Charter schools for details.&lt;/p&gt;
&lt;p&gt;
At the end of the day education is not a spectator sport.&lt;/p&gt;
&lt;p&gt;
 It&amp;#39;s built on the relationship between student, teacher, and
classmates. You can get some of that online and online is great when
there are truly no other alternatives. If we can ever figure out
&lt;a href=&#34;https://cestlaz.github.io/post/communicating-with_students/&#34;&gt;online engagement&lt;/a&gt;, then technology will be even better at augmenting
(not replacing) good, live instruction. I&amp;#39;m certainly going to look
into offering parts of my classes remotely specifically for people
outside of NY City but we&amp;#39;re a long way from remote education being
even close to as good as in person.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Predicting Grades</title>
      <link>https://cestlaz.github.io/post/predicting-grades/</link>
      <pubDate>Sat, 18 May 2019 12:03:10 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/predicting-grades/</guid>
      <description>&lt;p&gt;
Just saw this:&lt;/p&gt;
  &lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Evaluation
metric idea: take snapshots of students&amp;#39; grades each week
(specifically, the grade they actually see in your LMS). How well do
these correlate with your final assigned grade? Were students getting
good estimates?&lt;/p&gt;&amp;mdash; Austin Cory Bart (@AustinCorgiBart) &lt;a
href=&#34;https://twitter.com/AustinCorgiBart/status/1129743671639838720?ref_src=twsrc%5Etfw&#34;&gt;May
18, 2019&lt;/a&gt;&lt;/blockquote&gt; &lt;script async
src=&#34;https://platform.twitter.com/widgets.js&#34;
charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;p&gt;
It made me think of a couple of conversations I had with more senior
teachers early in my career.&lt;/p&gt;
&lt;p&gt;
They&amp;#39;d tell me &amp;#34;by and large, you know what the kids are going to get
after a few week.&amp;#34; By and large they were right. Sure there were some
kids that would turn it on midway and raise end up earning a higher
grade and some who fell off a cliff but for the most part, you knew
pretty early. &lt;/p&gt;
&lt;p&gt;
This doesn&amp;#39;t mean that you don&amp;#39;t need assessments along the way - both
to inform the student on how they&amp;#39;re doing and to inform both teacher
and student on how to best proceed in order to benefit the student. Of
course, sometimes, even when you present some students will their dire
situations they can remain in denial for a remarkable period of time.&lt;/p&gt;
&lt;p&gt;
At Stuy, the standing grading policy was 2 full period exams each marking
period - this meant at least 6 a semester. Add to that a final which
usually counted as two tests and we had more than enough to drop the
lowest grade - a practice followed by many teachers. Depending on
subject you&amp;#39;d also add in papers, projects, quizes, Homework,
participation and anything else you&amp;#39;d like weighted in a variety of ways.&lt;/p&gt;
&lt;p&gt;
As an interesting aside, I was able to evaluate my senior classes at Stuy
entirely on projects - no tests but not my sophomore classes. Stuy
students were so conditioned on exams that they really needed them to
keep themselves honest. It took time to ween them off. &lt;/p&gt;
&lt;p&gt;
I started at Seward Park High School and that school had a similar policy. &lt;/p&gt;
&lt;p&gt;
In any event, those teachers that told me that you&amp;#39;d know the final
grades early on were pretty spot on. A number of times I tried an
experiment - for final grades, I&amp;#39;d first write down what I thought the
grades would be and then I ran all the assessments through the
weighted average formula. The &amp;#34;guesses&amp;#34; were almost always pretty spot
on.  I also compared the final grades to the second marking period
grades. I chose the second because the first marking period grades
were just letters - E for excellent, S satisfactory, N needs
improvement, and U. There was some movement but it was more from my
grading up or down due to the amrking period rather than a real
change. I would grade down in the second marking period and up in the
third.  &lt;/p&gt;
&lt;p&gt;
This isn&amp;#39;t to say that Cory&amp;#39;s suggestion doesn&amp;#39;t make sense and it
also doesn&amp;#39;t mean that I or other teachers are fabulous estimators -
for all I know, I was biasing some subjective students grades based on
some preconceived notion I wasn&amp;#39;t aware of making the final grade a
self fulfilling prophecy. &lt;/p&gt;
&lt;p&gt;
In any event, I was able to do this when I was teaching in high school
but not so far in college. Maybe it&amp;#39;s because I&amp;#39;ve only been at Hunter
for three years and I developed my high school chops over
decades. Maybe it&amp;#39;s because I have far less contact time with the
students - 2 days a week for an hour fifteen vs five days a week for
43 minutes a shot. It could be that there were more opportunities for
assessment in high school due to more contact time. I&amp;#39;m really not
sure. Something to ponder further.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Thoughts On Code And Beyond - Computational Thinking</title>
      <link>https://cestlaz.github.io/post/thoughts-on-code-and-beyond-ct/</link>
      <pubDate>Mon, 14 Jan 2019 17:48:27 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/thoughts-on-code-and-beyond-ct/</guid>
      <description>&lt;p&gt;
The theme of this year&amp;#39;s &lt;a href=&#34;https://twitter.com/i/moments/1084877641285541889&#34;&gt;To Code and Beyond&lt;/a&gt; was Computational
Thinking. &lt;a href=&#34;https://twitter.com/guzdial&#34;&gt;Mark Guzdial&lt;/a&gt; gave the keynote. While the talk isn&amp;#39;t
currently online, check out &lt;a href=&#34;https://www.youtube.com/watch?v=N3uCb-95fFE&amp;amp;t=5s&#34;&gt;this talk&lt;/a&gt; that Mark gave last March. It&amp;#39;s
not the same but the second halves are and well worth a look.&lt;/p&gt;
&lt;p&gt;
In the first half, Mark talked about other types of &amp;#34;thinking.&amp;#34;
Scientific thinking, engineering thinking and even historical
thinking. All had a good amount of overlap with both each other and
with computational thinking even as we haven&amp;#39;t yet settled on what
computational thinking actually is.&lt;/p&gt;
&lt;p&gt;
This overlap is why I think that bringing CS into the primary grades
gives us an opportunity to reduce the achievement gap between rich and
poor. &lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve already said that I&amp;#39;m not sold on hardcore CS and programming in
the early grades but rather it&amp;#39;s CT - the problem solving and
methodologies of CS that can effectively be part of the earlier
grades.&lt;/p&gt;
&lt;p&gt;
Of course, that&amp;#39;s easier said than done. While there has been some
pushback recently we still have far too much emphasis on standardized
tests and elementary school teachers are way overworked. Trying to get
already overburdened teachers to add in a whole new subject area is a
big ask. The opportunity is that we might be able to develop aspects
of CT in a way that supports what elementary teachers are already
doing, possibly under the unlabeled guise of scientific thinking,
historical thinking, engineering thinking or some other thinking.&lt;/p&gt;
&lt;p&gt;
This is already going on to a certain extent with individual teachers
at individual schools. Logic games and problem solving techniques have
always been explored by elementary school teachers who have freedom
from tightly packed test based curricula. These could be considered CT
and you could also add data collection and processing and I&amp;#39;m sure
many other things as well. This is where CS/CT can fit in the
elementary schools without adding to the teacher&amp;#39;s current
load. What&amp;#39;s more, if we can figure out how to incorporate these CT
concepts to support the subject matter already being studied we could
help close the gap between the haves and the have nots.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve said many times before that I&amp;#39;m not an elementary school
specialist but I still suspect this is the approach for CS in the
primary grades at least for the near term. &lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve already got a pretty full plate between my work with Hunters
Daedalus CS honors program along with our pre-service programs being
very close to going live but I&amp;#39;m also hoping to do some work in
relating to this in the near future.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Is There a First Grade Machine Learning Achievement Gap?</title>
      <link>https://cestlaz.github.io/post/is-there-a-first-grade-ml-achievement-gap/</link>
      <pubDate>Fri, 11 Jan 2019 15:24:16 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/is-there-a-first-grade-ml-achievement-gap/</guid>
      <description>&lt;p&gt;
Today was the fifth &amp;#34;To Code and Beyond&amp;#34; - a one day conference
hosted at Cornell Technion and once again Diane Levitt put together
a great show. The theme was Computational Thinking and the day
consisted of a variety of talks, panels, and activities. I plan on
writing about one panel in particular but for today I wanted to
address something that came up as a question. One attendee asked a
panel about the achievement gap - the fact that when the CS movement got
started in NY some of the more innovative and interesting work was
being done with some of our most vulnerable students. Recently, he
heard about a student who was doing Machine Learning in early
elementary school - first grade. The concern
he had was that when we started the less affluent populations might
have even been pulling ahead but now he&amp;#39;s concerned that the gap
between have and have nots will continue to grow even in this new
field.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m not so concerned about the ML gap in the early grades and I
still think that we still have an opportunity to lessen the gap
between the haves and have nots with CS and more specifically CT.&lt;/p&gt;
&lt;p&gt;
I was reminded about when I started fencing. I first picked up a foil
in 11th grade. Stuy had a senior heavy team that year. I was the only
new junior and there were a bunch of new sophomores. The following
year, we were the starting lineup. We were raw but we still managed
second place in the city. Most of us continued on to fence in USFA
events and then in college. I remember one of the first events we went
to. It was the under 20 qualifiers for the Junior Olympics National
Championships. There were a couple of superstars who recently came
over from eastern bloc countries there. Also a bunch of
fencers we didn&amp;#39;t know but we knew that they&amp;#39;d been fencing for
years - since they were 8, 9, 10. &amp;#34;They&amp;#39;ve been fencing for
years. We&amp;#39;ve only been doing it for one. How can we ever compete?&amp;#34;
I remember Jordan saying &amp;#34;Yeah, they&amp;#39;ve fenced for years but probably
a day or two a week, we&amp;#39;ve been doing it intensely every day for a
year and a half.&amp;#34; He also noted that when they were in their early
years their bodies probably weren&amp;#39;t coordinated enough to really
develop so much. He was right. The superstars dominated but then we
were very much in the mix and in fact took most of the qualifying
spots. &lt;/p&gt;
&lt;p&gt;
I also thought about teaching CS at Stuy. There were always kid who
came in to class with prior experience. That was clear on day one and
for the first few weeks. By the end of the first semester you woudn&amp;#39;t
know it based on overall class performance. The newcomers caught up
pretty quickly. &lt;/p&gt;
&lt;p&gt;
This is why I&amp;#39; not really concerned when I hear about a school doing
Machine Learning in first grade. How much can they really do and how
deep is it? Is the kid even really ready for it or are they just going
through the motions? Or, are they just doing something they&amp;#39;ve always
done in first grade and are just labelling it ML.&lt;/p&gt;
&lt;p&gt;
I think that last option is fairly likely. It&amp;#39;s also why I think we
still have an opportunity to close the achievement gap as part of the
CS / CT movement. &lt;/p&gt;
&lt;p&gt;
When people ask me about CS in the early grades I first tell them that
I&amp;#39;m not an early grade specialist. I follow this by stating that I
think that well resourced schools have been doing thing that we now
consider CT for years - logic, problem solving, puzzles, etc.When a
group of students solve a problem and describe a solution that
includes repetition it used to be just problem solving. Now it&amp;#39;s
computation thinking. Sure, we can tease it out, formalize it and
expand on it but the schools and teachers with the resources and
freedom have already been doing this. &lt;/p&gt;
&lt;p&gt;
With the CS For All movement, we have an opportunity to bring this to
all our students not just the well to do ones.&lt;/p&gt;
&lt;p&gt;
Of course this is easier said than done. We have to prepare them to
identify these CT practices and actively develop these skills in their
students. This means giving teachers the time, resources, and training
and not shorten the already tight tether to standardized multiple
choice tests. &lt;/p&gt;
&lt;p&gt;
At times I&amp;#39;ve been disappointed with the overall K12 CS Ed
movement. We&amp;#39;ve made great strides coming from nowhere to where we are
but as a community we missed the opportunity to bypass the mistakes
and bad ideas that teachers of other disciplines are plagued with. 
We still have this chance with Computational Thinking and the early
grades.&lt;/p&gt;
&lt;p&gt;
I hope we do it right.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Happy New Year 2019</title>
      <link>https://cestlaz.github.io/post/new-year-2019/</link>
      <pubDate>Tue, 01 Jan 2019 09:55:01 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/new-year-2019/</guid>
      <description>&lt;p&gt;
I&amp;#39;ve never been much of a New Years person. I get up really early and
so don&amp;#39;t usually stay up late and more to the point, as any teacher
knows, the year really goes from September through June with that
really long much needed  weekend that you regular folks call July and
August tacked on to separate years.&lt;/p&gt;
&lt;p&gt;
This whole January first thing is really more  of a half time break or
perhaps an intermission.&lt;/p&gt;
&lt;p&gt;
Regardless, I did start the calendar year productively - it was
warm enough for a run and on my way back got my first &lt;a href=&#34;https://www.citibikenyc.com/bikeangels/&#34;&gt;Bike Angel&lt;/a&gt; point
of the month and year.&lt;/p&gt;
&lt;p&gt;
Since I see January 1 as more of a mid year point than a start, I&amp;#39;m
not going to reflect back on what was or project what will be but I do
have a few projects that I want to make some headway on before classes
resum in a few weeks.&lt;/p&gt;
&lt;p&gt;
First and foremost, I&amp;#39;m teaching Data Structures for the first time at
Hunter. Sure, I&amp;#39;ve taught it dozens of times but this will be
different. I haven&amp;#39;t done it in C++ since 2003 and teaching it in
college twice a week Mon/Thu for about 1:15 is not the same as high
school where we meet every day for 0:43. I&amp;#39;ve already been boning up
on my C++. Templates are much more of a pain than I remember them and
I still much prefer toString to operator overloading. I think once
I&amp;#39;ve written some more code and am back up to speed I&amp;#39;ll have a lot of
fun with the class.&lt;/p&gt;
&lt;p&gt;
The other big project is that I want to make some progress on an
&lt;a href=&#34;https://cestlaz.github.io/posts/time-to-create-an-ethics-course/&#34;&gt;Ethics course&lt;/a&gt; that I want to have as part of my soon to be approved (I
hope) pre-service programs. I also want to make it available to
undergrads. I&amp;#39;ve been collecting thoughts and ideas for a couple of
months now and while I still believe that ethics is too important to
just be contained within a course - it must be woven through all our
courses, I do think I&amp;#39;ve got an overall plan that will result in a
very solid course.&lt;/p&gt;
&lt;p&gt;
There are a couple of other projects I&amp;#39;m working on that I Can&amp;#39;t talk
about right now but I have no doubt I&amp;#39;ll be keeping myself busy.&lt;/p&gt;
&lt;p&gt;
So to all the teachers out there, Happy Half Time and to everyone
else, Happy New Year.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Sloan awards for excellence in teaching science and mathematics</title>
      <link>https://cestlaz.github.io/post/sloan-awards-2018/</link>
      <pubDate>Wed, 12 Dec 2018 12:52:44 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/sloan-awards-2018/</guid>
      <description>&lt;p&gt;
I spent yesterday evening at the Cooper Union in their &lt;a href=&#34;https://en.wikipedia.org/wiki/Cooper_Union#The_Foundation_Building&amp;#39;s_Great_Hall&#34;&gt;Great
Hall&lt;/a&gt;, a place famous for Abraham Lincoln&amp;#39;s &lt;a href=&#34;https://en.wikipedia.org/wiki/Cooper_Union_speech#External_links&#34;&gt;speech&lt;/a&gt; that some say
propelled him to the presidency.&lt;/p&gt;
&lt;p&gt;
I was there in the audience watching as the Sloan Foundation and the
Fund for the City of New York awarded seven public school teachers
with an ward for &amp;#34;Excellence in the Teaching of Science and
Mathematics.&amp;#34;&lt;/p&gt;
&lt;p&gt;
I was their to see my friend Dave Deutsch, a long time public school
physics teacher receive the honor. Here&amp;#39;s a brief clip about Dave:&lt;/p&gt;
&lt;p&gt;
&amp;lt;iframe src=&amp;#34;&lt;a href=&#34;https://player.vimeo.com/video/304871223&#34;&gt;https://player.vimeo.com/video/304871223&lt;/a&gt;&amp;#34; width=&amp;#34;640&amp;#34;
height=&amp;#34;360&amp;#34; frameborder=&amp;#34;0&amp;#34; allowfullscreen&amp;gt;&amp;lt;/iframe&amp;gt;&lt;/p&gt;
&lt;p&gt;
You can read Dave&amp;#39;s blurb as well as blurbs and videos for all of the
recipients &lt;a href=&#34;https://www.fcny.org/fcny/core/sae/2018_winners/#david-deutsch&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve never taught with Dave but I&amp;#39;ve known him for a couple of decades
and he&amp;#39;s a teacher&amp;#39;s teacher. He and Devorah cut their teeth teaching
together at the Manhattan Center for Science and Math. Dave&amp;#39;s still
there. &lt;/p&gt;
&lt;p&gt;
Dave&amp;#39;s also not the guy that normally gets awards. It&amp;#39;s not because he
doesn&amp;#39;t deserve them - he&amp;#39;s probably the best physics / science
teacher I know. It&amp;#39;s that he never toots his own horn, he&amp;#39;s not the
over the top super charismatic popular teacher who seems great in the
moment but in the long run might not be, and he never looks for the
spotlight. He just goes about his business of connecting, inspiring,
and truly caring about his kids. His value as an educator can be seen
not only in the short term in his classes but in the long run through
his former students.&lt;/p&gt;
&lt;p&gt;
He&amp;#39;s the best.&lt;/p&gt;
&lt;p&gt;
Over the years I tried to pull Dave over to Stuy or involve him in
other projects but he&amp;#39;s always stayed true to Manhattan Center and
it&amp;#39;s population even with the school&amp;#39;s toxic administration (it&amp;#39;s
worth noting that Dave&amp;#39;s video is the only one that didn&amp;#39;t include the
school&amp;#39;s principal lauding the recipient and was the only principal
not present at the festivities).&lt;/p&gt;
&lt;p&gt;
In any event, Dave&amp;#39;s a true champion for the public school students of
NYC and a true hero. There are a small handful of teachers that I
really look up to and Dave Deutsch is one of them.&lt;/p&gt;
&lt;p&gt;
Here&amp;#39;s to Dave and other teachers who never get the recognition they
deserve because they&amp;#39;re too busy doing the good work rather than self
promoting.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Email Policy</title>
      <link>https://cestlaz.github.io/post/email-policy/</link>
      <pubDate>Sat, 01 Dec 2018 19:36:37 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/email-policy/</guid>
      <description>&lt;p&gt;
I saw this tweet the day along with the ensuing thread:&lt;/p&gt;
  &lt;blockquote class=&#34;twitter-tweet&#34; data-lang=&#34;en&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Seriously, who emails a professor with words like &amp;quot;u&amp;quot; and &amp;quot;plz hlp&amp;quot;? Am I allowed to put language in my syllabus that penalizes students for obnoxious, intentional misspellings? Maybe: -1% to your course grade multiplied by the edit distance of the word with its correction?&lt;/p&gt;&amp;mdash; Austin Cory Bart (@AustinCorgiBart) &lt;a href=&#34;https://twitter.com/AustinCorgiBart/status/1068386945854779392?ref_src=twsrc%5Etfw&#34;&gt;November 30, 2018&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34;
charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;p&gt;
I wanted to reply but as usual, I decided to reply in a blog post so
that it doesn&amp;#39;t get lost in the Twitterverse. This way I can go back
and read this post in five years and say &amp;#34;what was I thinking!!!!&amp;#34;&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve never gotten an email like the one Austin described. The closest
was back in the early days of email when kids had email addresses like
 &lt;strong&gt;koolwarezduud@hotmailcom&lt;/strong&gt;. That didn&amp;#39;t last long. Just ask what
they would think if they were a college admissions person or an
interviewer for a job and recieved an email from &lt;strong&gt;koolwarezdude&lt;/strong&gt;. &lt;/p&gt;
&lt;p&gt;
That said, even though I haven&amp;#39;t gotten emails with &amp;#34;u&amp;#34; or &amp;#34;plz hlp&amp;#34; I
do have to train my students to use email correctly so there might be
some parallels between my case and experiences and Austin&amp;#39;s.&lt;/p&gt;
&lt;p&gt;
For years I&amp;#39;ve used a mailing list for class communication. I&amp;#39;ve tried
alternatives like Slack and Piazza but always come back to an old
school mailing list. For years I used &lt;a href=&#34;http://www.list.org/&#34;&gt;Mailman&lt;/a&gt; but most recently I&amp;#39;ve
been using Google Groups. I always give my students the rules at the
beginning of the class:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The list can be used for anything related to class or CS.&lt;/li&gt;
&lt;li&gt;Things that are interesting to the community but not class or CS
related are also OK. Things like if a student is on a team that has
a big competition coming up or that there are free or cheap tickets
to a show or museum are also ok.&lt;/li&gt;
&lt;li&gt;The usual rules for civility and respect.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It&amp;#39;s all pretty low key, informal and open.&lt;/p&gt;
&lt;p&gt;
The big thing I tell them is that the &lt;strong&gt;only things&lt;/strong&gt; they should email
me directly about are things that are specific to the sender and
me. Things like grade related questions, a request for a
recommendation letter etc.. If it&amp;#39;s a question about the class
material, the tools, etc. I expect the email to go to the list not
me. I give three reasons for this&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Other class members could benefit from the question and answers.&lt;/li&gt;
&lt;li&gt;If you email me only I can answer the question and only when I get
  to it. If you email the list, there are many more people who can
  potentially answer.&lt;/li&gt;
&lt;li&gt;If it&amp;#39;s a tools question, particularly Mac related It&amp;#39;s unlikely
I&amp;#39;ll know the answer but almost certainly someone in the class
will,&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I tell my classes that if they email me directly with something that
should go to the mailing list, I&amp;#39;ll ignore the email.&lt;/p&gt;
&lt;p&gt;
Predictably, at first students email me directly. The first couple of
times, I&amp;#39;ll answer the question by emailing the full list. I&amp;#39;ll say
something like &amp;#34;someone emailed me &lt;span style=&#34;text-decoration: underline;&#34;&gt;&lt;span style=&#34;text-decoration: underline;&#34;&gt;__&lt;/span&gt;&lt;/span&gt;&amp;#34; give the answer  and also
remind them that emails like that should go to the list.&lt;/p&gt;
&lt;p&gt;
This usually clears things up for most of the students but some will
continue to email me. My next step is to reply to their email telling
them to repost to the group. If they do, I&amp;#39;ll answer (usually giving a
bit of time to hope that a classmate chimes in first). If they don&amp;#39;t
then the question won&amp;#39;t get a response.&lt;/p&gt;
&lt;p&gt;
Any emails that come directly to me after phase 2 go into the trash.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ll also sometimes redirect questions I get after class to the
mailing list. Particularly if I think that the answer can benefit more
than the asking student or if the answer should remain accessible for a
longer period of time. This came up just the other day when a student
had an issue with their editor saving source files in RTF. I didn&amp;#39;t
have the answer and I also thought that the answer to this would be a
good thing for more students to see and also for the answer to be
searchable should it come up later. The student posted to the list and
another one of the students answered. &lt;/p&gt;
&lt;p&gt;
All in all I think this works pretty well.&lt;/p&gt;
&lt;p&gt;
Now if only I could get more actual student engagement online…&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>