<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>APCS on C&#39;est la Z</title>
    <link>https://cestlaz.github.io/categories/apcs/</link>
    <description>C&#39;est la Z (APCS)</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 11 Jul 2023 14:35:26 -0400</lastBuildDate>
    
    <atom:link href="https://cestlaz.github.io/categories/apcs/rss.xml" rel="self" type="application/rss" />
    
    
    <item>
      <title>What AP Exams Tell Us</title>
      <link>https://cestlaz.github.io/post/what-ap-exams-tell-us/</link>
      <pubDate>Tue, 11 Jul 2023 14:35:26 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/what-ap-exams-tell-us/</guid>
      <description>&lt;p&gt;
I wanted to get back to my post on the &amp;#34;hard&amp;#34; &lt;a href=&#34;https://cestlaz.github.io/post/acps-a-hardest-question/&#34;&gt;AP
question&lt;/a&gt;. Specifically I wanted to reflect on what AP exams can and
can&amp;#39;t actually tell us and what purpose they serve, can serve, or
should serve.&lt;/p&gt;
&lt;p&gt;
First let&amp;#39;s make sure we&amp;#39;re on the same page about what the College
Board is offering - they offer single end of semester high stakes
exams. These exams provide a single number between 1 and 5 that, in
theory, signify how well an exam taker knows the subject. As it
happens, many colleges award either credit, placement or both if
students score high enough.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m emphasizing that the college board&amp;#39;s offerings are exams because
that&amp;#39;s really the only thing that&amp;#39;s different or special about
them. Calculus existed long before the college board and while
calculus classes in high school and college vary around the edges, the
topic matter is essentially the same. If you teach calculus with or
without the college board you&amp;#39;re probably teaching more or less the
same thing. Same for APCS-A which, while usually taught over the
course of a full year, is largely similar to a college CS1
class. APCS Principles and possibly other courses are not facsimiles
of college courses (and in fact, in my opinion, APCS-P is not college
level) but even then, the unique part of the College Board&amp;#39;s offering
is the exam. Over the past decade, many colleges have designed or
redesigned their CS0 offerings. I personally, designed a CS0 for
Stuyveasnt that became a required class in the late 1990s and I think
it&amp;#39;s much stronger than APCS-P. Other HS teachers have done
similar. Even with APCS-P, there are numerous independent businesses
and organizations offering their own APCS-P curricula.&lt;/p&gt;
&lt;p&gt;
So, at the end of the day, the College Board does one thing - offers
and grades a high stakes exam. These exams also are limited in
format. Multiple Choice and long answer questions are the norm. Long
answer might be an essay in some subjects or word problems in math or
science. In CS, they&amp;#39;re generally programming questions. Some exams
might have additional components such as the activities that APCS-P
students do in class which are then submitted for evaluation but we&amp;#39;re
going to stick to APCS-A here.&lt;/p&gt;
&lt;p&gt;
So, what can and can&amp;#39;t the exam do?&lt;/p&gt;
&lt;p&gt;
To start, it&amp;#39;s a single exam at the end of the semester. There&amp;#39;s no
feed forward from current teachers and no feedback afterwards for the
students. The exam has to be totally self contained. Since the student
teachers had nothing to do with the creation of the exam, don&amp;#39;t
proctor it, and in fact can&amp;#39;t be around the administration, everything
about the questions has to be in the questions. No ambiguity at
all. This can frequently lead to the &amp;#34;wall of text&amp;#34; problem I talked
about in the earlier post.&lt;/p&gt;
&lt;p&gt;
Since it&amp;#39;s a coarse instrument, it also has to try to capture a range
of results that will map to the final grades between 1 and 5. This
means you want to try to avoid all or nothing questions where a test
taker either aces the question or gets a 0. The hope is that if they
know some concepts leading to a solution they can get some credit.&lt;/p&gt;
&lt;p&gt;
This, and the format leads to a test of, in my opinion, limited value.&lt;/p&gt;
&lt;p&gt;
Half the test is multiple choice. Multiple choice questions don&amp;#39;t
usually lend themselves to deep thinking questions. They&amp;#39;re more
suited to rules, regurgitation, and mechanics. You&amp;#39;ll see trace
through the code questions, know the rules questions and definition
questions. These take time but measure mechanics and memory, not
problem solving.&lt;/p&gt;
&lt;p&gt;
Free response isn&amp;#39;t much better.  You can find past questions
&lt;a href=&#34;https://apcentral.collegeboard.org/courses/ap-computer-science-a/exam/past-exam-questions&#34;&gt;here&lt;/a&gt;. Most of the questions are very wordy which is a challenge to
both native English speakers and English language learners but the
questions usually either spell out in detail step by step what to do
or the solution for each part is arrived at by either using a small
number of calls defined earlier in the question or come from a
provided reference such as the ArrayList reference. I looked over the
2021 exam and indeed two of the questions spell out the solutions and
the other two use the calls from the reference or the question.&lt;/p&gt;
&lt;p&gt;
In general, just like the multiple choice, the free response questions
don&amp;#39;t really test problem solving. They test reading comprehension and
a knowledge of the mechanics of fundamental programming. It&amp;#39;s coding
not computer science.&lt;/p&gt;
&lt;p&gt;
Sometimes it gets a little ridiculous. One year, back in the APCS-AB
days there was a question that was essentially a mergesort but the
question itself was a writeup of the psuedocode in outline form.&lt;/p&gt;
&lt;p&gt;
On the flip side, there sometimes is a deep thinking question. The
very first year APCS was offered there was a question that essentially
asked the design of a data structure to store a sparse matrix. I took
that exam and I&amp;#39;m sure I got that one wrong. It wasn&amp;#39;t easy but it
required problem solving. The problem with those types of questions is
that they&amp;#39;re all or nothing and the College Board, even with the types
of questions they use receives far too many blank solutions.&lt;/p&gt;
&lt;p&gt;
So that&amp;#39;s the test - it&amp;#39;s a test of programming mechanics, rule
familiarity, and reading. The truth is, that it probably has to be
this way. A teacher throughout a year can assess a student in a
variety of ways and should know their students and where they are
at. Some assessments might cover mechanics and memory but others the
deeper concepts. It&amp;#39;s why, when I decided where to place my incoming
Hunter freshmen, I didn&amp;#39;t care about their AP scores. For APCS-P
because the class is super uneven - I&amp;#39;ve met APCS-P students with
strong backgrounds and others who would have been better of with
nothing at all in terms of CS learned. For APCS-A, I know plenty of
students who earned a low score who ended up doing great things in
CS - since the vast majority of my students were NYC students, I
generally knew their CS teachers and the classes they taught - that&amp;#39;s
what I went with.&lt;/p&gt;
&lt;p&gt;
For the AP exam? How valuable can a 5 value scale be in communicating
what a student knows? Going back to my last post, while the 2D free
response question had the lowest scores but apparently students scored
well on the 2D array multiple choice questions. Which is it?&lt;/p&gt;
&lt;p&gt;
So there it is - high stakes tests are not only bad due to the
pressure they place kids under but also because they come down to a
single number and a single number in no way can represent a
student. Even worse, high stakes exams are very frequently, and I
don&amp;#39;t know if the college board follows this practice, first scored to
a rubric and then after the fact the raw scores are mapped to a final
grade. This is a key way New York State manipulates test scores and passing
rates to suit their needs.&lt;/p&gt;
&lt;p&gt;
This is just one of the reason I&amp;#39;m down on the College Board - better
for high schools to partner with local colleges and offer dual credit
classes. Teach college stuff and get real college credit - not a
number between 1 and 5.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>APCS A - The Hardest Question</title>
      <link>https://cestlaz.github.io/post/acps-a-hardest-question/</link>
      <pubDate>Mon, 03 Jul 2023 07:14:37 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/acps-a-hardest-question/</guid>
      <description>
&lt;p&gt;
There was some discussion the other day resulting from some info
released by the College Board on this past years APCS-A exam.The
&amp;#34;hardest&amp;#34; question was the 2D Array free response. As it happened, 34%
of test takers earned 0 out of 9 points on the question. What&amp;#39;s
interesting is that the College Board noted that at the same time,
students did very well on the multiple choice 2D array questions.&lt;/p&gt;
&lt;p&gt;
What does that mean and what does that tell us. Let&amp;#39;s explore.&lt;/p&gt;
&lt;p&gt;
You can find the question in the released &lt;a href=&#34;https://apcentral.collegeboard.org/media/pdf/ap23-frq-comp-sci-a.pdf&#34;&gt;exam&lt;/a&gt; questions starting on page 14.&lt;/p&gt;
&lt;div id=&#34;outline-container-headline-1&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-1&#34;&gt;
Was it really a hard question?
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-1&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
In my opinion, not really. APCS-A is supposed to be a college level CS1 class and
following instructions to traverse or manipulate a 2D array should be
pretty easily handled by CS1 students.&lt;/p&gt;
&lt;p&gt;
Once you get to the meat of the question it was pretty
straightforward. Of course, getting to the meat, particularly under
time pressure could be a considerable challenge. More on that below. &lt;/p&gt;
&lt;p&gt;
The first part of the question was basically just a scan down a column
and reassign elements with a couple of conditions.  The &amp;#34;to do&amp;#34; items
were listed pretty clearly in the question so a student would just
have to take the bulleted instructions as an outline and code it out.&lt;/p&gt;
&lt;p&gt;
The second part involved scanning through a 2D array. Pretty
standard stuff but you had to pay attention to the specific order of
your traversal which was hidden in a mountain of text.&lt;/p&gt;
&lt;p&gt;
There have certainly been harder and trickier questions in past
years. I can think of one &amp;#34;encryption&amp;#34; question that I remember to be
harder and I seem to recall others that required shifted values in a
2D array which is certainly harder than what was asked here. It would
be interesting to see the score data on the &amp;#34;hard&amp;#34; question from past
years and see how they compare. &lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-2&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-2&#34;&gt;
Whose fault is it?
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-2&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
One of the comments I read was that if 34% of test takers score 0
points on a question the test write is at fault. This is probably
correct but not necessarily because the question was bad or that the
exam was bad. This is a deeper question. I plan to address this in
a later post.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-3&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-3&#34;&gt;
Blank question or blank test?
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-3&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
This question was raised in one of the forums. Each year, so I&amp;#39;m told,
there are large swaths of AP exams that are just blank. This can be
for a variety of reason - an unprepared kid, one who never wanted to
take the exam, cases where the kid&amp;#39;s already decided on college (or
not college at all) and the exam won&amp;#39;t do anything for them and
possibly other reasons. Obviously this question would be blank if the
entire exam was blank. What percent of otherwise completed tests had
this question scoring 0 points. Better, but maybe impossible to figure
out now, how many questions were left blank vs had totally incorrect
answers? All of this would be interesting. &lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-4&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-4&#34;&gt;
Is this a CS test or is this reading?
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-4&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
Another comment pointed out that this question was a wall of
text. Hard enough for a native English speaker but a particular
challenge for an English Language Learner. How badly did this affect
the results? It took me a reasonable amount of time and effort to make
sense of the question. It was somewhat contrived and arbitrary and you
really had to get into the weeds of the text to know exactly what to
do. How big of an effect was this? Did it cause kids to give up?  Did
they misinterpret things? Who knows. While understanding a problem
statement is important, in the real world, a professional programmer
can always ask for clarification. Not on an exam. I get it - since its
one way communication, the test writers have to put &lt;strong&gt;everything&lt;/strong&gt; in
the question and leave no ambiguity but if the result is a long winded
obtuse question, maybe come up with another question. Strip away the
story and this particular question is pretty easy. With it, it&amp;#39;s much
harder for most high school kids and maybe intractable for an English
Language learner.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-5&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-5&#34;&gt;
Did they run out of time?
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-5&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
Maybe it wasn&amp;#39;t that it was a hard question but seeing the wall of
text or the topic of 2D arrays, students left it for last. This is
not an uncommon strategy. For years, across all subjects, teachers
tell students not to get caught up on one time consuming problem. The
strategy is to maximize your points. When I taught APCS, my students
never had trouble with the time for the free response but the multiple
choice was a race - probably because I never did any explicit prep for
it. It&amp;#39;s frequently better to skip a couple of time consuming ones and get all the
others right.&lt;/p&gt;
&lt;p&gt;
Same strategy can be used for the free response. How many students
focused on getting maximum points on the other questions and just ran
out of time. This would jive with the fact that students did well on
the multiple choice 2D array questions. &lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-6&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-6&#34;&gt;
Was it a strategic omission to maximize score?
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-6&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
What if it was left for last and by &amp;#34;it&amp;#34; I mean teaching 2D
arrays. This has long been a teaching strategy when high stakes tests
are at play. Arrange the topics taught and the amount of time to
allocate so as to maximize student performance on the exam.&lt;/p&gt;
&lt;p&gt;
This seems to have happened far and wide in New York City in
Geometry. In NY, students have to pass a number of high stakes tests
called regents exams. Many schools allocate 2 years to Algebra and
most students pass. Then, they allocate one year to Geometry - a much
harder, richer curriculum. Based on the design of the exam, teachers
have realized that in spite of the fact that the course is really
supposed to be about deductive reasoning and proof, that proof only
comprises a very small number of points on the exam. So, if you don&amp;#39;t
teach proof - a notoriously hard subject to teach and learn or merely
pay it lip service, students won&amp;#39;t get any points on the proof section
but the hope is that they&amp;#39;ll know the other subjects better and end up
passing and in fact scoring better overall.&lt;/p&gt;
&lt;p&gt;
Last time I graded the geometry regents, before I left for Hunter
College, the number of proof answers that were entirely blank backs
the theory of this approach.&lt;/p&gt;
&lt;p&gt;
Now, for geometry this certainly hurts kids down the road since
deductive reasoning and proof is more fundamental and important than
say, circle geometry but since teachers and students are being judged
by standardized test scores you can&amp;#39;t really blame them.&lt;/p&gt;
&lt;p&gt;
Could it be that APCS-A teachers have decided to do something similar
with 2D arrays. It&amp;#39;s even more plausible given that most high school
CS teachers are currently much newer to and weaker in CS than math
teachers are to math.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-7&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-7&#34;&gt;
Final thoughts
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-7&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
As you see, there&amp;#39;s a lot to explore based on the simple statistic of
34% of students scored 0 on a question. There are probably more
factors and potential explanations than the ones I&amp;#39;ve shared but the
next, more interesting question is the one posited at the top - is the
College Board to blame or someone else? I think it is a College Board
issue and it&amp;#39;s an issue with the basic AP model. I&amp;#39;ll explore that in
a future post.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Language choices for APCS</title>
      <link>https://cestlaz.github.io/post/apcs-languages/</link>
      <pubDate>Wed, 11 Nov 2020 13:31:21 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/apcs-languages/</guid>
      <description>&lt;p&gt;
Over on Facebook the semi-regular &amp;#34;is APCS-A going to Python&amp;#34; once
again appeared. I&amp;#39;m not going to get into Python vs Java. Each language giveth and
each language taketh away but it got me thinking about the history of
language changes.&lt;/p&gt;
&lt;p&gt;
I titled this &amp;#34;Language choices for APCS&amp;#34; not APCS-A because back in
the day it was just APCS. At some point that split with APCS-A being similar
to what we have today and APCS-A being that plus a CS2 (data
structures) class. Finally after 2009, APCS-AB was dropped due to low
participation, I mean, my school represented 10% of the total test
takers - that&amp;#39;s nuts - 10% from one school.&lt;/p&gt;
&lt;p&gt;
I took the exam during the first administration in 1984 and taught
APCS-AB from 1991 I think up until I left Stuy.&lt;/p&gt;
&lt;p&gt;
Originally, APCS was in Pascal. Back then, the course guide said that
they intended for the exam to become language agnostic but that never
happened. Instead we went to C++ in 2000 and then to Java in 2004.&lt;/p&gt;
&lt;p&gt;
Now, I don&amp;#39;t have any inside information here. I&amp;#39;ve never been in on
any internal meetings so this is all just conjecture but I think it&amp;#39;s
interesting food for thought. &lt;/p&gt;
&lt;p&gt;
Back in 1984, schools were transitioning from either no
computers or Commodore PETS to Apple IIs. At Stuy, where I was a
student, the teacher had a single copy of a Pascal compiler on a
floppy disk and he made copies - one for each computer in the lab. Not
too much concern about piracy here. &lt;/p&gt;
&lt;p&gt;
As we approached 2000 when APCS switched to C++ the knocks on Pascal
were: &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;It&amp;#39;s a teaching language &lt;/li&gt;
&lt;li&gt;You can&amp;#39;t have programs that were more than one file. &lt;/li&gt;
&lt;li&gt;It wasn&amp;#39;t Object Oriented which gained a lot of steam over the
decade. &lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The first item was also mentioned as a strength and item 2 really
wasn&amp;#39;t an issue in terms of what most people taught. In any event, the
College Board decided on a change. &lt;/p&gt;
&lt;p&gt;
I started thinking about why C++ over Pascal? I know that C++ was the
hot industry language at the time and to be honest, I don&amp;#39;t remember
what other languages might have also been viable. I did think though
about one big factor in C++&amp;#39;s favor. By this time schools were moving
to IBM PCs and C++ had a really big hidden value - the existence of
Turbo C++. A C++ compiler and IDE that ran on the IBM PC and was
cheap. Prior to Turbo Pascal and Turbo C/C++ schools didn&amp;#39;t have the
ability to cheaply compile programs and certainly students who were
fortunate enough to have computers certainly couldn&amp;#39;t afford a
compiler. &lt;/p&gt;
&lt;p&gt;
I have no idea if this factored into the decision but I think the
economics and the fact that compilers and development environments
were just not that available back then are an interesting bit of
history.&lt;/p&gt;
&lt;p&gt;
What about the next change? C++ to Java in 2004. By then I had moved
Stuy over to Linux but most schools were still on Windows. By this
time there were more affordable and even free compiler choices so I&amp;#39;m
guessing school economics didn&amp;#39;t have to enter the decision. What
probably did was the fact that APCS-A participants were stagnant and
APCS-AB were declining. One might conjecture that the complexity of
C++ had something to do with this. While Pascal also had memory
management C++ memory management is more complicated and less
forgiving. Also, since C++ is really a multimodal with &amp;#34;many ways to
do it&amp;#34; it was probably much harder for both students and teachers,
many of whom didn&amp;#39;t have a CS background. Java was the hot up and
comer, was not multi-modal but was indeed object oriented, and really
is a much simpler language. &lt;/p&gt;
&lt;p&gt;
Now, as I said, I have no idea what was discussed internally at the
college board but I think it&amp;#39;s interesting to think about the history.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>APCS Statistics</title>
      <link>https://cestlaz.github.io/post/code-beyond-apcs/</link>
      <pubDate>Fri, 10 Jan 2020 17:51:14 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/code-beyond-apcs/</guid>
      <description>&lt;p&gt;
Yesterday was, I think the fourth, To Code and Beyond conference hosted by
&lt;a href=&#34;https://twitter.com/diane_levitt&#34;&gt;Diane Levitt&lt;/a&gt; at Cornell Technion. I might blog about a few of the
talks but for today let&amp;#39;s start with one.&lt;/p&gt;
&lt;p&gt;
In spite of my anti College Board bias, I really enjoyed Barbara
Ericson&amp;#39;s talk on APCS statistics. Barbara&amp;#39;s been breaking down the
APCS numbers for years - how many took the exam(s), how many passed
them. By state, gender, etc. It&amp;#39;s all up on her &lt;a href=&#34;https://cs4all.home.blog/&#34;&gt;blog&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;
While Barb had earlier provided the data online, in her talk, she 
did a great job drawing out and highlighting important and interesting
points. &lt;/p&gt;
&lt;p&gt;
The TL;DR summary takeaways from the talk were:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;There has been some progress.&lt;/li&gt;
&lt;li&gt;We can do better.&lt;/li&gt;
&lt;li&gt;We have to do better.&lt;/li&gt;
&lt;li&gt;The numbers are sometimes so low that it wouldn&amp;#39;t take much to do
 better.&lt;/li&gt;
&lt;li&gt;That isn&amp;#39;t enough.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;One point of comparison that came up was that while the number of APCS
exams is growing they still pale in comparison to the AP English and
AP Calc numbers. This makes sense though. Calc is generally percieved
as &amp;#34;the next math class&amp;#34; so students who finish precalc prior to
senior year will normally move on to calc. Even more so now than in
the past with more and more schools implementing a 4 year math
requirement. AP English is also a special case since it basically
replaces a regular English class so it might not even add anything to
a students day depending on the workload of AP vs their school&amp;#39;s
regular English class.&lt;/p&gt;
&lt;p&gt;
Personally, I don&amp;#39;t care how many APCS exams are given but I&amp;#39;d love to
see a quality year of CS Education required in high schools across the
country.&lt;/p&gt;
&lt;p&gt;
All of Barbara&amp;#39;s analysis is based on the public data that the College
Board releases. I got to thinking about all the factors we can&amp;#39;t
account for since the data either isn&amp;#39;t released by the College Board
or isn&amp;#39;t available at all.&lt;/p&gt;
&lt;p&gt;
First, the data is on the state level. How many states are small
enough and homogeneous enough that we can treat them as a unit?
Certainly not NY. I&amp;#39;d love to see the AP data broken down by NYC vs
the rest of the state. It would also be great to be able to run stats
that looked at school factors. All this data could be made available.&lt;/p&gt;
&lt;p&gt;
If we had more data to play with we might learn or at least be able to
explore some interesting things.&lt;/p&gt;
&lt;p&gt;
Take APCS-P. In 2019 7553 exams were given in New York State with 5239
passing. Now, it turns out that Brooklyn Tech decided to require
APCS-P of all of its students. Tech has a population of over 6000 so
figure about 1500 APCS-P tests or around 20% of the state. That&amp;#39;s from
JUST ONE SCHOOL!!!!!!  It&amp;#39;s also a test school. Just about every Stuy
student who takes APCS-A passes the exam so I&amp;#39;d guess the vast
majority of Tech APCS-P test takers do the same. Take out 1500 passing
exams and see what that does to the pass rate. Once again we have a
HUGE influence by one school.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m don&amp;#39;t know if this means anything one way or another but it is
interesting.&lt;/p&gt;
&lt;p&gt;
Going further, it would be great to know how schools are making
decisions as to what to offer and to whom. Is APCS-P required? Are the
students in the class(es) required to take the exam? Required classes
and requiring exams generally up the participation rates but lower pass
rates. How much elective room do students have? The questions go on
and on. I&amp;#39;m of the belief that two of the reasons for APCS-P&amp;#39;s rapid
growth and adoption are that it&amp;#39;s low hanging fruit. Schools want to
do some CS and this checks the box. Also, schools can move up in those
BS school ratings by having their kids take more AP exams and having a
relatively easy AP exam that can be passed by 9th and 10th graders is
an easy way to build your reputation.&lt;/p&gt;
&lt;p&gt;
Of course, the ratings game doesn&amp;#39;t always serve students. I once
heard a talk given by the principal of the highly lauded school
P-Tech. He proudly proclaimed that in his previous school BETA (he was
principal of the Bronx Engineering and Tech Academy prior to P-Tech)
he took kids that came in far behind in math and they all passed the
Honors APCS Calc exam. I later checked - BETA students took 228 AP exams
during the year in question and only 10 passed. The principal parlayed
these wonderful results into a much higher profile principalship of a
school so highly regarded it was mentioned by name at a State of the
Union address but I think it&amp;#39;s horribly cruel to set students up to
fail so. &lt;/p&gt;
&lt;p&gt;
Getting back to Barbara&amp;#39;s talk - even with the limited granularity of
the data provided by the college board we can learn some interesting
things. Given the newness of APCS-P and in fact the newness of the CS
For All push it will be years before we can really figure anything out
but it&amp;#39;s all food for thought. &lt;/p&gt;
&lt;p&gt;
Thanks to Barbara for continuing on what she described as &amp;#34;an unpaid
job for life&amp;#34; as we&amp;#39;re all the beneficiaries of her work.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>