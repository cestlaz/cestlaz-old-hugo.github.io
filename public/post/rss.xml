<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on C&#39;est la Z</title>
    <link>https://cestlaz.github.io/post/</link>
    <description>C&#39;est la Z (Posts)</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 07 Oct 2023 11:36:18 -0400</lastBuildDate>
    
    <atom:link href="https://cestlaz.github.io/post/rss.xml" rel="self" type="application/rss" />
    
    
    <item>
      <title>Amsterdam, the first two days</title>
      <link>https://cestlaz.github.io/post/amserdam1/</link>
      <pubDate>Sat, 07 Oct 2023 11:36:18 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/amserdam1/</guid>
      <description>&lt;p&gt;
Final leg of the trip in Amsterdam. Train ride and hotel went smoothly
but we were hungry so got a quick bite across from the Rembranthuis&lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/amsterdam/rembranthuis.jpg&#34; alt=&#34;/img/amsterdam/rembranthuis.jpg&#34; title=&#34;/img/amsterdam/rembranthuis.jpg&#34; width=&#34;250px&#34;/&gt;
&lt;p&gt;
After some wandering&lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/amsterdam/market.jpg&#34; alt=&#34;/img/amsterdam/market.jpg&#34; title=&#34;/img/amsterdam/market.jpg&#34; width=&#34;250px&#34;/&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/amsterdam/canal.jpg&#34; alt=&#34;/img/amsterdam/canal.jpg&#34; title=&#34;/img/amsterdam/canal.jpg&#34; width=&#34;250px&#34;/&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/amsterdam/amsterdam-selfie.jpg&#34; alt=&#34;/img/amsterdam/amsterdam-selfie.jpg&#34; title=&#34;/img/amsterdam/amsterdam-selfie.jpg&#34; width=&#34;250px&#34;/&gt;
&lt;p&gt;
we found our way to the &lt;a href=&#34;https://www.verzetsmuseum.org/&#34;&gt;WWII Dutch Resistance Museum&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;
Great plcae to go if you want to be both proud and inspired and
depressed at the same time.&lt;/p&gt;
&lt;p&gt;
It contained propaganda from both sides&lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/amsterdam/posters.jpg&#34; alt=&#34;/img/amsterdam/posters.jpg&#34; title=&#34;/img/amsterdam/posters.jpg&#34; width=&#34;250px&#34;/&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/amsterdam/foldup.jpg&#34; alt=&#34;/img/amsterdam/foldup.jpg&#34; title=&#34;/img/amsterdam/foldup.jpg&#34; width=&#34;250px&#34;/&gt;
&lt;p&gt;
Photos of hiding people and equipment:&lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/amsterdam/hiding1.jpg&#34; alt=&#34;/img/amsterdam/hiding1.jpg&#34; title=&#34;/img/amsterdam/hiding1.jpg&#34; width=&#34;250px&#34;/&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/amsterdam/hiding2.jpg&#34; alt=&#34;/img/amsterdam/hiding2.jpg&#34; title=&#34;/img/amsterdam/hiding2.jpg&#34; width=&#34;250px&#34;/&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/amsterdam/hiding3.jpg&#34; alt=&#34;/img/amsterdam/hiding3.jpg&#34; title=&#34;/img/amsterdam/hiding3.jpg&#34; width=&#34;250px&#34;/&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/amsterdam/hiding4.jpg&#34; alt=&#34;/img/amsterdam/hiding4.jpg&#34; title=&#34;/img/amsterdam/hiding4.jpg&#34; width=&#34;250px&#34;/&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/amsterdam/giraffe.jpg&#34; alt=&#34;/img/amsterdam/giraffe.jpg&#34; title=&#34;/img/amsterdam/giraffe.jpg&#34; width=&#34;250px&#34;/&gt;
&lt;p&gt;
and relayed the horror and tragedy that occurred during the Holocaust
highlighting the brave acts of many to try to save lives as well as
the stories of those who acquiesced and for the most part, regretted
it.&lt;/p&gt;
&lt;p&gt;
It left an impact and if you&amp;#39;re in Amsterdam I highly recommend it,
particularly give the direction of things with the Republicans in the
United States these days.&lt;/p&gt;
&lt;p&gt;
Dinner after that was a real treat. Batya and I got dinner with my old
student Artem.&lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/amsterdam/artem.jpg&#34; alt=&#34;/img/amsterdam/artem.jpg&#34; title=&#34;/img/amsterdam/artem.jpg&#34; width=&#34;250px&#34;/&gt;
&lt;p&gt;
Artem graduated Stuy in I think 2000 and I was marginally in touch but
hadn&amp;#39;t seen him since the early part of this century. When I announced
to my alumni community that I was heading to the Netherlands and
asking for recs, Artem chimed in and we coordinated. Such a treat to
reconnect with a former student in person. To be able to see him doing
well in life so many years later.&lt;/p&gt;
&lt;p&gt;
We got dinner at Entrepot and it was one of the best meals I&amp;#39;ve had in
years.&lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/amsterdam/dinner.jpg&#34; alt=&#34;/img/amsterdam/dinner.jpg&#34; title=&#34;/img/amsterdam/dinner.jpg&#34; width=&#34;250px&#34;/&gt;
&lt;p&gt;
That was it for day 1.&lt;/p&gt;
&lt;p&gt;
Day 2 started with another Sandeman tour. Got an overview of the city
and learned some interesting things. One stood out. We learned about
these &lt;a href=&#34;https://en.wikipedia.org/wiki/Stolperstein&#34;&gt;Stumbling Stones&lt;/a&gt;&lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/amsterdam/stumble-stones.jpg&#34; alt=&#34;/img/amsterdam/stumble-stones.jpg&#34; title=&#34;/img/amsterdam/stumble-stones.jpg&#34; width=&#34;250px&#34;/&gt;
&lt;p&gt;
placed in front of houses&lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/amsterdam/ss-building.jpg&#34; alt=&#34;/img/amsterdam/ss-building.jpg&#34; title=&#34;/img/amsterdam/ss-building.jpg&#34; width=&#34;250px&#34;/&gt;
&lt;p&gt;
memorializing victims of the Holocaust. &lt;/p&gt;
&lt;p&gt;
We also stopped by the former home of the Dutch West India Company&lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/amsterdam/west-indies.jpg&#34; alt=&#34;/img/amsterdam/west-indies.jpg&#34; title=&#34;/img/amsterdam/west-indies.jpg&#34; width=&#34;250px&#34;/&gt;
&lt;p&gt;
and talked about Dutch colonial times including New Amsterdam. It was
cool that our guide was into the Amsterdam/New Amsterdam thing and was
currently reading &amp;#34;The Island at the Center of the World&amp;#34; and had it
in his bag.&lt;/p&gt;
&lt;p&gt;
After that lunch at a pancake restaurant recommended by Artem. It was
in a repurposed carousel.&lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/amsterdam/carousel.jpg&#34; alt=&#34;/img/amsterdam/carousel.jpg&#34; title=&#34;/img/amsterdam/carousel.jpg&#34; width=&#34;250px&#34;/&gt;
&lt;p&gt;
Next up the &lt;a href=&#34;https://www.rijksmuseum.nl/nl&#34;&gt;Rijksmuseum&lt;/a&gt;. Many amazing artworks including
&lt;a href=&#34;https://www.rijksmuseum.nl/nl&#34;&gt;The Night Watch&lt;/a&gt; but here are a couple of &amp;#34;less famous&amp;#34; ones.&lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/amsterdam/rijks1.jpg&#34; alt=&#34;/img/amsterdam/rijks1.jpg&#34; title=&#34;/img/amsterdam/rijks1.jpg&#34; width=&#34;250px&#34;/&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/amsterdam/rijks2.jpg&#34; alt=&#34;/img/amsterdam/rijks2.jpg&#34; title=&#34;/img/amsterdam/rijks2.jpg&#34; width=&#34;250px&#34;/&gt;
&lt;p&gt;
All I can say is amazing place. Also props to the designers on the
wooden floors - much easier on the feet than stone.&lt;/p&gt;
&lt;p&gt;
As a final treat we saw &lt;a href=&#34;https://www.grachtenrace.amsterdam/&#34;&gt;De Grachtenrace Amsterdam&lt;/a&gt; - a rowing race in
the canals. We wanted to catcht it but didn&amp;#39;t know exactly where or
when it was running - just the day. We saw around 20 boats race by
right after we left the museum&lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/amsterdam/rowing.jpg&#34; alt=&#34;/img/amsterdam/rowing.jpg&#34; title=&#34;/img/amsterdam/rowing.jpg&#34; width=&#34;250px&#34;/&gt;
&lt;p&gt;
Batya and I did this type of rowing and racing withe the &lt;a href=&#34;https://villagecommunityboathouse.org/&#34;&gt;Village
Community Boathouse&lt;/a&gt; out of pier 40 when she was at Stuy.&lt;/p&gt;
&lt;p&gt;
That was it for our first couple of days in Amsterdam with a lot more
to come.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Antwerp in 24 hours</title>
      <link>https://cestlaz.github.io/post/antwerp/</link>
      <pubDate>Thu, 05 Oct 2023 10:10:17 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/antwerp/</guid>
      <description>&lt;p&gt;
Heading to Amsterdam this morning and we&amp;#39;ll be here until mid next week.&lt;/p&gt;
&lt;p&gt;
We spent yesterday in Antwerp but for a while we didn&amp;#39;t know if we
were going to get there. Unbeknownst to us when we planned our trip,
yesterday was the season&amp;#39;s first general strike in Belgium. When we
found out in Brussels we weren&amp;#39;t sure we&amp;#39;d be able to get out of the
city at all but it turned out that while the local trains would be out
the intercity ones were going business as usual. Since we couldn&amp;#39;t get
to the required train station easily our host Helen drove us be she
had to do so before work. This meant that we arrived in Antwerp at
around 8:00am. Not a big deal. It was too early to check into our
hotel but we were able to leave our heavier bags and set out for
breakfast and a day of exploring.&lt;/p&gt;
&lt;p&gt;
To start, even before that, we came in to &lt;a href=&#34;https://en.wikipedia.org/wiki/Antwerpen-Centraal_railway_station&#34;&gt;Antwerp Central Station&lt;/a&gt;. &lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/antwerp/train1.jpg&#34; alt=&#34;/img/antwerp/train1.jpg&#34; title=&#34;/img/antwerp/train1.jpg&#34; width=&#34;300px&#34;/&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/antwerp/train2.jpg&#34; alt=&#34;/img/antwerp/train2.jpg&#34; title=&#34;/img/antwerp/train2.jpg&#34; width=&#34;300px&#34;/&gt;
&lt;p&gt;
It&amp;#39;s really amazing. The original station goes back to the mid 19th
century with the current one replacing it around 50 years later. The
facade and entry are gorgeous but going back to the track area is
equally amazing. The &lt;a href=&#34;https://en.wikipedia.org/wiki/Antwerpen-Centraal_railway_station&#34;&gt;Wikipedia page&lt;/a&gt; has more and better images so
check them out.&lt;/p&gt;
&lt;p&gt;
There was also this elevator status wall noting the levels:&lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/antwerp/zero-index.jpg&#34; alt=&#34;/img/antwerp/zero-index.jpg&#34; title=&#34;/img/antwerp/zero-index.jpg&#34; width=&#34;300px&#34;/&gt;
&lt;p&gt;
Gotta love the zero indexing of the floors.&lt;/p&gt;
&lt;p&gt;
After breakfast we wandered around&lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/antwerp/building.jpg&#34; alt=&#34;/img/antwerp/building.jpg&#34; title=&#34;/img/antwerp/building.jpg&#34; width=&#34;250px&#34;/&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/antwerp/buildings.jpg&#34; alt=&#34;/img/antwerp/buildings.jpg&#34; title=&#34;/img/antwerp/buildings.jpg&#34; width=&#34;250px&#34;/&gt;
&lt;p&gt;
and among other things found this, the &lt;a href=&#34;https://en.wikipedia.org/wiki/Brabo_Fountain&#34;&gt;Brabo Fountain&lt;/a&gt; in front of city
hall. &lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/antwerp/statue1.jpg&#34; alt=&#34;/img/antwerp/statue1.jpg&#34; title=&#34;/img/antwerp/statue1.jpg&#34; width=&#34;250px&#34;/&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/antwerp/statue2.jpg&#34; alt=&#34;/img/antwerp/statue2.jpg&#34; title=&#34;/img/antwerp/statue2.jpg&#34; width=&#34;250px&#34;/&gt;
&lt;p&gt;
Very cool. We also passed the cathedral seen in the background.&lt;/p&gt;
&lt;p&gt;
On the side, we saw these builders&lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/antwerp/builders.jpg&#34; alt=&#34;/img/antwerp/builders.jpg&#34; title=&#34;/img/antwerp/builders.jpg&#34; width=&#34;250px&#34;/&gt;
&lt;p&gt;
and realized why cathedrals, including our local St. John&amp;#39;s the
Unfinished take so long - the builders are made of bronze and don&amp;#39;t
move!!!!!&lt;/p&gt;
&lt;p&gt;
This was on our way to &lt;a href=&#34;https://en.wikipedia.org/wiki/Het_Steen&#34;&gt;Het Steen&lt;/a&gt; castle.&lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/antwerp/selfie-castle.jpg&#34; alt=&#34;/img/antwerp/selfie-castle.jpg&#34; title=&#34;/img/antwerp/selfie-castle.jpg&#34; width=&#34;250px&#34;/&gt;
&lt;p&gt;
It had an old school instagram frame:&lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/antwerp/insta-castle.jpg&#34; alt=&#34;/img/antwerp/insta-castle.jpg&#34; title=&#34;/img/antwerp/insta-castle.jpg&#34; width=&#34;250px&#34;/&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/antwerp/insta.jpg&#34; alt=&#34;/img/antwerp/insta.jpg&#34; title=&#34;/img/antwerp/insta.jpg&#34; width=&#34;250px&#34;/&gt;
&lt;p&gt;
Inside was &amp;#34;The Antwerp Story&amp;#34; which had a nice overview of the city
and you could climb to the top as well. &lt;/p&gt;
&lt;p&gt;
From there we tried to go to the &lt;a href=&#34;https://museumplantinmoretus.be/en/content/welcome-museum-plantin-moretus&#34;&gt;Plantin Moretus&lt;/a&gt; museum but were
thwarted - it was closed due to the strike.&lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/antwerp/closed.jpg&#34; alt=&#34;/img/antwerp/closed.jpg&#34; title=&#34;/img/antwerp/closed.jpg&#34; width=&#34;250px&#34;/&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/antwerp/closed-2.jpg&#34; alt=&#34;/img/antwerp/closed-2.jpg&#34; title=&#34;/img/antwerp/closed-2.jpg&#34; width=&#34;250px&#34;/&gt;
&lt;p&gt;
From there it was to the &lt;a href=&#34;https://en.wikipedia.org/wiki/Antwerp_Zoo&#34;&gt;Antwerp Zoo&lt;/a&gt; - the oldest zoo in the
country. It was right next to the train station and just 10 minutes
from our hotel.&lt;/p&gt;
&lt;p&gt;
We saw lots of animals including this meerkat just standing there.&lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/antwerp/meerkat.jpg&#34; alt=&#34;/img/antwerp/meerkat.jpg&#34; title=&#34;/img/antwerp/meerkat.jpg&#34; width=&#34;250px&#34;/&gt;
&lt;p&gt;
He was just standing there on his hind too legs you know, like that
guy - you know the one who stands - Rory Calhoun.&lt;/p&gt;
&lt;p&gt;
And also elephants:&lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/antwerp/elephants.jpg&#34; alt=&#34;/img/antwerp/elephants.jpg&#34; title=&#34;/img/antwerp/elephants.jpg&#34; width=&#34;250px&#34;/&gt;
&lt;p&gt;
And many more. There was also a nice little aquarium building where we
found Dory:&lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/antwerp/dory.jpg&#34; alt=&#34;/img/antwerp/dory.jpg&#34; title=&#34;/img/antwerp/dory.jpg&#34; width=&#34;250px&#34;/&gt;
&lt;p&gt;
After all of that we went back to the Hotel but they still didn&amp;#39;t have
our room so we wandered some more - by the Ruben&amp;#39;s house which is
closed for renovations and over to a local park. Then back to the
Hotel where they screwed up our room but we did finally get it
partially resolved - at least so that we had a roof over our head for
the night.&lt;/p&gt;
&lt;p&gt;
We finished off the day with a pretty awesome Ethiopian meal.&lt;/p&gt;
&lt;p&gt;
This morning we got some more chocolate for the road and are now on
the train to Amsterdam where we&amp;#39;ll spend the next five days.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Brussels</title>
      <link>https://cestlaz.github.io/post/brussels/</link>
      <pubDate>Wed, 04 Oct 2023 01:29:57 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/brussels/</guid>
      <description>&lt;p&gt;
We spent the last few days in Brussels. Got in on the Eurostar at
around 1:00. We were crashing with a good friend - a teacher who
worked with Devorah back in the day but left NY and is now in
Brussels. The catch was that she wasn&amp;#39;t getting home from work until
5:00 so we had to occupy ourselves until then. Schelpping around
rolling suitcases usually isn&amp;#39;t a big deal but there were two
challenges.&lt;/p&gt;
&lt;p&gt;
First, schlepping around rolling suitcases is much harder on cobbled
streets, particularly when it&amp;#39;s unseasonably warm and most museums -
you know - tourist attractions with coat rooms are closed in Brussels
on Mondays.&lt;/p&gt;
&lt;p&gt;
We ended up at the &lt;a href=&#34;https://www.brussels-comics-figurines-museum.be/en/&#34;&gt;Brussels Comics Figurines Museum&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;
Very cool. The first featured comic strip was &lt;a href=&#34;https://en.wikipedia.org/wiki/Marsupilami&#34;&gt;The Marsupilami&lt;/a&gt;. &lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/brussels/marsupilami.jpg&#34; alt=&#34;/img/brussels/marsupilami.jpg&#34; title=&#34;/img/brussels/marsupilami.jpg&#34; width=&#34;300px&#34;/&gt;
&lt;p&gt;
Lots of figurines and a running cartoon. Fun stuff.&lt;/p&gt;
&lt;p&gt;
There were lots more:&lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/brussels/comic2.jpg&#34; alt=&#34;/img/brussels/comic2.jpg&#34; title=&#34;/img/brussels/comic2.jpg&#34; width=&#34;250px&#34;/&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/brussels/comic4.jpg&#34; alt=&#34;/img/brussels/comic4.jpg&#34; title=&#34;/img/brussels/comic4.jpg&#34; width=&#34;250px&#34;/&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/brussels/comic1.jpg&#34; alt=&#34;/img/brussels/comic1.jpg&#34; title=&#34;/img/brussels/comic1.jpg&#34; width=&#34;250px&#34;/&gt;
&lt;p&gt;
Some I knew like Tintin and the Smurfs and some I didn&amp;#39;t. Lots of
interesting backstory.&lt;/p&gt;
&lt;p&gt;
My favorite was, of course, Asterix (and of course Obelix):&lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/brussels/comic3.jpg&#34; alt=&#34;/img/brussels/comic3.jpg&#34; title=&#34;/img/brussels/comic3.jpg&#34; width=&#34;300px&#34;/&gt;
&lt;p&gt;
After the museum we puttered around a bit, refueled on a waffle and
made it to our host&amp;#39;s.&lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/brussels/waffle.jpg&#34; alt=&#34;/img/brussels/waffle.jpg&#34; title=&#34;/img/brussels/waffle.jpg&#34; width=&#34;300px&#34;/&gt;
&lt;p&gt;
We started off the next day with a free tour. Well, sort of. We went
on a &lt;a href=&#34;https://www.neweuropetours.eu/brussels-walking-tours/&#34;&gt;Sandeman&lt;/a&gt; tour. They&amp;#39;re free and request you tip based on whatever
value you feel you received. Devorah and Batya have used them before.&lt;/p&gt;
&lt;p&gt;
We started at the &lt;a href=&#34;https://en.wikipedia.org/wiki/Grand-Place&#34;&gt;Grand Place&lt;/a&gt; talked a bit about it&amp;#39;s and the city&amp;#39;s
history and walked and learned about Brussels for the next almost
three hours. &lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/brussels/gp3.jpg&#34; alt=&#34;/img/brussels/gp3.jpg&#34; title=&#34;/img/brussels/gp3.jpg&#34; width=&#34;300px&#34;/&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/brussels/gp4.jpg&#34; alt=&#34;/img/brussels/gp4.jpg&#34; title=&#34;/img/brussels/gp4.jpg&#34; width=&#34;300px&#34;/&gt;
&lt;p&gt;
Batya and I both very much enojyed the tour. &lt;/p&gt;
&lt;p&gt;
Next up, the &lt;a href=&#34;https://www.kbr.be/en/ &#34;&gt;KBR&lt;/a&gt; museum. This was recommended by a friend. There was
some local history but mostly it was about illuminated manuscripts.&lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/brussels/kbr.jpg&#34; alt=&#34;/img/brussels/kbr.jpg&#34; title=&#34;/img/brussels/kbr.jpg&#34; width=&#34;300px&#34;/&gt;
&lt;p&gt;
They had some history on Illuminated Manuscripts as well as on how
they were made and sported an impressive collection. The oldest we saw
was form the 900s. Extremely cool.&lt;/p&gt;
&lt;p&gt;
That evening we got dinner with our friend Helen and a bunch of her
colleagues. Helen is now teaching in Brussels so I asked her to set up
a dinner with her CS or related teachers. They don&amp;#39;t strictly do CS,
they do ICT which has some CS and coding in it but also trends to what
we would cover on the CTE side.&lt;/p&gt;
&lt;p&gt;
I loved meeting and talking with all of them. Learned a bit about what
it was like for them and what&amp;#39;s going on in CS Ed in their school,
Belgium and other places in Europe and I hope I was also able to share
some interesting insights form our side. I might blog more about all
of this at some later date but it was really a highlight for me.&lt;/p&gt;
&lt;p&gt;
Yesterday, our last day in Brussels we started at the
&lt;a href=&#34;https://www.brusselsmuseums.be/en/museums/jewish-museum-of-belgium&#34;&gt;Jewish&lt;/a&gt;
Museum. It covered the expected intro to Judiasm, had a
Holocaust section and a few exhibits by and about Jewish artists from
or related to Belgium. I was particularly interested in the first two
things - I wanted to see how they were covered in Europe. Very
interesting and as with everything else we&amp;#39;ve seen, worth a visit. I
particularly liked the information about development and histories of
some of the congregations that formed in Belgium.&lt;/p&gt;
&lt;p&gt;
For the afternoon we decided to go castle hunting with Helen. First up
was &lt;a href=&#34;https://www.castles.nl/grimbergen-castle&#34;&gt;Grimbergen&lt;/a&gt;. Cool old castle but mostly ruins. We were able to walk
around and liked it but it was a short stop - not that much there.&lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/brussels/castle1.jpg&#34; alt=&#34;/img/brussels/castle1.jpg&#34; title=&#34;/img/brussels/castle1.jpg&#34; width=&#34;300px&#34;/&gt;
&lt;p&gt;
We then found our way to Chateau de Bouchout at Plantentuin
Meise. Cool castle but also in a botanic garden. We walked a couple of
the sections and went through a pretty amazing greenhouse. Plus
teachers got free entry. Another win.&lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/brussels/castle4.jpg&#34; alt=&#34;/img/brussels/castle4.jpg&#34; title=&#34;/img/brussels/castle4.jpg&#34; width=&#34;300px&#34;/&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/brussels/castle3.jpg&#34; alt=&#34;/img/brussels/castle3.jpg&#34; title=&#34;/img/brussels/castle3.jpg&#34; width=&#34;300px&#34;/&gt;
&lt;p&gt;
All in all three successful days of touring.&lt;/p&gt;
&lt;p&gt;
We almost had an adventure the next day - this morning on our way to
Antwerp but I&amp;#39;ll save that for the next post.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Utrecht</title>
      <link>https://cestlaz.github.io/post/utrecht/</link>
      <pubDate>Sun, 01 Oct 2023 10:38:29 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/utrecht/</guid>
      <description>&lt;p&gt;
So I&amp;#39;m spending these two weeks vacationing in Europe with my
daughter. She was planning on this trip anyway as part of her work
&amp;#34;recharge&amp;#34; and is taking me along for a first retirement trip.&lt;/p&gt;
&lt;p&gt;
So, if you&amp;#39;re looking for CS Ed content or Emacs come back in a week
or two since today is all about travel&lt;/p&gt;
&lt;p&gt;
We spent the last few days in Utrecht. Why Utrecht? Why not. Also
Batya has a friend here that she&amp;#39;s only met virtually through a
writers group and this was a chance for them to connect in person.&lt;/p&gt;
&lt;p&gt;
We were of course zonked from the red-eye flight but wandered a bit by
one of the canals and managed to stay up until evening.&lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/utrecht/canal.jpg&#34; alt=&#34;/img/utrecht/canal.jpg&#34; title=&#34;/img/utrecht/canal.jpg&#34; width=&#34;300px&#34;/&gt;
&lt;p&gt;
We were told that pancakes are a thing in The Netherlands so decided
on a pancake dinner:&lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/utrecht/dosa.jpg&#34; alt=&#34;/img/utrecht/dosa.jpg&#34; title=&#34;/img/utrecht/dosa.jpg&#34; width=&#34;300px&#34;/&gt;
&lt;p&gt;
Well, Dosa and Uttapam are pancakes :-). Don&amp;#39;t worry, we rectified
this yesterday.&lt;/p&gt;
&lt;p&gt;
The next day started with a bike tour of the city. I&amp;#39;ve always felt
that touring by bike was ideal. Cars move too fast. Even those busses
and trolleys with the tour guides. You literally only get a &amp;#34;drive
by.&amp;#34; On foot is terrific and we walk miles and miles when visiting new
places but walking keeps you confined to a small area. By bike you can
cover a good amount of ground but you can go slow enough to smell the
flowers. Also stopping and starting is trivial.&lt;/p&gt;
&lt;p&gt;
We got a good feel for the geography of the city, some history, more
canals (and a fish doorbell)&lt;/p&gt;
&lt;figure&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/utrecht/tour1.jpg&#34; alt=&#34;/img/utrecht/tour1.jpg&#34; title=&#34;/img/utrecht/tour1.jpg&#34; width=&#34;250px&#34;/&gt;
&lt;figcaption&gt;
Starting the tour by Dom Tower
&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;figure&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/utrecht/tour2.jpg&#34; alt=&#34;/img/utrecht/tour2.jpg&#34; title=&#34;/img/utrecht/tour2.jpg&#34; width=&#34;250px&#34;/&gt;
&lt;figcaption&gt;
A cloister by the Dom Church
&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;figure&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/utrecht/tour3.jpg&#34; alt=&#34;/img/utrecht/tour3.jpg&#34; title=&#34;/img/utrecht/tour3.jpg&#34; width=&#34;250px&#34;/&gt;
&lt;figcaption&gt;
more canal
&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;figure&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/utrecht/doorbell.jpg&#34; alt=&#34;/img/utrecht/doorbell.jpg&#34; title=&#34;/img/utrecht/doorbell.jpg&#34; width=&#34;250px&#34;/&gt;
&lt;figcaption&gt;
A Fish Doorbell
&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;figure&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/utrecht/tour4.jpg&#34; alt=&#34;/img/utrecht/tour4.jpg&#34; title=&#34;/img/utrecht/tour4.jpg&#34; width=&#34;250px&#34;/&gt;
&lt;figcaption&gt;
down at the water level
&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;
We finished the day wandering around. Saw the Stadhuis (city hall)
which reminded me of the New Amsterdam Stadhuis ruins under 85 broad.&lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/utrecht/stadhuis.jpg&#34; alt=&#34;/img/utrecht/stadhuis.jpg&#34; title=&#34;/img/utrecht/stadhuis.jpg&#34; width=&#34;250px&#34;/&gt;
&lt;p&gt;
We also passed a number of places that had New York foods:&lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/utrecht/lox.jpg&#34; alt=&#34;/img/utrecht/lox.jpg&#34; title=&#34;/img/utrecht/lox.jpg&#34; width=&#34;250px&#34;/&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/utrecht/nyfood.jpg&#34; alt=&#34;/img/utrecht/nyfood.jpg&#34; title=&#34;/img/utrecht/nyfood.jpg&#34; width=&#34;250px&#34;/&gt;
&lt;p&gt;
I&amp;#39;m always torn when seeing these. On the one hand, I&amp;#39;m curious on a
different cultures take on NY foods but I also don&amp;#39;t want to waste a
meal when I could be getting local stuff.&lt;/p&gt;
&lt;p&gt;
We got a giant Stroop Waffle instead&lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/utrecht/stroop.jpg&#34; alt=&#34;/img/utrecht/stroop.jpg&#34; title=&#34;/img/utrecht/stroop.jpg&#34; width=&#34;250px&#34;/&gt;
&lt;p&gt;
The next day we had that pancake meal with Batya&amp;#39;s friend and also
went to the Speelklock musem which is all about self-playing musical
instruments. Very interesting. Other highlights is finding some
locally dyed yarn which will later be turned into socks by either
Batya or Devorah and a flock of sheep (sans Wallace and Gromit).&lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/utrecht/pancake.jpg&#34; alt=&#34;/img/utrecht/pancake.jpg&#34; title=&#34;/img/utrecht/pancake.jpg&#34; width=&#34;250px&#34;/&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/utrecht/music.jpg&#34; alt=&#34;/img/utrecht/music.jpg&#34; title=&#34;/img/utrecht/music.jpg&#34; width=&#34;250px&#34;/&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/utrecht/yarn.jpg&#34; alt=&#34;/img/utrecht/yarn.jpg&#34; title=&#34;/img/utrecht/yarn.jpg&#34; width=&#34;250px&#34;/&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/utrecht/sheep.jpg&#34; alt=&#34;/img/utrecht/sheep.jpg&#34; title=&#34;/img/utrecht/sheep.jpg&#34; width=&#34;250px&#34;/&gt;
&lt;p&gt;
Today we visited their train museum. We loved it since it was a train
museum but was also reminded of the local history with a sombering
train car.&lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/utrecht/train-outside.jpg&#34; alt=&#34;/img/utrecht/train-outside.jpg&#34; title=&#34;/img/utrecht/train-outside.jpg&#34; width=&#34;250px&#34;/&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/utrecht/train-inside.jpg&#34; alt=&#34;/img/utrecht/train-inside.jpg&#34; title=&#34;/img/utrecht/train-inside.jpg&#34; width=&#34;250px&#34;/&gt;
&lt;p&gt;
A car used on the rail network in Europe during the Holocaust to
transport Jews to the concentration camps.&lt;/p&gt;
&lt;p&gt;
Yes, it brought us down but we were glad it was there.&lt;/p&gt;
&lt;p&gt;
More wanderings brought us back to our Airbnb where I&amp;#39;m writing this
now.&lt;/p&gt;
&lt;p&gt;
Tomorrow we head to Brussels to spend a couple of days with an old
teaching friend and then to Amsterdam.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>~~Lost in the~~ Locked out of Amazon</title>
      <link>https://cestlaz.github.io/post/lost-in-the-amazon/</link>
      <pubDate>Tue, 26 Sep 2023 08:00:07 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/lost-in-the-amazon/</guid>
      <description>&lt;p&gt;
A friend of mine reached out the other day, it turns out a friend of
theirs was all of a sudden locked out of Amazon. Couldn&amp;#39;t view videos,
couldn&amp;#39;t purchase, as far as I could tell and couldn&amp;#39;t get to their
paid for content.&lt;/p&gt;
&lt;p&gt;
Amazon said that the user violated their terms of service but didn&amp;#39;t
specify how or when and after a couple of back and forths they
declared the case closed.&lt;/p&gt;
&lt;p&gt;
This is actually pretty scary.&lt;/p&gt;
&lt;p&gt;
Amazon is such a dominant player - there are plenty of things ranging
from their original content - books to ebooks to daily necessities and
food and even drugs these days. Just as Walmart has become the only
option for some, Amazon has become the only option for certain things
for others and to be summarily locked out with no warning and no
recourse is both scary and should be alarming.&lt;/p&gt;
&lt;p&gt;
This is a result of both capitalism and tech. As single big players
take more and more control and the human element disappears more and
more both due to lack of storefronts and even lack of people
responding to calls and emails consumers are left in a precarious
spot.&lt;/p&gt;
&lt;p&gt;
I haven&amp;#39;t been locked out of Amazon but recently had my own similar
although less potentially damaging incident.&lt;/p&gt;
&lt;p&gt;
I docked a CitiBike at Union Square. The lock was good but their
server didn&amp;#39;t close the ride. I immediately called. The customer
support agent noted that the station was offline and that they&amp;#39;d make
a note of it on my account so that when things cleared up I wouldn&amp;#39;t
be charged.&lt;/p&gt;
&lt;p&gt;
The next day, I was charged. A couple of hundred dollars + $1000 more
since they said the bike was never returned.&lt;/p&gt;
&lt;p&gt;
I spent far too much time emailing and calling and while Lyft,
CitiBike&amp;#39;s parent company readily admitted that my account had the 
notation saying I did it right and that they were in error, they
refused to do anything. In the old days, you could usually get bumped
up to a higher level but current systems are much better at preventing
users from getting to people that can resolve problems.&lt;/p&gt;
&lt;p&gt;
Ultimately, the only way I as able to get a response and resolution
was to publicly Tweet to Lyft and CitiBike with the problem and
complaint. Once I did that the problem was cleared up in minutes.&lt;/p&gt;
&lt;p&gt;
Now, mind you, the only way this got solved was by publicly shaming
the company on Twitter. That seems to be the only way to get real
customer support these days and with Musk killing Twitter that avenue
is sure to disappear.&lt;/p&gt;
&lt;p&gt;
This is the state of commerce and in many cases living these days int
he US and those at the bottom economic rung are the most hurt - they
don&amp;#39;t have friends at companies that can help, alternatives to the
cheapest services, and can&amp;#39;t absorb the hit of &amp;#34;just paying the $2.&amp;#34;&lt;/p&gt;
&lt;p&gt;
Not directly related but it makes me think about how sad things are
when so much primary health care ends up being GoFundMe campaigns.&lt;/p&gt;
&lt;p&gt;
We have to do better.&lt;/p&gt;
&lt;p&gt;
Those of us who teach CS and Technology though have a platform to do
better. As technology advances we have to ask more if we should rather
than if we can and as teachers we have to get that mindset into our
kids. In the short term I&amp;#39;m not hopeful for change but education is
the long term and we have to do a better job collectively on all those
things around the tech that drive policy and ways of implementing
things and ultimately greatly affect lives.&lt;/p&gt;
&lt;p&gt;
As an unrelated end note I&amp;#39;ve been trying to post at least once a week
these past few months. At least one blog post and one emacs
video. Tomorrow I&amp;#39;ll beheaded off to Utrecht, Brussels and Amsterdam
with my daughter for a couple of weeks so there probably won&amp;#39;t be any
new content until I&amp;#39;m back. Looking forward to the trip - I think this
will be the longest I&amp;#39;ve been away from home maybe ever.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Leaving a golden age for CS self-learners</title>
      <link>https://cestlaz.github.io/post/leaving-golden-age/</link>
      <pubDate>Wed, 20 Sep 2023 12:33:22 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/leaving-golden-age/</guid>
      <description>&lt;p&gt;
In many ways we might be entering a golden age for learning CS. After
years of hard work by many many people, more and more schools are
offering CS, states are making standards (mixed opinions on these),
and in some cases, requirements are being implemented.&lt;/p&gt;
&lt;p&gt;
In one interesting way, though, for the self-learner I&amp;#39;m noticing
that we&amp;#39;re leaving what I think was a golden age. You might say, &amp;#34;but
Mike, there are online videos and tutorials for almost everything
these days&amp;#34; and that&amp;#39;s true but on the other hand, many types of
resources that were common around 10 years ago are no longer being
made available.&lt;/p&gt;
&lt;p&gt;
When I started to learn about computers back in the 80s there were few
paths for the self learner. If you were able to afford one you could
get a personal computer but compilers, if available were crazy
expensive and there weren&amp;#39;t online communities and resources like
there are now.&lt;/p&gt;
&lt;p&gt;
A good example of this was databases. You couldn&amp;#39;t play with SQL
unless you were on a job somewhere that had an SQL database server or
maybe in a class at the college level. For the most part, if you
wanted to learn about a relational database, you&amp;#39;d have to &amp;#34;acquire&amp;#34; a
program like dBase to run locally. Not SQL but it was relational.&lt;/p&gt;
&lt;p&gt;
This changed a bit as PCs became more prevalent and cheaper. A
big player in these changes was Borland. They actually made affordable
tools. Turbo Pascal, C++, Prolog - all affordable to even a college
aged kid. Add to that Paradox, a relational database, Quattro, a
spreadsheet, Sprint their word processor, and other tools and a self
learner could at least have a pretty robust set of CS tools on an
affordable IBM-PC clone.&lt;/p&gt;
&lt;p&gt;
Things really got better when the Internet started to hit and Linux
became available. Free tools galore. SQL became available with MySQL
and Postgresql (my preference), all the programming languages and
tools you could ever hope for and so much was open source and free to
use. We also saw the rise of public code repositories like
Sourceforge which preceded today&amp;#39;s GitHub and GitLab.&lt;/p&gt;
&lt;p&gt;
Of course, all of these things are available today so why do I say
we&amp;#39;re at the end of a Golden Age? What&amp;#39;s going away?&lt;/p&gt;
&lt;p&gt;
Free tiers for APIs and services. &lt;/p&gt;
&lt;p&gt;
As the Web grew, aspiring techies had to move from writing a program
that ran on their personal computer to something that ran on a
server - that communicated with other servers and clients running web
browsers and custom front ends. For the self learner, this wasn&amp;#39;t a
problem because there were tons of services that had free tiers in
their membership models or at least free starter credits that had a
generous lifespan.&lt;/p&gt;
&lt;p&gt;
If you needed to host a project - no problem, spin up a Heroku
instance. On free it wouldn&amp;#39;t be great and you wouldn&amp;#39;t want it for a
commercial service but it was fine for a small personal project or
just to learn. It was gold for a kid looking to host a project to show
off to potential hiring officers.&lt;/p&gt;
&lt;p&gt;
Want to go more bare metal - use the Digital Ocean starter credits -
enough for a full year on a low end virtual server. Again, nothing
powerful enough for a business but great for a student or just to
learn.&lt;/p&gt;
&lt;p&gt;
Need to work with with sending and receiving sms messages and cell
phones? Twillio had a great free tier - it was set up so that you
could learn and play as much as you wanted but it was restricted in a
way to make it impractical to exploit for a real business. Perfect for
learners without costing the company.&lt;/p&gt;
&lt;p&gt;
Need a nosql database - try the MongoDB free tier or just download the
whole thing onto that Digital Ocean droplet. &lt;/p&gt;
&lt;p&gt;
There was pretty much no service, technology or API that you couldn&amp;#39;t
work with for free on your personal computer or using a free tier
online.&lt;/p&gt;
&lt;p&gt;
Now that&amp;#39;s all changing.&lt;/p&gt;
&lt;p&gt;
The first thing that got me thinking about this was the current AI
boom. No longer can you just develop locally. Want to do that new
fangled AI stuff at home? Good luck young kid starting out at getting
all that affordable GPU power. Good luck any individual. So since you
can&amp;#39;t do it locally, you&amp;#39;ve got to find a service. Okay, there are
some free things out there but more and more the free tiers are drying
up. I&amp;#39;m seeing more starter credit scenarios but with relative short
half lives. that&amp;#39;s a problem unless you can sign up and do what you
want to do before the credits expire. That&amp;#39;s though if you&amp;#39;re bouncing
from thing to thing and can&amp;#39;t necessarily say &amp;#34;okay, these two weeks
will be all on this service.&amp;#34; I get it that some of the entry tier
rates are very reasonable, at least for someone like me who&amp;#39;s at the
end of my career but I think about the kid I was teaching at Hunter or
maybe the recent Hunter College graduate who hasn&amp;#39;t started in tech
yet and is really counting the pennies.&lt;/p&gt;
&lt;p&gt;
We&amp;#39;ve also seen more restrictions on non AI online services. Both in
terms of price and complexity (I&amp;#39;m looking at you OAuth2). &lt;/p&gt;
&lt;p&gt;
So yeah, some things these days are great for the self-learner but I&amp;#39;m
really missing those days from about 10 years ago before the web got
too &amp;#34;civilized.&amp;#34;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Learning Elisp 10 - elisp data structures</title>
      <link>https://cestlaz.github.io/post/learning-elisp-10/</link>
      <pubDate>Mon, 18 Sep 2023 13:57:18 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/learning-elisp-10/</guid>
      <description>
&lt;p&gt;
I&amp;#39;m leaving our next elisp project for when I get back from my
vacation but realized I could make a short video with some
preliminaries - some elisp tools that we&amp;#39;ll need that we can get out
of the way.&lt;/p&gt;
&lt;p&gt;
Specifically, elisp&amp;#39;s built in data structures. &lt;/p&gt;
&lt;p&gt;
We&amp;#39;ve already used the &lt;strong&gt;list&lt;/strong&gt; data structure and in this video we go a
bit more in depth.&lt;/p&gt;
&lt;p&gt;
Lists are great for, well, list processing but they&amp;#39;re not great for
random access. For that we can use vectors. Think of them like arrays
in other languages but with a functional way of accessing:&lt;/p&gt;
&lt;div class=&#34;src src-emacs-lisp&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  (setq v [&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;30&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;40&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;50&lt;/span&gt;]) &lt;span style=&#34;color:#75715e&#34;&gt;;; define a vector&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  (&lt;span style=&#34;color:#a6e22e&#34;&gt;aref&lt;/span&gt; v &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;) &lt;span style=&#34;color:#75715e&#34;&gt;;; returns the 20, the value in index 1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  (&lt;span style=&#34;color:#a6e22e&#34;&gt;aset&lt;/span&gt; v &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;) &lt;span style=&#34;color:#75715e&#34;&gt;;; stores 100 in index i&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;;; the vector will now have [10 100 30 40 50]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  (&lt;span style=&#34;color:#a6e22e&#34;&gt;mapcar&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;#&amp;#39;1+&lt;/span&gt; v)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;;; the above returns a new list with (2 101 31 41 51)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
Note in that last example above we can use mapcar which we covered in
an earlier video on vectors as well as lists but the return is a new
list, not a vector.&lt;/p&gt;
&lt;p&gt;
We also cover elisp hash tables which are similar to python
dictionaries. With them you can store and retrieve values based on
keys (key value pairs). We&amp;#39;re not actually going to use them in the
next project so you can see the video for details.&lt;/p&gt;
&lt;p&gt;
The data structure we will be using are association lists. You can
think of them as a lightweight hash table. Basically a list of
pairs. A pair is a special form of a list that only has two items
(well, not exactly but see the video for details). We write them by
putting a period between the two elements - &lt;code&gt;(1 . 2)&lt;/code&gt;  - that&amp;#39;s a pair
with 1 as the first part and 2 as the second.&lt;/p&gt;
&lt;p&gt;
Here&amp;#39;s an association list and how we use it:&lt;/p&gt;
&lt;div class=&#34;src src-emacs-lisp&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  (setq a &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#39;&lt;/span&gt;((&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;one value&amp;#34;&lt;/span&gt;) (&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;two value&amp;#34;&lt;/span&gt;) (&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;three value&amp;#34;&lt;/span&gt;)))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  (&lt;span style=&#34;color:#a6e22e&#34;&gt;assoc&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; a) &lt;span style=&#34;color:#75715e&#34;&gt;;; returns (2 . &amp;#34;two value&amp;#34;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  (&lt;span style=&#34;color:#a6e22e&#34;&gt;cdr&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;assoc&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; a)) &lt;span style=&#34;color:#75715e&#34;&gt;;; returns &amp;#34;two value&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  (rest (&lt;span style=&#34;color:#a6e22e&#34;&gt;assoc&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; a)) &lt;span style=&#34;color:#75715e&#34;&gt;;; also returns &amp;#34;two value&amp;#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
In our next project, we&amp;#39;ll use association lists to store the string
names for emojis as the keys and the actual emojis for the values.&lt;/p&gt;
&lt;p&gt;
That&amp;#39;s it for now. More in a few weeks.&lt;/p&gt;
&lt;div id=&#34;outline-container-headline-1&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-1&#34;&gt;
Code:
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-1&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
The code for the series is still up here:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://gitlab.com/zamansky/learning-elisp-code&#34;&gt;https://gitlab.com/zamansky/learning-elisp-code&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;but this episode doesn&amp;#39;t have any specific code.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-2&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-2&#34;&gt;
The videos:
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-2&#34; class=&#34;outline-text-2&#34;&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/oszVyBvxmzg?si=TMjUlMSI1TQQYnPT&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;
Video link: &lt;a href=&#34;https://youtu.be/oszVyBvxmzg&#34;&gt;https://youtu.be/oszVyBvxmzg&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Who Should Teach Tech Job Skills</title>
      <link>https://cestlaz.github.io/post/who-teach-tech-skills/</link>
      <pubDate>Fri, 15 Sep 2023 11:52:12 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/who-teach-tech-skills/</guid>
      <description>&lt;p&gt;
Relating to the linkedin post that spawned my last blog &lt;a href=&#34;https://cestlaz.github.io/post/work-on-open-source/&#34;&gt;post&lt;/a&gt; a friend noted:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;… why should it be the burden on companies trying to
hire folks with those skillsets to also teach those skillsets? Isn’t
that what educational institutions are supposed to do (git, etc.)?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Even though companies, if they actually cared about equity and
diversity would be better served to take on this burden, the reality
is that they haven&amp;#39;t and it&amp;#39;s either left for students on their own,
or as I commented on in my &lt;a href=&#34;https://cestlaz.github.io/post/work-on-open-source/&#34;&gt;post&lt;/a&gt; colleges.&lt;/p&gt;
&lt;p&gt;
I get where my friend is coming from but he is much younger than I am
so he doesn&amp;#39;t know that technical training was in fact all on the
companies but somewhere along the line, probably in search of greater
corporate profits, they stopped.&lt;/p&gt;
&lt;p&gt;
When I came out of college at the end of the 80s training programs
were the norm. The training program could be a couple of weeks or it
could be many months. You&amp;#39;d learn about the business - Wall Street in
my case at Goldman and also the technical side. My training program
had a track where they taught the C language and then my group, once I
was actually assigned then had training in Windows
programming. Outside courses were also free for the taking if they
would make for a more productive employee.&lt;/p&gt;
&lt;p&gt;
Smaller companies didn&amp;#39;t have training programs but they also had much
simpler requirements. I interviewed at a smaller finance house and the
only tech I would need was how to use Turbo Pascal. An insurance
company just required Paradox programming - a popular PC database from
back in the day. This is a far cry from today where complexity abounds
and there&amp;#39;s probably multiple courses worth of material one needs to
be productive in the tech world. &lt;/p&gt;
&lt;p&gt;
This made sense for the companies at the time and it also made sense how it
evolved. Prior to CS being &amp;#34;a thing&amp;#34; there was no specific college to
prepare one for industry and as CS developed, it developed as an
academic field like say Chemistry, Math, or History. Those subjects
weren&amp;#39;t directly focused on getting jobs so why would CS be? I guess
finance and accounting in business programs are more job focussed but
then so is IT (Information Technology) that developed also in business
schools. IT, however, is not CS and what you learn in an IT major is
very different other than some of the lower courses than the CS skills
that are required to get a software engineering job &lt;sup class=&#34;footnote-reference&#34;&gt;&lt;a id=&#34;footnote-reference-1&#34; href=&#34;#footnote-1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;p&gt;
At some point between when I graduated and I started paying attention
again the training programs were gone. Sure, companies like Meta still
have their new hire boot camps but there&amp;#39;s an assumption that you know
far more non-classroom tech than they did back in the day.&lt;/p&gt;
&lt;div class=&#34;footnotes&#34;&gt;
&lt;hr class=&#34;footnotes-separatator&#34;&gt;
&lt;div class=&#34;footnote-definitions&#34;&gt;
&lt;div class=&#34;footnote-definition&#34;&gt;
&lt;sup id=&#34;footnote-1&#34;&gt;&lt;a href=&#34;#footnote-reference-1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;
&lt;div class=&#34;footnote-body&#34;&gt;
&lt;p&gt;I know, a lot of the CS major is not relevant to SWE jobs but
you do need data structures and algorithms and sometimes more to get
past the ridiculous interview process.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m guessing that moving forward, colleges will teach more of the
practical side - this has already been happening with new courses like
web development and new majors like software engineering. It&amp;#39;s also
something that created an opening for code schools and boot camps even
though I think those are largely flawed.&lt;/p&gt;
&lt;p&gt;
It also reminds me that in a way things were better back then - a
young college kid had more doors or at least possible doors open to
them since the companies would take a more raw candidate but people
today don&amp;#39;t even know what they&amp;#39;re missing.&lt;/p&gt;
&lt;p&gt;
Unfortunately, the same is true for things fare more important than
learning git.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Just work on open source</title>
      <link>https://cestlaz.github.io/post/work-on-open-source/</link>
      <pubDate>Tue, 12 Sep 2023 07:40:37 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/work-on-open-source/</guid>
      <description>
&lt;p&gt;
Just work on an open source project. That&amp;#39;s a frequent refrain given to
college students. What&amp;#39;s the best way to set yourself up for an
internship or job?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;do well in your classes&lt;/li&gt;
&lt;li&gt;prepare for the ridiculous technical interviews by doing lots of
problems and interview prep&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;build a personal project or better yet, contribute to open
source&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Everyone gives this advice and and in truth it&amp;#39;s good advice. The
problem is that while this is an easy ask for well to do students at
&amp;#34;elite&amp;#34; institutions where the majority have little to do
other than their courseworkand they&amp;#39;re mostly living 24/7 on campus
it&amp;#39;s a much bigger ask for the low income student at the commuter
school.&lt;/p&gt;
&lt;p&gt;
Even if you look at the privileged student who can dedicate time to a
side project, diving into open source is harder than it seems. &lt;/p&gt;
&lt;p&gt;
To start, you have to know all the tooling required to work on a
typical open source project. Git with branching and merging and
dealing with related conflicts. Issues and pull requests,
forks. Probably the programming language or languages the project uses
and likely even more.&lt;/p&gt;
&lt;p&gt;
You&amp;#39;ve also got to find the project, figure out what it needs and how,
when you&amp;#39;re ready to contribute, that contribution is expected to be
done. That&amp;#39;s a really tricky one because every project has its own
organization, steps to take, and even culture.&lt;/p&gt;
&lt;p&gt;
All this and more can be very intimidating even for a student with all
the free time in the world. &lt;/p&gt;
&lt;p&gt;
It&amp;#39;s an order of magnitude harder for low income students. To start,
if you&amp;#39;re at a commuter school you&amp;#39;re far less likely to have a tech
or CS community on campus. When you&amp;#39;re all living on campus, if
nothing else, you&amp;#39;ll be in the dorms together - easy to hang out, work
on things late, and in general make use of the school&amp;#39;s resources. At
Hunter, for instance, things are so overcrowded that if you&amp;#39;re lucky
you can find a spot of floor in the hall to work. Not exactly
conducive to working on side projects and certainly not conducive to
creating a student culture of support.&lt;/p&gt;
&lt;p&gt;
Next, low income students, at least many of the ones I&amp;#39;ve worked with,
have additional demands that eat up any free time. Many have to work
to pay tuition or even make rent or help the family make rent. They
might have limited computer access at home - one computer and younger
K12 siblings that also need access. They&amp;#39;ll have the related challenge
of connectivity. These are very real problems that were foreign to me when
I was a student.  It&amp;#39;s even more than just a hindrance on working on
a personal portfolio prjoect. It can prevent a student from taking an
internship.&lt;/p&gt;
&lt;p&gt;
Even before the latest tech job crunch a low income student might not
be able to take a high paying summer internship should they get
one. The student may very well need year round income which they
currently have at, let&amp;#39;s say Starbucks. Now, you might say that the
income from the tech internship will be much greater and the student
will likely get a return offer. The catch is &amp;#34;likely.&amp;#34; If you&amp;#39;re a
middle class or upper income student, you can take the &amp;#34;likely.&amp;#34; If
you&amp;#39;re absolutely dependent on that year round income, it&amp;#39;s a much
bigger risk.&lt;/p&gt;
&lt;p&gt;
So, you can see that it&amp;#39;s not enough to say &amp;#34;just work on open source&amp;#34;
even for a well to do student. For a low income student, it&amp;#39;s a
yeoman&amp;#39;s ask.&lt;/p&gt;
&lt;div id=&#34;outline-container-headline-1&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-1&#34;&gt;
What can be done?
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-1&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
Still, we can make it better.&lt;/p&gt;
&lt;p&gt;
A lot can be done within college CS classes but CS programs have to
buy in. Many of the tech tools can be taught in core CS classes. I&amp;#39;ve
done this in my CS0, CS1, and CS2 classes at Hunter College and have
done the same at Stuyvesant at the High School level. I use git and a
testing framework instead of an autograder for example. That gives me
the platform to teach much of what students need without taking away
much of the time needed from the rest of the curriculum. Similarly you
can set up projects where students work in each others or other
peoples code bases. This helps familiarize the students with what they
will need for both working in open source and likely at their future
jobs.&lt;/p&gt;
&lt;p&gt;
CS programs with project courses can also be huge. Hunter has a
capstone course that&amp;#39;s close to being terrific. On the one hand, it
checks all the boxes - toolsets, teamwork, testing, etc.. The problem
is that it&amp;#39;s a terminal course taken right before graduation. This
type of course should be taken at least a year earlier - probably
right after CS2 so that students can learn a bit about software
development and also develop a team portfolio piece early enough so
that it can benefit them in interviews.&lt;/p&gt;
&lt;p&gt;
Space is another big one. Schools have to be able to carve out space
for students to chill. I was able to get a small room for my
students - an honors lounge, if you would (but it was really open to
any interested and active CS student). This gave students a place to
hang out between classes, get to know each other and if time allowed,
get together to work on things. You could say - &amp;#34;hey, if anyone&amp;#39;s
available let&amp;#39;s go to the lounge every Wednesday at 6:00 to work on
whatever.&amp;#34;&lt;/p&gt;
&lt;p&gt;
Another big one that&amp;#39;s really under the radar is financial support. At
times Hunter&amp;#39;s administration was able to fund students with
microgrants. Small amounts that would allow a student to work on a
project or attend a program and the grant would make up the money lost
from missing a few Starbucks shifts.&lt;/p&gt;
&lt;p&gt;
What can be done outside of the schools?&lt;/p&gt;
&lt;p&gt;
First and foremost, be understanding. If a student isn&amp;#39;t working on a
personal project or open source, there might be a good
reason. Understand that a student with two &amp;#34;professional&amp;#34; parents is
going to also come across as more polished than a student who may
never have stepped foot into an office setting.&lt;/p&gt;
&lt;p&gt;
Next, provide mentorship. This can be one on one or small group but it
can also be a company program or initiative. Right prior to covid, I
was working with Cockroach labs on a set of open source workshops to
address all the problems listed above. I&amp;#39;ve also worked with other
companies on mentoring programs that have been very succesful in
mentoring my Hunter students.&lt;/p&gt;
&lt;p&gt;
Finishing up, I&amp;#39;d be remiss if I didn&amp;#39;t mention &lt;a href=&#34;https://hacktoberfest.com/&#34;&gt;Hacktoberfest&lt;/a&gt;
sponsored by DigitalOcean. Every October coders are encouraged to dive
in to open source. Hacktoberfest helps students get started and also
curates lists of good &amp;#34;first pull requests.&amp;#34; Things like documentation
and testing changes on projects that will be more accessible and
forgiving for neophytes.&lt;/p&gt;
&lt;p&gt;
Well, I think that&amp;#39;s it. I hope this paints a clearer picture of some
of the challenges our students, and particularly our low income
students face and when you wonder why they don&amp;#39;t simply &amp;#34;work on open
source&amp;#34; there&amp;#39;s probably a good reason why.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>A new school year - what&#39;s to come</title>
      <link>https://cestlaz.github.io/post/school-start-2324/</link>
      <pubDate>Wed, 06 Sep 2023 06:46:45 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/school-start-2324/</guid>
      <description>&lt;p&gt;
Another school year is starting. Hunter College&amp;#39;s classes started last
week and public school K12 teachers went back yesterday. I&amp;#39;ve been
having some &amp;#34;back to school dreams&amp;#34; and, yeah, already missing being
with the kids but not missing those opening meetings and the rest of
the nonsense.&lt;/p&gt;
&lt;p&gt;
Still, I&amp;#39;m thinking about what this school year will bring in terms of
CS. &lt;/p&gt;
&lt;p&gt;
The elephant in the room is just the same as what we closed out with
last Spring - AI - specifically generative AI.&lt;/p&gt;
&lt;p&gt;
I think AI is particularly interesting because it&amp;#39;s going to be a big
topic in CS, in other subjects and also in school and district policy.&lt;/p&gt;
&lt;p&gt;
Unfortunately, we&amp;#39;re already seeing the education community - CS and
otherwise play the usual game - anoint the usual suspects experts and
give them a platform and eventually those opinions will become the
&amp;#34;right ones.&amp;#34; Please stop. There are AI experts - people who&amp;#39;ve
created, worked with, analyzed and studied these systems and they can
and should be engaged as experts to communicate what we&amp;#39;re dealing
with on a technical level but nobody&amp;#39;s been exploring and
experimenting with these tools long enough in school and class
settings to be an expert. All we have are people trying some new
things now. Results will start to come in and we might eventually have
&amp;#34;experts&amp;#34; in AI in education but we don&amp;#39;t know so just stop. I wrote
about this &lt;a href=&#34;https://cestlaz.github.io/post/expert-thought-leader/&#34;&gt;here&lt;/a&gt; where I was at a conference and there were two
speakers - both given a platform as &amp;#34;experts.&amp;#34; One was way off base
and should never have been given the platform. The other just shared
&amp;#34;here&amp;#39;s what I&amp;#39;m trying and here&amp;#39;s what others are trying - give it a
go yourself.&amp;#34; That second speaker was great.&lt;/p&gt;
&lt;p&gt;
In non CS classes, I suspect we&amp;#39;ll see the usual play out. Some
teachers and schools will go draconian with concerns over cheating and
copying and others will come up with clever ways to use generative AI
to help build classroom exercises and student experiences.&lt;/p&gt;
&lt;p&gt;
I saw one person talking about redefining how he taught his English
classes and that concerns me. He said that with generative AI, writing
is less important so he could now focus on reading.&lt;/p&gt;
&lt;p&gt;
This is a problem. Already there are too many HS English teachers who
fancy themselves college literature professors. Writing, as in pen to
paper or finger to keyboard might change because we have all these
newfangled tools but it&amp;#39;s not really about writing. It&amp;#39;s about
communication. That&amp;#39;s the needed skill and that isn&amp;#39;t going
away. Becoming a literature class won&amp;#39;t help there and I see this
attitude as problematic if it takes hold.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m also concerned about the AI tutor replacing teachers. This one&amp;#39;s
tricky. On the one hand, automated feedback can be a great addition in
terms of student support but it can also be used, as I spoke about
when writing about Harvard&amp;#39;s &lt;a href=&#34;https://cestlaz.github.io/post/ai-replace-teaching/&#34;&gt;CS50&lt;/a&gt; and their using AI tutors. This will
probably be good for the students but it&amp;#39;s also a way of glossing over
serious deficiencies in either course design or delivery. I&amp;#39;m also
concerned about students - particularly introverts connecting more
with AIs than with people.&lt;/p&gt;
&lt;p&gt;
On the CS front, we&amp;#39;ll see a rush of new AI units. I haven&amp;#39;t had a
chance to review what&amp;#39;s already been put out there but we&amp;#39;ll see. It&amp;#39;s
a tough thing to get right for a CS class. K12 students by and large
won&amp;#39;t have the background to get their heads around a lot of what&amp;#39;s
going on so how can you give a fair inkling without overwhelming.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve seen good and bad with this over the years. A good example in
another topic is networking - a complex topic that middle school kids
aren&amp;#39;t by and large ready for, at least for a deep dive. That said,
I&amp;#39;ve seen teachers do wonderful units where the class becomes a packet
switching network breaking up messages, writing down packets, putting
them in envelopes and passing them through the room. In the end they
can&amp;#39;t sit down and code a networking stack but they have a good idea,
in the general sense, how it works.&lt;/p&gt;
&lt;p&gt;
On the bad side, was a set of Google lessons that I saw at SIGCSE a
few years ago. All fancy with graphics and sliders but in the end
really communicated nothing about how the system (a neural net in this
case) worked.&lt;/p&gt;
&lt;p&gt;
It&amp;#39;ll be interesting to see what comes but my money is on more weak
stuff than strong.&lt;/p&gt;
&lt;p&gt;
Within CS and tech we&amp;#39;ll see continuations of the usual issues - lack
of teachers, digital divide, potential changes in curriculum and the
like but in education as a whole we&amp;#39;ll see some other big issues to
pay attention to.&lt;/p&gt;
&lt;p&gt;
The trends in red states like Florida and how their policies are
downright dangerous to minorities. Book bannings, policies harmful to
marginalized communities - particularly the Black and LGBTQ
communities and privatization. The CS community has mostly been silent
on these with a short lived limited exception when the College Board /
DeSantis APAAS thing first came up. On the one hand, the CS community
appears to do lot - in our conferences and events inclusion is a big
topic but that&amp;#39;s coffee cooler talk. To the outside the voices in the
community are happy to go along to get along. I&amp;#39;d love to see that
change this year - stronger voices by conference organizers and power
players. Take a stand - don&amp;#39;t give me the CS or education isn&amp;#39;t
political because these days, everything is.&lt;/p&gt;
&lt;p&gt;
Anyway, before I get myself too riled up, I think I&amp;#39;ll stop. It should
be an interesting school year. I&amp;#39;ll be on the outside looking in and
figuring out how I can remain involved. For those of you in the
classroom - good luck for your openings, have fun with your kids and
try not to let the administrations bring you down.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Learning Elisp 9</title>
      <link>https://cestlaz.github.io/post/learning-elisp-9/</link>
      <pubDate>Tue, 29 Aug 2023 12:41:24 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/learning-elisp-9/</guid>
      <description>
&lt;p&gt;
In this video, we&amp;#39;re finally putting everything together for the
function-header project.&lt;/p&gt;
&lt;p&gt;
for the most part, it&amp;#39;s just putting a function wrapper (defun) around
code we&amp;#39;ve already written but there area a few new things.&lt;/p&gt;
&lt;p&gt;
In order to parse the parameter string we use a few interesting
functions. The parameter string might look something like this &amp;#34;int a,
double d, int something, char c&amp;#34; - type name pairs separate by a comma
and space. To parse this into a list, we can use string-split. We use
~(string-split param-string &amp;#34;, &amp;#34;) which splits around the comma/space
separators. This gives us a list &lt;code&gt;(&amp;#34;int a&amp;#34; &amp;#34;double d&amp;#34; &amp;#34;int something&amp;#34;
&amp;#34;char c&amp;#34;)&lt;/code&gt;  In elisp, stuff in parens is a list. We&amp;#39;ve usually been
interpreting lists as functions where the first item is the name and
the rest the parameters but we can also use them strictly as data.&lt;/p&gt;
&lt;p&gt;
We then revisit the mapcar function that we used in rot13. Mapcar
takes a function and a list and then returns a new list having applied
the function to each element. In our case, we use the &lt;code&gt;format&lt;/code&gt;
function we covered last time to reformat each paramter into a javadoc
string.&lt;/p&gt;
&lt;p&gt;
Finally, we use &lt;code&gt;string-join&lt;/code&gt; to join all the parameter string
elements in our list back into one string.&lt;/p&gt;
&lt;p&gt;
The other new elisp function we look at is &lt;code&gt;save-excursion&lt;/code&gt;. It&amp;#39;s
pretty simple but very useful for editor functions. It basically saves
the location of the point, does everything in its body and then
restores the point to where it was.&lt;/p&gt;
&lt;p&gt;
So, if you had this code block:&lt;/p&gt;
&lt;div class=&#34;src src-emacs-lisp&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  (next-line &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  (&lt;span style=&#34;color:#a6e22e&#34;&gt;forward-char&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  (do some stuff)&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
Your cursor (point) would have moved down 5 and 3 across and the stuff
would be done. When the block ends, the point would be wherever it was
moved to.&lt;/p&gt;
&lt;p&gt;
If, instead we do this:&lt;/p&gt;
&lt;div class=&#34;src src-emacs-lisp&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  (save-excursion
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    (next-line &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    (&lt;span style=&#34;color:#a6e22e&#34;&gt;forward-char&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    (do some stuff))&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
Then the same thing happens but at the end, the point is restored to
where it was when you started.&lt;/p&gt;
&lt;p&gt;
I also started using &lt;a href=&#34;https://github.com/xiongtx/eros&#34;&gt;eros&lt;/a&gt; mode which temprarily overlays the results of elisp
forms when you execute them. If you use Cider for Clojure development
it looks a lot like that. It&amp;#39;s easy and very useful for interactive
development.&lt;/p&gt;
&lt;p&gt;
Finally, as I mention in the video, I&amp;#39;ll be away for a couple of weeks
at the end of September and into October. Visiting Utrecht, Brussels,
Antwerp, and Amsterdam so if you&amp;#39;ve got any hidden gems for us to
visit please let us know. I really mention this though because it will
likely affect my video making schedule. Our next project - displaying
emojis automatically, is going to be three or four videos. Maybe
more. I don&amp;#39;t know if it makes sense to start 1 and then take the big
break so I might pause this project until I&amp;#39;m back in mid October or
maybe just do a one off before I go away. We&amp;#39;ll seen.&lt;/p&gt;
&lt;p&gt;
In the meantime, enjoy this one.&lt;/p&gt;
&lt;div id=&#34;outline-container-headline-1&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-1&#34;&gt;
Code:
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-1&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
The code for the series is still up here:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://gitlab.com/zamansky/learning-elisp-code&#34;&gt;https://gitlab.com/zamansky/learning-elisp-code&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;but this episode doesn&amp;#39;t have any specific code.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-2&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-2&#34;&gt;
The videos:
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-2&#34; class=&#34;outline-text-2&#34;&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/DqHuCePi2FA?si=h56rRPT1gK6hvmB0&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;
Video link: &lt;a href=&#34;https://www.youtube.com/watch?v=DqHuCePi2FA&#34;&gt;https://www.youtube.com/watch?v=DqHuCePi2FA&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Teacher Movies</title>
      <link>https://cestlaz.github.io/post/teacher-movies/</link>
      <pubDate>Tue, 29 Aug 2023 08:36:17 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/teacher-movies/</guid>
      <description>
&lt;p&gt;
It&amp;#39;s back to school time and in addition to all the usual back to
school angst and excitement it&amp;#39;s also time for the networks to stream
all those teacher movies.&lt;/p&gt;
&lt;p&gt;
Lots of a-list actors have been in teacher movies and many are really
entertaining but I&amp;#39;ve also found many of them to be problematic.&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s not because many of them are &amp;#34;white savior&amp;#34; films, even though,
yeah, that too, but rather because many are indirectly demeaning to
teachers and the teaching profession in general.&lt;/p&gt;
&lt;p&gt;
The typical trope is non teacher with no teaching background gets job
in hard school. Teacher struggles. Amazingly, teacher with no
background wins over their students and performs miracles. Many of
these movies are &amp;#34;based on a true story.&amp;#34;&lt;/p&gt;
&lt;p&gt;
Other highlighted tropes are:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;None of the experienced career teachers are any good. Their all
horrible by every account.&lt;/li&gt;
&lt;li&gt;The administrations are also similarly bad. &lt;/li&gt;
&lt;li&gt;As a result, the teacher rescues their class all by themselves.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Also interesting is that the star teacher in all the movies only ever
seems to teach one class.&lt;/p&gt;
&lt;p&gt;
Another interesting thing is that when reading the movie post-text or
looking up the teacher afterwards, they almost invariably left
education soon after - frequently it seems to cash in on the fame
resulting from the movie.&lt;/p&gt;
&lt;p&gt;
If you think about it, this sends a horrible message - well prepared,
trained, dedicated teachers are all bad. No administrators care for
the students and it takes these miracle workers to swoop in.&lt;/p&gt;
&lt;p&gt;
Nonsense - education is hard and is the long game and just like every
profession - there are a few stars and a few rotten apples and bunch
of hard working solid professionals in between.&lt;/p&gt;
&lt;p&gt;
Another truth is that, at least in the few instances I know of, where
there was a success it was actually with the support of other teachers
and/or the administration.&lt;/p&gt;
&lt;p&gt;
My first exposure to this was from &amp;#34;Small Victories.&amp;#34; A book - never
made into a movie. It focused on a teacher at Seward Park High School
and was published right before I started there (my first teaching
gig). It wasn&amp;#39;t a miracle story but focused on how the teacher in
question embraced the students with challenges and they found many
&amp;#34;small victories&amp;#34; helping these students in their lives. The teacher,
Jessica Siegel was in her 10th year teaching which is pretty good but
she left soon after the book came out - right before I came on
board. The book mentioned many other teachers but the focus was on
her. The reality was that it was much more of a team effort. I got to
know many of the players briefly mentioned in the book and indeed I
can see that was the truth. Honestly, though, I don&amp;#39;t want to detract
from Jessica Siegel&amp;#39;s work there - my best guess it was an ensemble
effort in the school but as expected the author felt he had to focus on
somebody.&lt;/p&gt;
&lt;p&gt;
The next was &amp;#34;Stand and Deliver&amp;#34; with Edward James Olmos as Jaome
Escalante - the miracle teacher who overcame a school full of
loser teachers. From what I was told by teachers with more of an
inside view was that while Mr. Escalante did some great stuff it was a
team effort. Makes for a better story but it demeans the rest of the
hard working teachers in the school. I&amp;#39;m reminded of a piece a read
about how Dan Devine - the former Notre Dame coach was hurt when he
saw how he was portrayed in the movie &amp;#34;Rudy.&amp;#34; He was made the heavy
who was going to deny Rudy his shot. The reality was apparently
otherwise with Dan Devine being rather supportive.&lt;/p&gt;
&lt;p&gt;
Escalante and Siegel differ from many of the other miracle teacher
stories in that they both taught for at least 10 years. &lt;/p&gt;
&lt;p&gt;
Of course, not all teacher movies are bad and even the bad ones can be
entertaining and many were created as fiction and are not based on a
true story.&lt;/p&gt;
&lt;div id=&#34;outline-container-headline-1&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-1&#34;&gt;
Here are some that have school elements that I like:
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-1&#34; class=&#34;outline-text-2&#34;&gt;
&lt;div id=&#34;outline-container-headline-2&#34; class=&#34;outline-3&#34;&gt;
&lt;h3 id=&#34;headline-2&#34;&gt;
Lean on me
&lt;/h3&gt;
&lt;div id=&#34;outline-text-headline-2&#34; class=&#34;outline-text-3&#34;&gt;
&lt;p&gt;
Based on Joe Clark - a no excuses principal in New Jersey. I&amp;#39;m not
particularly a Joe Clark fan but there were a number of things I liked
about the movie.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;It showed both supportive and antagonistic parents, administrators,
and influences.&lt;/li&gt;
&lt;li&gt;By the end, Joe Clark acknowledged that he needed and appreciated the
hard work and dedication of his staff.&lt;/li&gt;
&lt;li&gt;It highlighted how educators are frequently between a rock and a
hard place - you&amp;#39;ve got to keep the drug dealers out but you can&amp;#39;t
lock the doors.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Again, not a Joe Clark fan but if you pay attention there&amp;#39;s some good
balance here and it&amp;#39;s early Morgan Friedman so that&amp;#39;s always a plus.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-3&#34; class=&#34;outline-3&#34;&gt;
&lt;h3 id=&#34;headline-3&#34;&gt;
To Sir with Love
&lt;/h3&gt;
&lt;div id=&#34;outline-text-headline-3&#34; class=&#34;outline-text-3&#34;&gt;
&lt;p&gt;
I mean, Sidney Poitier so that&amp;#39;s enough reason to watch. It&amp;#39;s
interesting because it&amp;#39;s kindof a reverse &amp;#34;White Savior&amp;#34; story with
Poitier being black and his class mostly poor white. It&amp;#39;s got plenty
of faults - he only appears to teach one class and he never does
anything academic but it&amp;#39;s got good balance. There&amp;#39;s a bad teacher
who&amp;#39;s the heavy but there are also good supportive teachers and
administrators. Poitier faces real challenges and even loses his cool,
gets advice from other teachers and finds his way.&lt;/p&gt;
&lt;p&gt;
This is a good one.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-4&#34; class=&#34;outline-3&#34;&gt;
&lt;h3 id=&#34;headline-4&#34;&gt;
Dead Poets Society
&lt;/h3&gt;
&lt;div id=&#34;outline-text-headline-4&#34; class=&#34;outline-text-3&#34;&gt;
&lt;p&gt;
I mention this as an aside. I think it&amp;#39;s interesting because the
teacher in question John Keating comes in with credentials. He also
isn&amp;#39;t saving the students in the same sense - I mean it is an elite
private boarding school. The other educators are a mixed bag and
that&amp;#39;s realistic and I think the description of the school is
reasonably accurate given the time and place.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-5&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-5&#34;&gt;
And maybe my favorite
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-5&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
One of the best teacher movies and a great one to watch at this time
of years is &amp;#34;Mr. Holland&amp;#39;s Opus.&amp;#34; Richard Dreyfuss, Olympia Dukakis,
and others. Frustrated musician takes a teaching job to pay the bills
and indeed becomes that influential teacher. Never shown as the super
charismatic miracle worker but a dedicated pro who would do anything
to reach his students and help them to love music. It&amp;#39;s a movie about
any of us, all of us who&amp;#39;ve pushed through the decades to work for our
students without the limelight but in the end, as Mr Holland got to
see, made a great difference in many lives.&lt;/p&gt;
&lt;p&gt;
So, as the school year starts, enjoy the teacher movies - the good,
the bad, and the fun.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Learning Elisp 8</title>
      <link>https://cestlaz.github.io/post/learning-elisp-8/</link>
      <pubDate>Mon, 21 Aug 2023 17:16:45 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/learning-elisp-8/</guid>
      <description>
&lt;p&gt;
Today&amp;#39;s video gets us closer to our function header, um, function.&lt;/p&gt;
&lt;p&gt;
It&amp;#39;ll take one more video to get there but today&amp;#39;s video goes over the
programmatic elisp that we&amp;#39;ll need.&lt;/p&gt;
&lt;p&gt;
Before we get to that, a couple of elisp regex niceties. To be honest,
I didn&amp;#39;t know that these existed when I made the last video so thanks
for those of you who made me aware.&lt;/p&gt;
&lt;p&gt;
First is the built in &lt;code&gt;rx&lt;/code&gt; macro. It lets you use a more verbose elisp type
syntax for regular experssions.&lt;/p&gt;
&lt;p&gt;
For example, instead of &amp;#34;Mr|Ms [A-Z][a-z]+ [A-Z][a-z]+&amp;#34; for a simple
Mr John Smith or Ms Sarah Stone or similar names, you could write:&lt;/p&gt;
&lt;div class=&#34;src src-emacs-lisp&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  (rx  (seq &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Mr|Ms &amp;#34;&lt;/span&gt; (any &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;A-Z&amp;#34;&lt;/span&gt;) (one-or-more (any &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;a-z&amp;#34;&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;         &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;         (any &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;A-Z&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;         (one-or-more (any &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;a-z&amp;#34;&lt;/span&gt;))))&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
which would evaluate to the more terse regular expression string.&lt;/p&gt;
&lt;p&gt;
On the flip side there&amp;#39;s the package &lt;code&gt;xr&lt;/code&gt; ([[&lt;a href=&#34;https://github.com/mattiase/xr&#34;&gt;https://github.com/mattiase/xr&lt;/a&gt;
][link]]) which does the reverse. You
give it the standard regex string and it will produce the more verbose
elisp type syntax.&lt;/p&gt;
&lt;p&gt;
This verbose elisp regex notation reminds me of a couple of clojure
tools I use. One is hiccup. That lets you use clojure structures for
html. For example:&lt;/p&gt;
&lt;div class=&#34;src src-clojure&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-clojure&#34; data-lang=&#34;clojure&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  (&lt;span style=&#34;color:#a6e22e&#34;&gt;hiccup/html&lt;/span&gt; [&lt;span style=&#34;color:#e6db74&#34;&gt;:span&lt;/span&gt; {&lt;span style=&#34;color:#e6db74&#34;&gt;:class&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;foo&amp;#34;&lt;/span&gt;} &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;bar&amp;#34;&lt;/span&gt;])&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
would yield &amp;#34;&amp;lt;span class=\&amp;#34;foo\&amp;#34;&amp;gt;bar&amp;lt;/span&amp;gt;&amp;#34;&lt;/p&gt;
&lt;p&gt;
There&amp;#39;s a similar tool, honeysql that clojurists  can use for sql. &lt;/p&gt;
&lt;p&gt;
I&amp;#39;m a big fan of hiccup and related tools but I probably won&amp;#39;t be
using rx and xr moving forward.&lt;/p&gt;
&lt;p&gt;
Why not?&lt;/p&gt;
&lt;p&gt;
Context switching.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m just or actually more likely to use regular expressions in
languages other than elisp. In fact, I&amp;#39;ll most regularly use them on
the command line with grep type tools. I&amp;#39;ll also use them in other
programming languages. Since the elisp syntax only exists in elisp,
there&amp;#39;s less of a benefit to me. I do suppose that if I was doing a
deep dive into writing elisp for a while, it would be more attractive.&lt;/p&gt;
&lt;p&gt;
The clojure tools show this. When I do webdev, I&amp;#39;m living in one
ecosystem for all the front end work so it makes sense to use a tool
like hiccup. Besides, html is multiline so looks particularly ugly
when embedded in code (jsx notwithstanding). Same for sql.&lt;/p&gt;
&lt;p&gt;
Still rx and xr are well worth knowing and playing with.&lt;/p&gt;
&lt;p&gt;
Now for the star attractions - dealing with our regular expressions in
elisp.&lt;/p&gt;
&lt;p&gt;
The first call is &lt;code&gt;string-match&lt;/code&gt; which does two things.&lt;/p&gt;
&lt;p&gt;
First, it returns the index where the match starts (or nil if it isn&amp;#39;t
present) and it also sets up some internal data structure so that you
can extract the match groups. &lt;/p&gt;
&lt;p&gt;
There&amp;#39;s also an additional optional third parameter, INHIBIT-MODIFY
which if it&amp;#39;s nil or not present the &amp;#34;match data is changed&amp;#34; and we
can use the &lt;code&gt;match-string&lt;/code&gt; function to extract our groups. I think I
garbled that part in the video but this is right from the
documentation.&lt;/p&gt;
&lt;p&gt;
For example, in:&lt;/p&gt;
&lt;div class=&#34;src src-emacs-lisp&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  (setq regex &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\\([a-z0-9]+\\) +\\([a-zA-Z0-9_]+\\)(\\([a-zA-Z0-9_ ,]+\\)&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  (setq line &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;int add_two(int a, int b)&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  (&lt;span style=&#34;color:#a6e22e&#34;&gt;string-match&lt;/span&gt; regex line)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  (setq retval (match-string &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; line))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  (setq func-name (match-string &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; line))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  (setq params (match-string &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; line))&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
string-match returns 0 since the match starts at the first character.&lt;/p&gt;
&lt;p&gt;
We then use the match-string function to extract each of the
parenthesized groups.&lt;/p&gt;
&lt;p&gt;
We also have to be careful with the match-string function. It&amp;#39;s a bit
fragile. The documentation says that you should call it &amp;#34;close&amp;#34; to the
call to string-match since the match data might be mutated. That&amp;#39;s
illustrated in the video.&lt;/p&gt;
&lt;p&gt;
Finally, we cover the &lt;code&gt;format&lt;/code&gt; function which is like C&amp;#39;s printf. It
accepts a format string with placeholders and the additional
parameters to fill those placeholders.&lt;/p&gt;
&lt;p&gt;
For example:&lt;/p&gt;
&lt;div class=&#34;src src-emacs-lisp&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  (setq word1 &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;hello&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  (setq word2 &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;world&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  (&lt;span style=&#34;color:#a6e22e&#34;&gt;format&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Replace1: %s Replace2: %s&amp;#34;&lt;/span&gt; word1 word2)&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
The format returns &amp;#34;Replace1: hello Replace2: world&amp;#34; having replaced
the placeholders with parameters. There are also other placeholders
for different data types.&lt;/p&gt;
&lt;p&gt;
The video covers all of this in detail.&lt;/p&gt;
&lt;p&gt;
Next time, we&amp;#39;ll put it all together into a working elisp function
that we can bind to a key&lt;/p&gt;
&lt;div id=&#34;outline-container-headline-1&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-1&#34;&gt;
Code:
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-1&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
The code for the series is still up here:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://gitlab.com/zamansky/learning-elisp-code&#34;&gt;https://gitlab.com/zamansky/learning-elisp-code&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;but this episode doesn&amp;#39;t have any specific code.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-2&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-2&#34;&gt;
The videos:
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-2&#34; class=&#34;outline-text-2&#34;&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/2hbX4h4ZdAc&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;
Video link: &lt;a href=&#34;https://www.youtube.com/watch?v=2hbX4h4ZdAc&#34;&gt;https://www.youtube.com/watch?v=2hbX4h4ZdAc&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Passing The Torch</title>
      <link>https://cestlaz.github.io/post/passing-the-torch/</link>
      <pubDate>Mon, 21 Aug 2023 12:52:19 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/passing-the-torch/</guid>
      <description>&lt;p&gt;
Passing another miletone on the way to retirement this week. I didn&amp;#39;t
think it would be this many steps - I figured I&amp;#39;d say I&amp;#39;m retiring,
fill out a form, and be done.&lt;/p&gt;
&lt;p&gt;
It turns out it&amp;#39;s a multi stage process.&lt;/p&gt;
&lt;p&gt;
This week, my contract with Hunter officially ends and as of Friday
I&amp;#39;m on Travia leave - that&amp;#39;s terminal leave to public school
teachers. I basically get full pay and benefits while my reserved sick
days get used up at a 2 sick for one real day rate. In about 2 weeks, I can
finally file my retirement forms and then on Dec 4th or so, it&amp;#39;s all
over.&lt;/p&gt;
&lt;p&gt;
More importantly, my replacements are now both, well, in place.&lt;/p&gt;
&lt;p&gt;
On the Daedalus honors undergraduate CS side, Hunter hired my
replacement about month ago. A terrific instructor who already, as an
adjunct has proven herself both in terms of teaching and also in
connecting with her students. She&amp;#39;s terrific but we only knew each
other because we were both at Hunter. I have no doubt that she&amp;#39;ll take
the Daedalus program to the next level but due to personal
connections, I&amp;#39;m more excited about the new hire for my education
school work.&lt;/p&gt;
&lt;p&gt;
On that side, to run Hunters CS Teacher Education programs, they&amp;#39;ve
brought on Edgar Troudt. Edgar&amp;#39;s spent a good amount of his career in
the CUNY system but has also made stops at LIU and Vaughn
College. Like my Daedalus successor, Edgar is a highly regarded
classroom teacher, is a strong computer scientist and brings a lot of
extras to the table.&lt;/p&gt;
&lt;p&gt;
For me though, it&amp;#39;s extra special because I&amp;#39;ve known Edgar for
years. Back in the day, he was in my CS classes when he was a student
at Stuyvesant (note: I was not on the hiring committee so other than
telling Edgar and a few other people to apply, I had nothing to do
with the process). Since then, we&amp;#39;ve become friends and we&amp;#39;ve
worked together on a couple of projects.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m particularly excited because Edgar brings things to the position
that I lacked. We both have strong CS backgrounds but where my other
strength is K12 education and pipeline from start to industry, Edgar&amp;#39;s
spent his career not only creating but more importantly growing
programs with a focus on entrepreneurship.&lt;/p&gt;
&lt;p&gt;
That background in program growth is what Hunter and in fact, NY needs
now. I planted the seed and got things off the ground but now the
program needs someone adept at growth and sustainability and that&amp;#39;s
a special that Edgar brings to the table. I started the Masters in
CS Ed program but it&amp;#39;s in a seedling state. A handful of students a
year. The next step for Hunter is to nurture it and grow it. At the
same time, the advanced certificate program will probably see reduced
demand but I&amp;#39;ve written on that before.&lt;/p&gt;
&lt;p&gt;
What gets me excited about Hunter&amp;#39;s programs futures is that the
person they chose to succeed me has the unique skill set to take the
programs to the next levels. Something that maybe I could have done,
maybe I couldn&amp;#39;t but passing the torch to someone with  a history of
program growth is the right move.&lt;/p&gt;
&lt;p&gt;
Nine years ago, it was time for me to leave Stuyvesant. I had done my
thing there, for better or worse and it was time for someone else to
take the reins. There and then it was JonAlf who I describe as being
very similar to me but with a better big picture view and a higher
upside. He hasn&amp;#39;t disappointed in the role. I was happy then that he
succeeded me and just as delighted now. Same with Edgar.&lt;/p&gt;
&lt;p&gt;
I left Stuy confident that I left the program there in better
hands. Now that my successors at Hunter are both in place, I feel the
same way.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Learning Elisp 7</title>
      <link>https://cestlaz.github.io/post/learning-elisp-7/</link>
      <pubDate>Tue, 15 Aug 2023 10:51:37 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/learning-elisp-7/</guid>
      <description>
&lt;p&gt;
Our next elisp project us going to write a function that will
automatically generate function headers. This was actually the first
useful elisp I ever wrote around thirty years ago. I forget how I
wrote it then so this is a total rewrite.&lt;/p&gt;
&lt;p&gt;
Nowadays we have &lt;a href=&#34;https://docs.oracle.com/javase/8/docs/technotes/tools/windows/javadoc.html&#34;&gt;Javadoc&lt;/a&gt; for java and tools like &lt;a href=&#34;https://www.sphinx-doc.org/en/master/&#34;&gt;Sphinx&lt;/a&gt; for other
languages. If we write specially formatted comments in our code, these
tools will pull out the comments and build a web site or document with
hyperlinked documentation.&lt;/p&gt;
&lt;p&gt;
Here&amp;#39;s an example of javadoc commenting that I found online:&lt;/p&gt;
&lt;div class=&#34;src src-java&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;/**
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt; * &amp;lt;p&amp;gt;This is a simple description of the method. . .
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt; * &amp;lt;a href=&amp;#34;http://www.supermanisthegreatest.com&amp;#34;&amp;gt;Superman!&amp;lt;/a&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt; * &amp;lt;/p&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt; * @param incomingDamage the amount of incoming damage
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt; * @return the amount of health hero has after attack
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt; * @see &amp;lt;a href=&amp;#34;http://www.link_to_jira/HERO-402&amp;#34;&amp;gt;HERO-402&amp;lt;/a&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt; * @since 1.0
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt; */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;successfullyAttacked&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; incomingDamage&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// do things
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
Note the extra * on the open comment line. That tells Javadoc to
process the block and turn it into html. You can look at the online
Java documentation to see plenty of examples (like &lt;a href=&#34;https://docs.oracle.com/javase/8/docs/api/java/util/ArrayList.html#indexOf-java.lang.Object-&#34;&gt;this&lt;/a&gt; one).&lt;/p&gt;
&lt;p&gt;
Back when I was coding professionally, Java didn&amp;#39;t exist let alone
javadoc but programmers like me wrote our own small tools that worked
similarly. It was just a good idea.&lt;/p&gt;
&lt;p&gt;
For our elisp, we want to be able to take the top line that declares
our function:&lt;/p&gt;
&lt;div class=&#34;src src-c&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;add_two&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; a,&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; b){&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
And from that isolate the three components:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;return type (int)&lt;/li&gt;
&lt;li&gt;function name (add_two)&lt;/li&gt;
&lt;li&gt;parameters (int a and int b)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
From there, we can build a comment block like this:&lt;/p&gt;
&lt;div class=&#34;src src-c&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;/*------------------- add_two ------------------
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;    Parameters: int a -
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;                int b -
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;    Returns: int
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;    Description
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;    MZ
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;  */&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
To isolate those components we&amp;#39;re going to use regular expressions.&lt;/p&gt;
&lt;p&gt;
For those that aren&amp;#39;t familiar with them, regular expressions (regex)
form a language to perform text pattern matching. Think &amp;#34;find and
replace on steroids.&amp;#34; Emacs and most other editing tools, including
things like spreadsheets all have support for regular experssions.&lt;/p&gt;
&lt;p&gt;
In this video, we are going to go over the fundamentals in the
editor. We&amp;#39;ll specifically use &lt;code&gt;replace-regexp&lt;/code&gt; and
&lt;code&gt;rexep-builder&lt;/code&gt;. In the next video, we&amp;#39;ll learn how to do this in
elisp and then write our function header creator.&lt;/p&gt;
&lt;p&gt;
Here are some basics:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;regex&lt;/th&gt;
&lt;th&gt;will match&lt;/th&gt;
&lt;th&gt;Example&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;a&lt;/td&gt;
&lt;td&gt;the letter a&lt;/td&gt;
&lt;td&gt;the a in &lt;strong&gt;ball&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;aa&lt;/td&gt;
&lt;td&gt;two in a row&lt;/td&gt;
&lt;td&gt;the aa at the start of &lt;strong&gt;aardvark&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;[a-c]&lt;/td&gt;
&lt;td&gt;a b or c&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;.&lt;/td&gt;
&lt;td&gt;any single character&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;a.&lt;/td&gt;
&lt;td&gt;the letter a followed by any character&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;
And there are tons more urles.&lt;/p&gt;
&lt;p&gt;
The video goes through a bunch of examples including how to use a
regex to transform all the money values in your text to $XXX.XX or how
to convert all the dates in the form month/day/year into
day-month-year.&lt;/p&gt;
&lt;p&gt;
You can also dig more deeply by looking at any of these online
tutorials:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://regexone.com/&#34;&gt;https://regexone.com/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/ziishaned/learn-regex/blob/master/README.md&#34;&gt;https://github.com/ziishaned/learn-regex/blob/master/README.md&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.javatpoint.com/regex&#34;&gt;https://www.javatpoint.com/regex&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://regexlearn.com/&#34;&gt;https://regexlearn.com/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;or searching for videos online.&lt;/p&gt;
&lt;p&gt;
By the end of our video, we have our regex to identify three
components in a function header but note that I only wrote it for
lower case letters - we&amp;#39;ll fix that when we write the actual
function next time.&lt;/p&gt;
&lt;p&gt;
For now, enjoy this one covering the basics:&lt;/p&gt;
&lt;div id=&#34;outline-container-headline-1&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-1&#34;&gt;
Code:
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-1&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
The code for the series is still up here:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://gitlab.com/zamansky/learning-elisp-code&#34;&gt;https://gitlab.com/zamansky/learning-elisp-code&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;but this episode doesn&amp;#39;t have any specific code.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-2&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-2&#34;&gt;
The videos:
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-2&#34; class=&#34;outline-text-2&#34;&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/-kyJLcsiH_4&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;
Video link: &lt;a href=&#34;https://www.youtube.com/watch?v=-kyJLcsiH_4&#34;&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=-kyJLcsiH_4&#34;&gt;https://www.youtube.com/watch?v=-kyJLcsiH_4&lt;/a&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Cleaning out the office</title>
      <link>https://cestlaz.github.io/post/cleaning-out-office/</link>
      <pubDate>Sun, 13 Aug 2023 15:40:45 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/cleaning-out-office/</guid>
      <description>
&lt;p&gt;
This morning, Devorah, Batya, and I drove up to Hunter to start to
clean out my office - the next step in officially becoming retired. I
wasn&amp;#39;t really looking forward to it. When I moved from Stuy to Hunter
it was something of a rush so I basically boxed everything up that I
thought I wanted to keep and moved it to the new digs. So, three
decades worth of accumulated crap to deal with.&lt;/p&gt;
&lt;p&gt;
I had already gone through all the books trying hard to leave as many
as possible for other remaining faculty members and students but there
was still many books, personal computer equipment, puzzles and other
office decorations, the mini kitchen and more.&lt;/p&gt;
&lt;p&gt;
Of course, packing up brought many memories and artifacts.&lt;/p&gt;
&lt;p&gt;
Some of the highlights:&lt;/p&gt;
&lt;div id=&#34;outline-container-headline-1&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-1&#34;&gt;
Yearbooks
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-1&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
Stuy Yearbooks from 1995 - my first CS grads through 2015 and Stuy
Yearbooks are &lt;strong&gt;big&lt;/strong&gt;. I got one every year - a nice keepsake and I also
had a rule - when a student asked me to sign their yearbook, I told
them I would but only if the signed mine. The problem? No way do I
have room in my Manhattan apartment for what would be a HUGE shelve of
books. I decided to consolodate. The only thing I cared about was what
the students wrote so I cut out the signature pages and now the whole
bundle is thinner than one yearbook. Looking over them what&amp;#39;s cool is
just how many of those kids I&amp;#39;m still at least tangentially in touch
with today.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-2&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-2&#34;&gt;
Here&amp;#39;s me in 1994:
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-2&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
&lt;figure&gt;&lt;img src=&#34;https://cestlaz.github.io/img/office/churl.jpg&#34; width=&#34;250&#34;/&gt;
&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;
Okay, not really. This was given to me in the Spring of 1994 by one of
my math students. He doodled every day but it never prevented him from
being an active participant in class. Apparently other teachers gave
him a hard time. He said he appreciated it and gave me the sketch. His
family moved out of state that summer so I never saw him again but we
reconnected on Facebook years alter.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-3&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-3&#34;&gt;
A really old mousepad
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-3&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
&lt;figure&gt;&lt;img src=&#34;https://cestlaz.github.io/img/office/mousepad.jpg&#34; width=&#34;250&#34;/&gt;
&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;
I haven&amp;#39;t used a mousepad in decades but still have this one. It&amp;#39;s a
picture of me and three of my students. They&amp;#39;re all graduating seniors
in the picture and I had just taken them out for a congratulatory and
thank you lunch at one of the 6th street Indian restaurants. Dave&amp;#39;s (one
of the students) father had the mousepads made for all of us. &lt;/p&gt;
&lt;p&gt;
All four of those students have gone on to do great and interesting
things.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-4&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-4&#34;&gt;
A frustrated student
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-4&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
&lt;figure&gt;&lt;img src=&#34;https://cestlaz.github.io/img/office/line-drawing.jpg&#34; width=&#34;250&#34;/&gt;
&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;
One day one of my students came in to my office rather frustrated and
this drawing was the result. An amazing student and an amazing person
who has also gone on to wonderful things.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-5&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-5&#34;&gt;
A breakthrough
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-5&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
&lt;figure&gt;&lt;img src=&#34;https://cestlaz.github.io/img/office/sched.jpg&#34; width=&#34;250&#34;/&gt;
&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;
I had to commemorate this. For years, I worked to bring CS to Stuy. I
had some success and some failures. One of the fights was to allow
Stuy seniors to take our senior post AP CS electives instead of a
tech/shop class. There were already excemptions from tech/shop classes
for band, orchestra, and chorus but not for CS. There were and are
some strong tech/shop classes but some were, quite frankly, joke
classes. Meanwhile the advanced CS classes were regarded as high level
and rigorous so this was frustrating.&lt;/p&gt;
&lt;p&gt;
This changed in February 2010 when we finally got the administration
to allow the substitution. &lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-6&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-6&#34;&gt;
Ticket printing
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-6&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
&lt;figure&gt;&lt;img src=&#34;https://cestlaz.github.io/img/office/ticket.jpg&#34; width=&#34;250&#34;/&gt;
&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;
This wasn&amp;#39;t a Stuy student memory but rather a personal one. At some
point during my Stuy career students started to invite me to Sing! and
other student productions. At one point I took notice of the
tickets. They were computer printed tickets and, as I suspected,
printed by the company Arcus Simplex Brown. This one was from 2012 but
I have one from a couple of years later as well.&lt;/p&gt;
&lt;p&gt;
As it turns out, and this is purely coincidental, I wrote the ticket
printing program as my first coding gig when I was a senior in HS and
through college. That was back in 1984. It was written in compiled
Basic and ran on a small computer running CP/M. It drove a custom line
printer onto ticket stock.&lt;/p&gt;
&lt;p&gt;
It was a great real life example of how you never know how long your
code will be running in the wild.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-7&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-7&#34;&gt;
Misc stuff
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-7&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
I also found a bunch of old gradesheets from back before I started
using Google Docs for records as well as a bunch of those letters from
MIT and other colleges you get when a student identifies you as being
influential.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve been spending most of today trying to find places for all the
stuff and I hope I&amp;#39;ll be done soon since I have at least one more car
load to go:&lt;/p&gt;
&lt;p&gt;
&lt;figure&gt;&lt;img src=&#34;https://cestlaz.github.io/img/office/remaining.jpg&#34; width=&#34;250&#34;/&gt;
&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;
So that&amp;#39;s a lot of stuff and a lot of memories. Just wanted to share.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Who&#39;s the Expert Thought Leader</title>
      <link>https://cestlaz.github.io/post/expert-thought-leader/</link>
      <pubDate>Thu, 10 Aug 2023 11:26:48 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/expert-thought-leader/</guid>
      <description>&lt;p&gt;
Last weekend I attended the AI X Education Conference - an online
conference on, well, AI in education. There were some talks about AI
and generative AI in particular but really the split was that Saturday
was focused on college education and Sunday on K12.&lt;/p&gt;
&lt;p&gt;
I only caught a bit of each day but fortunately, the sessions were
recorded. Two in particular or more specifically two specific
speakers, one in a K12 STEM education session and another in a
humanities education session caught my attention. One for good, one
for bad.&lt;/p&gt;
&lt;p&gt;
All of the speakers at conferences like these are anointed with
authority. By being included and given a speaking platform they
automatically become &amp;#34;experts&amp;#34; and &amp;#34;thought leaders.&amp;#34; This has been
true throughout the decades I&amp;#39;ve been involved in CS Ed. Sometimes the
&amp;#34;expert&amp;#34; does indeed the deserve the platform. Far too often, they
don&amp;#39;t.&lt;/p&gt;
&lt;p&gt;
Let&amp;#39;s dive in.&lt;/p&gt;
&lt;p&gt;
One speaker, let&amp;#39;s call him speaker A, spoke about AI. Repeatedly
stated how we should be using it (I agree, with this one point) but
also how AI tutors and teachers &lt;strong&gt;will&lt;/strong&gt; be better than human
counterparts. Speaker A also segued into how discovery learning is a
must and anyone who doesn&amp;#39;t approach their classes from that point of
view isn&amp;#39;t doing it right. He went on but it was all in a similar
vein.&lt;/p&gt;
&lt;p&gt;
The other speaker, speaker B started by saying he was going to share
some of the things he (or maybe he said he and his colleagues, I
forget) were doing and seemed to be having some success. He shared how
he used generative AI to build scenarios for student activities, for
example. Speaker B encouraged the audience to try similar but never
made authoritative statements of &amp;#34;this is the one true way.&amp;#34;&lt;/p&gt;
&lt;p&gt;
Both of these speakers, by virtue of the conference organizers have
been anointed as &amp;#34;thought leaders&amp;#34; and &amp;#34;experts.&amp;#34; Are they?&lt;/p&gt;
&lt;p&gt;
Maybe.&lt;/p&gt;
&lt;p&gt;
Speaker B may or may not be an expert but in my opinion, he did it
right. Here&amp;#39;s what we tried. Here&amp;#39;s what happens. Our situations might
differ so your mileage might vary but think about giving it a go.&lt;/p&gt;
&lt;p&gt;
This was just a report on his experiences but this is what, in my
opinion, good ed research is like - we tried something, here&amp;#39;s what
happened but there are a million variables we can never account for so
take it all with a grain of salt.&lt;/p&gt;
&lt;p&gt;
This is also how I approach preparing teachers - give them the tools
but emphasize there is no single true way. Speaker A talked of how you
&lt;strong&gt;have&lt;/strong&gt; to teach but he was wrong. Based on circumstance, students,
environment, and yes, that often omitted aspect - teacher strengths
and preferences you make the best possible choice. You might want to
have a discover lesson because it would work with your students and
you love to do it but your class might be too big or maybe the class
length isn&amp;#39;t long enough or there could be a myriad of other reasons
why another approach might be better in that particular instance.&lt;/p&gt;
&lt;p&gt;
Speaking of speaker A, let&amp;#39;s revisit him. You already know that I
wasn&amp;#39;t impressed but I decided to dig a little deeper. Best I can
determine he teaches at a private school with an enrollment of 225,
resources and small classes. It looks to have a high performing
population.&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Of course discovery learning works&lt;/strong&gt; in that environment. Most things
are easy if you have a dozen kids who are performing at or above grade
level. Will that translate to the underfunded overcrowded public
school? Well, I think you know the answer.&lt;/p&gt;
&lt;p&gt;
So, we have speaker A - anointed but in my opinion, not worthy. If one
teaches at a rich private school does that mean they can&amp;#39;t be an
expert or real thought leader? Of course not. But the ones that are
the real experts know that their school - whatever it is, is not the
same as the next teachers so, unlike the Sith, they don&amp;#39;t talk in
absolutes. Many teachers in many types of schools - public, private,
religious, urban, and rural have shared great ideas in education but
the good ones understand it&amp;#39;s not a best practice, just a practice that
might have been best for them at a certain place and time.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve learned a lot from many, &lt;strong&gt;many&lt;/strong&gt; great people in the CS Ed space
but I also can&amp;#39;t tell you how many times I&amp;#39;ve sat in on a session and
just had to shake my head knowing that the &amp;#34;expert&amp;#34; didn&amp;#39;t really know
what they were talking about. Many times we do great but often, I
think we can do better. &lt;/p&gt;
&lt;p&gt;
Anyway, that&amp;#39;s my education rant for the day.&lt;/p&gt;
&lt;p&gt;
I wasn&amp;#39;t able to hit all the sessions but overall what I did see was
enjoyable and worthwhile. It looks like you can request access if you
want to watch the recordings of the conference &lt;a href=&#34;https://www.aixeducation.com/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;
Enjoy.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Learning Elisp - Rot13 conclusion</title>
      <link>https://cestlaz.github.io/post/learning-elisp-6/</link>
      <pubDate>Mon, 07 Aug 2023 11:59:44 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/learning-elisp-6/</guid>
      <description>
&lt;p&gt;
Two more videos to finish up the rot13 project.&lt;/p&gt;
&lt;p&gt;
The first video covers about &lt;a href=&#34;https://www.gnu.org/software/emacs/manual/html_node/elisp/Prefix-Command-Arguments.html&#34;&gt;prefix arguments&lt;/a&gt;. The idea is when
calling an Emacs function interactively, you can specify a numeric
argument either by typing &lt;code&gt;C-u #&lt;/code&gt; where &lt;code&gt;#&lt;/code&gt; is a single digit or &lt;code&gt;M-x
##&lt;/code&gt; where &lt;code&gt;##&lt;/code&gt; is an integer which can be positive, negative, single
or multiple digits. You then type the key for your command or invoke
it with its full name &lt;code&gt;M-x&lt;/code&gt;. This passes the numeric parameter to the
function.&lt;/p&gt;
&lt;p&gt;
In the function, we add a parameter to the &lt;code&gt;(interactive)&lt;/code&gt; form -
specifically &lt;code&gt;(interactive &amp;#34;P&amp;#34;)&lt;/code&gt; which says that the parameter to our
function will be that number we passed as a prefix argument or nil if
there was no prefix argument.&lt;/p&gt;
&lt;p&gt;
We use the prefix argument to determine how much to rotate our
text. If we don&amp;#39;t pass a parameter, we just do a rot13 but if we do,
we rotate that amount.&lt;/p&gt;
&lt;p&gt;
The second video shows how we can use see if there&amp;#39;s an active region
and if so, run our rotate function on the text in that region. If not,
rotate the previous word.&lt;/p&gt;
&lt;p&gt;
Here are the key Emacs features we instroduce.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Feature&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;mark-active&lt;/td&gt;
&lt;td&gt;a built in variable which is true if you&amp;#39;ve set the mark&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;(mark)&lt;/td&gt;
&lt;td&gt;returns an integer representation of where the mark is set&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;(point)&lt;/td&gt;
&lt;td&gt;returns an integer representation of where the cursor is&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;(buffer-substring-no-properties)&lt;/td&gt;
&lt;td&gt;returns text from the buffer&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;div id=&#34;outline-container-headline-1&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-1&#34;&gt;
Notes from previous videos:
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-1&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
A viewer pointed out that the Emacs if statement can actually have
multiple forms to its false part.&lt;/p&gt;
&lt;p&gt;
For example:&lt;/p&gt;
&lt;div class=&#34;src src-emacs-lisp&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    (if true
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        (&lt;span style=&#34;color:#a6e22e&#34;&gt;print&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Hello&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      (&lt;span style=&#34;color:#a6e22e&#34;&gt;print&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Goodbye&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      )&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
will print &amp;#34;Hello&amp;#34; if &lt;code&gt;condition&lt;/code&gt; is true and &amp;#34;Goodbye&amp;#34; if it&amp;#39;s fales.&lt;/p&gt;
&lt;p&gt;
Now, if we have multiple forms int he false part:&lt;/p&gt;
&lt;div class=&#34;src src-emacs-lisp&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  (if conditiotrue
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      (&lt;span style=&#34;color:#a6e22e&#34;&gt;print&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Hello&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    (&lt;span style=&#34;color:#a6e22e&#34;&gt;print&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Goodbye&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    (&lt;span style=&#34;color:#a6e22e&#34;&gt;print&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;World&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    )&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
then while it will still print &amp;#34;Hello&amp;#34; if &lt;code&gt;condition&lt;/code&gt; is true, it will
print both &amp;#34;Goodbye&amp;#34; and &amp;#34;World&amp;#34; if it is false.&lt;/p&gt;
&lt;p&gt;
I didn&amp;#39;t know that and appreciated the comment so that I could learn
something new.&lt;/p&gt;
&lt;p&gt;
Here&amp;#39;s the code and video links. &lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-2&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-2&#34;&gt;
Code:
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-2&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
Once again, the code is up online:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://gitlab.com/zamansky/learning-elisp-code&#34;&gt;https://gitlab.com/zamansky/learning-elisp-code&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The rot13 code will be in the file rot13.el.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-3&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-3&#34;&gt;
The videos:
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-3&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
Prefix Arguments:&lt;/p&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/5oHpxh0JsBE&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;
Video link: &lt;a href=&#34;https://www.youtube.com/watch?v=5oHpxh0JsBE&#34;&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=5oHpxh0JsBE&#34;&gt;https://www.youtube.com/watch?v=5oHpxh0JsBE&lt;/a&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;
Rotating a region:&lt;/p&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/YzQ8iG3nZQ8&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;
Video link: &lt;a href=&#34;https://www.youtube.com/watch?v=YzQ8iG3nZQ8&#34;&gt;https://www.youtube.com/watch?v=YzQ8iG3nZQ8&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Learning Elisp 5 - Rot13 parts 2 and 3</title>
      <link>https://cestlaz.github.io/post/learning-elisp-5/</link>
      <pubDate>Tue, 01 Aug 2023 10:00:24 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/learning-elisp-5/</guid>
      <description>
&lt;p&gt;
Rather than one long boring video, I thought it would be better to
split up the remainder of the Rot13 project into 4 shorter boring ones
:-).&lt;/p&gt;
&lt;p&gt;
Here are the first two.&lt;/p&gt;
&lt;p&gt;
Before we can really do anything interesting, we need to be able write
programs that make decisions. For that we need conditionals or &lt;code&gt;if&lt;/code&gt;
statements. That&amp;#39;s covered in the first video.&lt;/p&gt;
&lt;p&gt;
Like other languages, elisp has an &lt;code&gt;if&lt;/code&gt; statement but it&amp;#39;s more of an
&lt;code&gt;if&lt;/code&gt; function. Here&amp;#39;s the outline:&lt;/p&gt;
&lt;div class=&#34;src src-emacs-lisp&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  (if boolean
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      evaluate_to_this_if_boolean_is_true
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      evaluate_to_this_if_boolean_is_false)&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
In this basic form, it essentially has both the if and the else parts
from languages like Python:&lt;/p&gt;
&lt;div class=&#34;src src-python&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; boolean:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      evaluate_to_this_if_boolean_is_true
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      evaluate_to_this_if_boolean_is_false)&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
If you need more than one thing in either the true or false part you
need another form which we&amp;#39;ll cover later.&lt;/p&gt;
&lt;p&gt;
You can also leave out the false part but again, we&amp;#39;ll deal with that
when it comes up. For now, it&amp;#39;s simpler for our application to have
both.&lt;/p&gt;
&lt;p&gt;
The basic if will cover you in a lot of cases but if you&amp;#39;ve got more
then a true/false decision the code can get ugly:&lt;/p&gt;
&lt;div class=&#34;src src-emacs-lisp&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  (if boolean1
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      true-part-1
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      (if boolean2 &lt;span style=&#34;color:#75715e&#34;&gt;;; this is the false for boolean1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          true part-2
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          (if boolean3 &lt;span style=&#34;color:#75715e&#34;&gt;;; this is the false for boolean 2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              true-part
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            false-part)))&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
Instead, elisp and many other lisps give us the &lt;code&gt;cond&lt;/code&gt; or
conditional. The most similar construct in languages like Java or C++
would be the switch statement but the &lt;code&gt;cond&lt;/code&gt; is much more general and
much more powerful.&lt;/p&gt;
&lt;p&gt;
In a switch statement, you list multiple discrete values for a given
variable and run some code based on that:&lt;/p&gt;
&lt;div class=&#34;src src-java&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;switch&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;c&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#66d9ef&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;c&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;is&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#66d9ef&#34;&gt;break&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#66d9ef&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;c&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;is&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#66d9ef&#34;&gt;break&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#66d9ef&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;c&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;is&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#66d9ef&#34;&gt;break&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       etc&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
In a cond, you have multiple clauses with arbitrary conditions and
what to do for each condition.&lt;/p&gt;
&lt;div class=&#34;src src-emacs-lisp&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(let ( (grade &lt;span style=&#34;color:#ae81ff&#34;&gt;66&lt;/span&gt;) )
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(cond ( (&lt;span style=&#34;color:#a6e22e&#34;&gt;&amp;lt;&lt;/span&gt; grade &lt;span style=&#34;color:#ae81ff&#34;&gt;65&lt;/span&gt;) &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;F&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      ( (&lt;span style=&#34;color:#a6e22e&#34;&gt;&amp;lt;&lt;/span&gt; grade &lt;span style=&#34;color:#ae81ff&#34;&gt;70&lt;/span&gt;) &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;D&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      ( (&lt;span style=&#34;color:#a6e22e&#34;&gt;&amp;lt;&lt;/span&gt; grade &lt;span style=&#34;color:#ae81ff&#34;&gt;80&lt;/span&gt;) &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;C&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      ( (&lt;span style=&#34;color:#a6e22e&#34;&gt;&amp;lt;&lt;/span&gt; grade &lt;span style=&#34;color:#ae81ff&#34;&gt;90&lt;/span&gt;) &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;B&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      ( &lt;span style=&#34;color:#66d9ef&#34;&gt;t&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;A&amp;#34;&lt;/span&gt;) ))&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
In the above example, there are four independent boolean expressions
and then the final clause, which will always execute if the code gets
there because t is always true.&lt;/p&gt;
&lt;p&gt;
For the cond, once it evaluates a boolean to true, it evaluates to the
other part of its clause and returns so in the example above, &amp;#34;D&amp;#34;
would be returned.&lt;/p&gt;
&lt;p&gt;
Here&amp;#39;s the cond from the rot13 code:&lt;/p&gt;
&lt;div class=&#34;src src-emacs-lisp&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   (cond ((and (&lt;span style=&#34;color:#a6e22e&#34;&gt;&amp;gt;=&lt;/span&gt; c &lt;span style=&#34;color:#e6db74&#34;&gt;?a&lt;/span&gt;) (&lt;span style=&#34;color:#a6e22e&#34;&gt;&amp;lt;=&lt;/span&gt; c &lt;span style=&#34;color:#e6db74&#34;&gt;?z&lt;/span&gt;)) (rotate c offset &lt;span style=&#34;color:#ae81ff&#34;&gt;97&lt;/span&gt;) )
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	 ((and (&lt;span style=&#34;color:#a6e22e&#34;&gt;&amp;gt;=&lt;/span&gt; c &lt;span style=&#34;color:#e6db74&#34;&gt;?A&lt;/span&gt;) (&lt;span style=&#34;color:#a6e22e&#34;&gt;&amp;lt;=&lt;/span&gt; c &lt;span style=&#34;color:#e6db74&#34;&gt;?Z&lt;/span&gt;)) (rotate c offset &lt;span style=&#34;color:#ae81ff&#34;&gt;65&lt;/span&gt;) )
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	 (&lt;span style=&#34;color:#66d9ef&#34;&gt;t&lt;/span&gt; c))&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
The top clause tests for a lowercase letter, the next for upper case
and the default &lt;code&gt;t&lt;/code&gt; clause if it&amp;#39;s neither - maybe a space or
punctuation.&lt;/p&gt;
&lt;p&gt;
The second video posted here goes over making an interactive rot13
function using elisp&amp;#39;s &lt;code&gt;(interactive)&lt;/code&gt;. If a function uses
&lt;code&gt;(interactive)&lt;/code&gt; it can then be called as a command using the M-x
prefix. It can also be bound to a key combination.&lt;/p&gt;
&lt;p&gt;
In the next videos we&amp;#39;ll see how to modify the &lt;code&gt;(interactive)&lt;/code&gt; form so
that we can pass what are known as prefix arguments and in the final
installment of the rot13 project we&amp;#39;ll see how we can rot13 a region.&lt;/p&gt;
&lt;div id=&#34;outline-container-headline-1&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-1&#34;&gt;
Code
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-1&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
I finally got around to making a repo. All the code for this series
will be made available here:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://gitlab.com/zamansky/learning-elisp-code&#34;&gt;https://gitlab.com/zamansky/learning-elisp-code&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The rot13 code will be in the file rot13.el.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-2&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-2&#34;&gt;
The videos
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-2&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
Conditionals:&lt;/p&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/gT8RBdtZtfk&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;
Video link: &lt;a href=&#34;https://www.youtube.com/watch?v=gT8RBdtZtfk&#34;&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=gT8RBdtZtfk&#34;&gt;https://www.youtube.com/watch?v=gT8RBdtZtfk&lt;/a&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;
Interactive:&lt;/p&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/WvPXnsNC8JU&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;
Video link: &lt;a href=&#34;https://www.youtube.com/watch?v=WvPXnsNC8JU&#34;&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=WvPXnsNC8JU&#34;&gt;https://www.youtube.com/watch?v=WvPXnsNC8JU&lt;/a&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>There are no best practices - Proficiency Grading edition</title>
      <link>https://cestlaz.github.io/post/best-practices/</link>
      <pubDate>Sun, 30 Jul 2023 12:09:17 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/best-practices/</guid>
      <description>&lt;p&gt;
I&amp;#39;ve said multiple times that I don&amp;#39;t believe in &amp;#34;Best Practices.&amp;#34; I
believe there are practices that can be strong when employed in
specific situations.&lt;/p&gt;
&lt;p&gt;
I was reminded of this when I saw a reddit thread yesterday where
teachers were sharing &amp;#34;best practices&amp;#34; that were forced on them by
their administrators or districts, usually due to &amp;#34;the research&amp;#34; that
just didn&amp;#39;t work for them.&lt;/p&gt;
&lt;p&gt;
One in particular that stood out to me was Proficiency Grading, also
known as Standards Based Grading, Mastery Grading, Competency Based
Grading, Everybody gets A&amp;#39;s,  and probably other monikers.&lt;/p&gt;
&lt;p&gt;
This stood out to me because from a philosophical point of view, I
agree with a good deal of what the Proficiency Grading crew are
selling. Instead of high stakes testing, students take a test or
assessment and then they can retake it again and again and as long as
they &amp;#34;master&amp;#34; the topics by the end of the term, they get &amp;#34;A&amp;#34; grade
level credit. Similarly, projects have loose deadlines and can be
resubmitted as needed.&lt;/p&gt;
&lt;p&gt;
I like the idea of removing letter grades and having everyone strive
to &amp;#34;know the material&amp;#34; and I love that it can reduce the pressure on
students. I really love removing high stakes exams.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m sure the research will say, if it doesn&amp;#39;t already that it&amp;#39;s the
true way and we should all be using it and if we aren&amp;#39;t we&amp;#39;re bad
teachers.&lt;/p&gt;
&lt;p&gt;
That&amp;#39;s the usual M.O. of research to district to classroom. Had my
chairpeople not ignored central dictates early in my career, I would have been
a bad teacher because I didn&amp;#39;t strictly follow the cooperative
learning model.&lt;/p&gt;
&lt;p&gt;
Later, I would have been bad because I didn&amp;#39;t do everything with
discovery learning. Finally, I was bad because I actually used, shock,
direct instruction.&lt;/p&gt;
&lt;p&gt;
My observers knew better. That said, I
know plenty of other teachers who had to kowtow to Danielson or
wahtever the flavor du jour was in order to get their satisfactory
rating.&lt;/p&gt;
&lt;p&gt;
In fact, I&amp;#39;ll share one brief story, I was chatting with my principal
at the time at Stuy and we were talking about a certain teacher that
both of us admire very much. This teacher taught both of our children
(4 in total) and we knew this person was the best. The principal told
me that they would have to be careful and never swing by this teachers
class when people from central were visiting since the educrats from
central would certainly frown on the way this teacher taught even
though we all knew otherwise.&lt;/p&gt;
&lt;p&gt;
Back to Proficiency Grading. In the reddit forum, a teacher was
complaining that this was being forced on them in their school and it
just didn&amp;#39;t work. In practice, at that school, students would
basically intentionally bomb or not take the exams with the intent of
seeing what was on them and then taking &amp;#34;make ups&amp;#34; later. The class,
however, would move along. Frequently the students wouldn&amp;#39;t follow up
in a timely matter and then didn&amp;#39;t remember anything anyway. The whole
thing was a mess.&lt;/p&gt;
&lt;p&gt;
I heard similar things about new policies from Stuyvesant. Not mastery
grading but that if a student missed an exam, it would have to be
administered upon the students return - no penalties and no questions
asked.&lt;/p&gt;
&lt;p&gt;
Since then, there&amp;#39;s been a subset of students who would intentionally
cut exams, find out the content from their friends, and then take the
makeup. The policy, as implemented was both lazily and poorly thought
out.&lt;/p&gt;
&lt;p&gt;
Now, again I&amp;#39;ll say that there&amp;#39;s a lot I like about Proficiency
Grading but the people who can use it whole hog are in very specific
circumstances. Maybe their in a college elective where students opt in
and are more mature. Maybe they have small class sizes so the extra
grading isn&amp;#39;t a burden. Maybe the culture of their school plays well
with this particular reform. This is all great but when &amp;#34;the research&amp;#34;
comes down to the general public schools, it isn&amp;#39;t pick and chose what
works. It&amp;#39;s do it or else.&lt;/p&gt;
&lt;p&gt;
I implemented Proficiency Grading in my teacher ed program this last
cycle for the summer classes and it overall, I think was a benefit for
the students who approached the class the right way. That said, I know
a couple, well, let&amp;#39;s say, cut corners. It really aggravated me but it
was better to do good by the majority. It&amp;#39;ll eventually come clean to
those who didn&amp;#39;t do it right. It did force me, unfortunately, to make
policy changes for the school year portion of the program.&lt;/p&gt;
&lt;p&gt;
This is to say that it wasn&amp;#39;t a best practice in that circumstance. It
was a practice I wanted to employ but it turned out I couldn&amp;#39;t without
modifications.&lt;/p&gt;
&lt;p&gt;
And that&amp;#39;s the truth about all practices. As a teacher, you have to
build as robust a toolbox as you can but then, it should be up to you
to decide what tool to use, how to use it and when to use it. You&amp;#39;ll
go with the subject, you&amp;#39;ll see what your student&amp;#39;s need and you&amp;#39;ll
account for your own strengths. That way all your practices will be
best practices, at least for that instance.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Design decisions when planning a class</title>
      <link>https://cestlaz.github.io/post/design-decisions/</link>
      <pubDate>Thu, 27 Jul 2023 10:31:49 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/design-decisions/</guid>
      <description>&lt;p&gt;
Now that I&amp;#39;ve got a little more free time and energy I decided to get
working on a short video series on elisp - the language that&amp;#39;s built
in to and intertwined with the Emacs editor.&lt;/p&gt;
&lt;p&gt;
As I&amp;#39;ve been thinking through and starting the series I started to
think about the design decisions, big and small, one makes when
designing a class, unit or lesson.&lt;/p&gt;
&lt;p&gt;
I know many teachers are forced to teach scripted, canned curricula
these days but the act of developing something and delivering it is so
much more interesting and I dare say better for students.&lt;/p&gt;
&lt;p&gt;
I thought it might be interesting to share a bit of my thought process
as my little video project takes shape.&lt;/p&gt;
&lt;p&gt;
On the big side I had to think about overall structure. Who&amp;#39;s this
series for and how should it basically be shaped. Well, primarily,
this is for me. I thought it would be a good way to dive in to Emacs
programming a bit more deeply. Of course, others in the Emacs
community have requested I do something like this and I do hope they
get something useful out of all of this.&lt;/p&gt;
&lt;p&gt;
Combining the two groups - the Emacs community and me, I figured that
most viewers would have at least some programming experience. This led
me to decide on the format. I wasn&amp;#39;t going to go through the language
and programming from scratch like a CS0 programming intro but rather,
I&amp;#39;d build small elisp programs and projects to illustrate elisp
concepts.  I felt that for my potential audience, videos incrementally
going through language constructs, library calls and features in a
systematic way would give better coverage but I thought it would be
more boring. I also thought that having little working code examples
to modify would probably be more useful for an elisp newbie who wanted
to noodle around and customize Emacs. Were I teaching a regular
class - that is something with student feedback or even in person, I
might have made a different decision.&lt;/p&gt;
&lt;p&gt;
Similar decisions for a traditional course might be objects first or
constructs first in APCS-A or whether or not to base a class on
students writing new code or working in a code base provided by the
instructor.&lt;/p&gt;
&lt;p&gt;
Maybe more interesting are the smaller choices. As an example, I just
did my first video on &lt;a href=&#34;https://cestlaz.github.io/post/learning-elisp-4/&#34;&gt;rot13&lt;/a&gt;. We wrote a function to rotate a
character, and the one to rotate a word. I decided intentionally to
leave out two things:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;integrating this into the Emacs interface&lt;/li&gt;
&lt;li&gt;handling rotating robustly - our solution assumes all lower case
letters only.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I decided to leave those two out for a few reasons.&lt;/p&gt;
&lt;p&gt;
First was video length. The video was going to be about 30 minutes
which is already longer than I&amp;#39;d like.&lt;/p&gt;
&lt;p&gt;
Second, the Emacs integration is a rich enough topic that I wanted it
to have its own video or lesson. That&amp;#39;ll be the one I record next.&lt;/p&gt;
&lt;p&gt;
Finally, making the code robust will allow us to cover conditionals -
another subject worthy of its own lesson.&lt;/p&gt;
&lt;p&gt;
By delaying those two concepts I was also able to finish the first
video with something that worked and if a view wanted, they had
something that they could explore on their own without too much
difficulty. &lt;/p&gt;
&lt;p&gt;
There were also decisions to be made on specific constructs to
include. In the video, I talked about the &lt;code&gt;mapcar&lt;/code&gt; function. This is
similar to the &lt;code&gt;map&lt;/code&gt; function you&amp;#39;ll find in many other languages
today.&lt;/p&gt;
&lt;div class=&#34;src src-emacs-lisp&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  (&lt;span style=&#34;color:#a6e22e&#34;&gt;mapcar&lt;/span&gt; func &lt;span style=&#34;color:#a6e22e&#34;&gt;list&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
Will apply func to every item in a list so &lt;code&gt;(mapcar #&amp;#39;square &amp;#39;(1 2 3
4))&lt;/code&gt; yields &lt;code&gt;(1 4 9 16)&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;
All of the code can be found &lt;a href=&#34;https://gitlab.com/zamansky/learning-elisp-code/-/blob/main/rot13.el?ref_type=heads&#34;&gt;here&lt;/a&gt; but the gist is that I had a
function to rotate a character by any amount using 2 parameters. I
then wrote another function that called that function forcing a
rotation of 13 and then used that in the map.&lt;/p&gt;
&lt;p&gt;
We could have been finished but I decided to show how elisp uses
anonymous functions using &lt;code&gt;lambda&lt;/code&gt;. This allows one to create a throw
away function on the fly. &lt;/p&gt;
&lt;p&gt;
Alternatively, I could have used Emacs&amp;#39; &lt;code&gt;apply-partially&lt;/code&gt; function to
take our function with 2 parameters and set one of them to be fixed.&lt;/p&gt;
&lt;p&gt;
For example, in bad Python pseudocode (and this won&amp;#39;t work in Python):&lt;/p&gt;
&lt;div class=&#34;src src-python&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;# assume we have a function rotate(amt,letter) which rotates letter by amount&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  rotate&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;13&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; apply&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;partially(rotate,&lt;span style=&#34;color:#ae81ff&#34;&gt;13&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;# now calling rotate-13(&amp;#39;a&amp;#39;) would be the same as&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;# rotate(13,&amp;#39;a&amp;#39;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;# apply-partially, gave us a new function with the first parameter set&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;# at 13.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
Pretty cool, right?&lt;/p&gt;
&lt;p&gt;
I think it is but I also feel that &lt;code&gt;lambda&lt;/code&gt; is more fundamental and
more widely applied across languages.&lt;/p&gt;
&lt;p&gt;
I also could have left it out altogether but felt that early
introduction, even as a little hand wavy extra, would be of benefit
later on when we use lambda more seriously.&lt;/p&gt;
&lt;p&gt;
This type of decision is similar to how I usually sequence my data
structure courses. I usually use this outline:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;recursion (blind search)&lt;/li&gt;
&lt;li&gt;linked lists / dynamic memory&lt;/li&gt;
&lt;li&gt;sorting (nlogn)&lt;/li&gt;
&lt;li&gt;stacks/queues&lt;/li&gt;
&lt;li&gt;trees&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;We get our feet wet with recursion but after a couple of weeks, we do
dynamic memory and the recursion can marinate in the subconscious.&lt;/p&gt;
&lt;p&gt;
Then, we come back to recursion a little more deeply and the dynamic
data structures marinate.&lt;/p&gt;
&lt;p&gt;
Rinse and repeat.&lt;/p&gt;
&lt;p&gt;
So, these are some of the examples of the types of decisions one makes
when designing instruction. Will I be right? I don&amp;#39;t know. If I were
teaching a real course, I&amp;#39;d figure that out over time and iterate -
education is playing the long game.&lt;/p&gt;
&lt;p&gt;
In any event, these should be conscious decisions. Creating a class,
unit, or lesson shouldn&amp;#39;t be just following the text book or the
content provider but intentional choices based on the content, the
class, the teacher and the environment.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Learning Elisp 4 - Rot13 part 1</title>
      <link>https://cestlaz.github.io/post/learning-elisp-4/</link>
      <pubDate>Tue, 25 Jul 2023 15:21:56 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/learning-elisp-4/</guid>
      <description>
&lt;p&gt;
It&amp;#39;s been a couple of weeks since my last post. Sorry - been
repainting the apartment so I was limited to my laptop for a while.&lt;/p&gt;
&lt;p&gt;
Now that we&amp;#39;ve gone over a few basics we can explore new elisp
features while building &amp;#34;useful&amp;#34; things. This video has us building
code to implement &lt;a href=&#34;https://en.wikipedia.org/wiki/ROT13&#34;&gt;ROT13&lt;/a&gt;. ROT13 is a particular instance of a &lt;a href=&#34;https://en.wikipedia.org/wiki/Caesar_cipher&#34;&gt;Caesar or
rotational cipher&lt;/a&gt;. In a Caesar Cipher, you take each letter and
&amp;#34;rotate&amp;#34; it by a certain number of places. For example, if you are
rotating by 2, the string &amp;#34;abcz&amp;#34; would become &amp;#34;cdeb&amp;#34; with each letter
moving two over. Note that the &amp;#34;z&amp;#34; has to rotate back to the beginning
of the alphabet and become a &amp;#34;b.&amp;#34;&lt;/p&gt;
&lt;p&gt;
I also put &amp;#34;useful,&amp;#34; above in quotes. This is because, while I think
ROT13 is interesting and will allow us to explore a number of elisp
concepts, it&amp;#39;s actually already built in to Emacs.&lt;/p&gt;
&lt;p&gt;
In the video, I go on for a while about ROT13 and some internet
history but if you aren&amp;#39;t interested in that, I put a chapter link in
the video description to skip that part.&lt;/p&gt;
&lt;div id=&#34;outline-container-headline-1&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-1&#34;&gt;
Notes on some of the elisp concepts covered:
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-1&#34; class=&#34;outline-text-2&#34;&gt;
&lt;div id=&#34;outline-container-headline-2&#34; class=&#34;outline-3&#34;&gt;
&lt;h3 id=&#34;headline-2&#34;&gt;
Lists
&lt;/h3&gt;
&lt;div id=&#34;outline-text-headline-2&#34; class=&#34;outline-text-3&#34;&gt;
&lt;p&gt;
In elisp, things in parentheses are lists so (+ 2 3) is a list. If you
have this in a program, however, Emacs will try to evaluate the
function + on the parameters 2 and 3. In this case, that is what we
want.&lt;/p&gt;
&lt;p&gt;
Other times, we want to use a list as pure date, for example the list
(1 2 3 4 5). To prevent Emacs from evaluating this list we start it
with a single quote: &amp;#39;(1 2 3 4 5)&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-3&#34; class=&#34;outline-3&#34;&gt;
&lt;h3 id=&#34;headline-3&#34;&gt;
Strings and Characters
&lt;/h3&gt;
&lt;div id=&#34;outline-text-headline-3&#34; class=&#34;outline-text-3&#34;&gt;
&lt;p&gt;
In Elisp, things in double quotes are strings so &amp;#34;abc&amp;#34; is a string
with the three characters a, b, and c. Characters can be written
individually by preceding them with a question mark - ?a for the
character a.&lt;/p&gt;
&lt;p&gt;
In the video, we&amp;#39;ll go into details and also see how Emacs will
interpret a string as a list of characters and how we can then go back
from a list of characters to a string.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-4&#34; class=&#34;outline-3&#34;&gt;
&lt;h3 id=&#34;headline-4&#34;&gt;
Mapping functions
&lt;/h3&gt;
&lt;div id=&#34;outline-text-headline-4&#34; class=&#34;outline-text-3&#34;&gt;
&lt;p&gt;
In lisp type languages, we use a lot of what are known as mapping
functions. The function &lt;code&gt;mapcar&lt;/code&gt; in elisp, takes a function and
applies it to each element of a list. For example, given this code:&lt;/p&gt;
&lt;div class=&#34;src src-emacs-lisp&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  (defun square (x) (&lt;span style=&#34;color:#a6e22e&#34;&gt;*&lt;/span&gt; x x))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  (&lt;span style=&#34;color:#a6e22e&#34;&gt;mapcar&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;#&amp;#39;&lt;/span&gt;square &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#39;&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;))&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
That mapcar function will return the list &amp;#39;(1 4 9 16 25), the list you
get by applying the square function we wrote to each element of the
list. The video goes into more details. Note that we have to precede 
the function square with #&amp;#39; in the mapcar call&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-5&#34; class=&#34;outline-3&#34;&gt;
&lt;h3 id=&#34;headline-5&#34;&gt;
Lambda
&lt;/h3&gt;
&lt;div id=&#34;outline-text-headline-5&#34; class=&#34;outline-text-3&#34;&gt;
&lt;p&gt;
We also cover anonymous functions in the video - it lets you create a
&amp;#34;throwaway&amp;#34; function.&lt;/p&gt;
&lt;p&gt;
For example, &lt;code&gt;(lambda (x) (* x x))&lt;/code&gt; returns a function that squares
its parameter. We can use it to square the number 3 like this: &lt;code&gt;(
(lambda (x) (* x x)) 3)&lt;/code&gt;. In the video we&amp;#39;ll show why this is useful
when combined with functions like mapcar.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-6&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-6&#34;&gt;
Misc stuff
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-6&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
For some reason, the video is showing for me at low resolution. If
this happens to you, click on the options wheel and select a higher
res.&lt;/p&gt;
&lt;p&gt;
Also, I mentioned rec.humor.spc in the video. I found some old Stupid
People&amp;#39;s Court posts &lt;a href=&#34;https://www.panix.com/~pschleck/spc/&#34;&gt;here&lt;/a&gt;. I thought some of you would enjoy them.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-7&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-7&#34;&gt;
The video
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-7&#34; class=&#34;outline-text-2&#34;&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/_3OvTrkSqEE&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;
Video link: &lt;a href=&#34;https://www.youtube.com/watch?v=_3OvTrkSqEE&#34;&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=_3OvTrkSqEE&#34;&gt;https://www.youtube.com/watch?v=_3OvTrkSqEE&lt;/a&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Learning Elisp 3 - functions</title>
      <link>https://cestlaz.github.io/post/learning-elisp-3/</link>
      <pubDate>Thu, 13 Jul 2023 15:17:48 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/learning-elisp-3/</guid>
      <description>&lt;p&gt;
Here&amp;#39;s another short video - this one on declaring functions in elisp.&lt;/p&gt;
&lt;p&gt;
Not much to say about it. It&amp;#39;s similar to other languages.&lt;/p&gt;
&lt;p&gt;
In Python or C++ you might have:&lt;/p&gt;
&lt;div class=&#34;src src-text&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  # Python 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  def add2(a, b):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    return a+b
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  // C++
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  int add2(int a, int b){
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    return a+b;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  }&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
Elisp is similar:&lt;/p&gt;
&lt;div class=&#34;src src-emacs-lisp&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  (defun add2 (a b)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    (&lt;span style=&#34;color:#a6e22e&#34;&gt;+&lt;/span&gt; a b))&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
But it&amp;#39;s a little more &amp;#34;mathy.&amp;#34; You&amp;#39;ve got the special form &lt;strong&gt;defun&lt;/strong&gt;,
then the name of the function, parameters in parens and then the
body - all wrapped in parentheses. Note that you don&amp;#39;t explicitly
write return. It&amp;#39;s mroe like a mathematical expression where it
returns what the function evaluates to.&lt;/p&gt;
&lt;p&gt;
The video also describes the &lt;code&gt;(interactive)&lt;/code&gt; form. By using it, we can
call our function as a command and bind a key combination to call it.&lt;/p&gt;
&lt;p&gt;
I do want to share one quick note on the content though - in the video
I write &lt;code&gt;(dotimes (i 5) (next-line))&lt;/code&gt; to move down 5 lines. Instead of
using &lt;code&gt;dotimes&lt;/code&gt; I could have just given a parameter to &lt;code&gt;next-line&lt;/code&gt; -
that is, wrote &lt;code&gt;(next-line 5)&lt;/code&gt;. I chose to use dotimes in order to
introduce some control code. I wanted newbies to see it here before we
revisit control structuers more in depth in later videos.&lt;/p&gt;
&lt;p&gt;
Speaking of later videos, here&amp;#39;s whats to come, maybe in a different
order.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A video, probably with some internet lore and history on writing
arot13 function which is a special case of a Caesar cipher.&lt;/li&gt;
&lt;li&gt;One on creating a function to make a consistent function header&lt;/li&gt;
&lt;li&gt;How to create a mode so that when you type an emoji in :&amp;#39;s you get
the emoji. So, by typing 🐘 you&amp;#39;d see this: 🐘.&lt;/li&gt;
&lt;li&gt;A function to use an API to replace a word with a synonym.&lt;/li&gt;
&lt;li&gt;And maybe a few more along the way.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For now, enjoy this short intro to writing functions:&lt;/p&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/v3wdkJa87No&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;
Video Link:  &lt;a href=&#34;https://www.youtube.com/watch?v=v3wdkJa87No&#34;&gt;https://www.youtube.com/watch?v=v3wdkJa87No&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Learning Elisp 2 - variables</title>
      <link>https://cestlaz.github.io/post/learning-elisp-2/</link>
      <pubDate>Thu, 13 Jul 2023 07:46:04 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/learning-elisp-2/</guid>
      <description>&lt;p&gt;
I was planning on writing this yesterday but caught up in watching
&amp;#34;Paths of Glory.&amp;#34;&lt;/p&gt;
&lt;p&gt;
The plan was to have each topic revolve around a &amp;#34;real&amp;#34; project but I
realized that first we have to cover some basics. Specifically,
variables and functions. I was going to cover them together but the
video was getting a little long so we&amp;#39;re doing variables here and
writing functions next time.&lt;/p&gt;
&lt;p&gt;
Like other languages, Emacs uses variables to store values. Also, like
other, or at least some other languages, there are a number of
subtleties and variations.&lt;/p&gt;
&lt;p&gt;
We&amp;#39;re keeping things simple for now and will dive deeper as needed in
the future.&lt;/p&gt;
&lt;p&gt;
To create a variable in Emacs we use the special form &lt;code&gt;defvar&lt;/code&gt;. The
&lt;code&gt;defvar&lt;/code&gt; form defines a symbol as a variable - &lt;code&gt;(defvar name)&lt;/code&gt; or,
with an initial value &lt;code&gt;(defvar name &amp;#34;Tom&amp;#34;)&lt;/code&gt;. It turns out, that you
can keep using &lt;code&gt;defvar&lt;/code&gt; to change values in a variable:&lt;/p&gt;
&lt;div class=&#34;src src-emacs-lisp&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  (defvar name)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  (defvar name &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Tom&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  (defvar name &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Tim&amp;#34;&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
I&amp;#39;m unsure of the internal ramifications of this but that&amp;#39;s not how
we&amp;#39;re supposed to do things. To change (or set) variables, we&amp;#39;re
supposed to use &lt;code&gt;setq&lt;/code&gt; - &lt;code&gt;(setq name &amp;#34;Tammy&amp;#34;)&lt;/code&gt; for instance. Of
course, to make things less simple, we can use &lt;code&gt;setq&lt;/code&gt; without first
using &lt;code&gt;defvar&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;
Now, &lt;code&gt;defvar&lt;/code&gt; in our case, creates global variables but sometimes we
want something more locally scoped. For that we use the &lt;code&gt;let&lt;/code&gt; form. In
the following example, we create a &amp;#34;global&amp;#34; variable &lt;strong&gt;name&lt;/strong&gt; with
&lt;code&gt;defvar&lt;/code&gt; and then a local one with &lt;code&gt;let&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;src src-emacs-lisp&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  (defvar name &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Global Gabe&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  (&lt;span style=&#34;color:#a6e22e&#34;&gt;print&lt;/span&gt; name) &lt;span style=&#34;color:#75715e&#34;&gt;;; prints Global Gabe &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  (let ( (name &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Local Larry&amp;#34;&lt;/span&gt;) )
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    (&lt;span style=&#34;color:#a6e22e&#34;&gt;print&lt;/span&gt; name) &lt;span style=&#34;color:#75715e&#34;&gt;;; prints Local Larry&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    (setq name &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Local Lisa&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    (&lt;span style=&#34;color:#a6e22e&#34;&gt;print&lt;/span&gt; name) &lt;span style=&#34;color:#75715e&#34;&gt;;; prints Local Lisa - we changed the local one &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    )
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  (&lt;span style=&#34;color:#a6e22e&#34;&gt;print&lt;/span&gt; name) &lt;span style=&#34;color:#75715e&#34;&gt;;; but Global Gabe was unchanged&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
The video goes over the details and a few more nuances.&lt;/p&gt;

&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/eQNqIsyw1mo&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;
Video Link: &lt;a href=&#34;https://www.youtube.com/watch?v=eQNqIsyw1mo&#34;&gt;https://www.youtube.com/watch?v=eQNqIsyw1mo&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>What AP Exams Tell Us</title>
      <link>https://cestlaz.github.io/post/what-ap-exams-tell-us/</link>
      <pubDate>Tue, 11 Jul 2023 14:35:26 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/what-ap-exams-tell-us/</guid>
      <description>&lt;p&gt;
I wanted to get back to my post on the &amp;#34;hard&amp;#34; &lt;a href=&#34;https://cestlaz.github.io/post/acps-a-hardest-question/&#34;&gt;AP
question&lt;/a&gt;. Specifically I wanted to reflect on what AP exams can and
can&amp;#39;t actually tell us and what purpose they serve, can serve, or
should serve.&lt;/p&gt;
&lt;p&gt;
First let&amp;#39;s make sure we&amp;#39;re on the same page about what the College
Board is offering - they offer single end of semester high stakes
exams. These exams provide a single number between 1 and 5 that, in
theory, signify how well an exam taker knows the subject. As it
happens, many colleges award either credit, placement or both if
students score high enough.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m emphasizing that the college board&amp;#39;s offerings are exams because
that&amp;#39;s really the only thing that&amp;#39;s different or special about
them. Calculus existed long before the college board and while
calculus classes in high school and college vary around the edges, the
topic matter is essentially the same. If you teach calculus with or
without the college board you&amp;#39;re probably teaching more or less the
same thing. Same for APCS-A which, while usually taught over the
course of a full year, is largely similar to a college CS1
class. APCS Principles and possibly other courses are not facsimiles
of college courses (and in fact, in my opinion, APCS-P is not college
level) but even then, the unique part of the College Board&amp;#39;s offering
is the exam. Over the past decade, many colleges have designed or
redesigned their CS0 offerings. I personally, designed a CS0 for
Stuyveasnt that became a required class in the late 1990s and I think
it&amp;#39;s much stronger than APCS-P. Other HS teachers have done
similar. Even with APCS-P, there are numerous independent businesses
and organizations offering their own APCS-P curricula.&lt;/p&gt;
&lt;p&gt;
So, at the end of the day, the College Board does one thing - offers
and grades a high stakes exam. These exams also are limited in
format. Multiple Choice and long answer questions are the norm. Long
answer might be an essay in some subjects or word problems in math or
science. In CS, they&amp;#39;re generally programming questions. Some exams
might have additional components such as the activities that APCS-P
students do in class which are then submitted for evaluation but we&amp;#39;re
going to stick to APCS-A here.&lt;/p&gt;
&lt;p&gt;
So, what can and can&amp;#39;t the exam do?&lt;/p&gt;
&lt;p&gt;
To start, it&amp;#39;s a single exam at the end of the semester. There&amp;#39;s no
feed forward from current teachers and no feedback afterwards for the
students. The exam has to be totally self contained. Since the student
teachers had nothing to do with the creation of the exam, don&amp;#39;t
proctor it, and in fact can&amp;#39;t be around the administration, everything
about the questions has to be in the questions. No ambiguity at
all. This can frequently lead to the &amp;#34;wall of text&amp;#34; problem I talked
about in the earlier post.&lt;/p&gt;
&lt;p&gt;
Since it&amp;#39;s a coarse instrument, it also has to try to capture a range
of results that will map to the final grades between 1 and 5. This
means you want to try to avoid all or nothing questions where a test
taker either aces the question or gets a 0. The hope is that if they
know some concepts leading to a solution they can get some credit.&lt;/p&gt;
&lt;p&gt;
This, and the format leads to a test of, in my opinion, limited value.&lt;/p&gt;
&lt;p&gt;
Half the test is multiple choice. Multiple choice questions don&amp;#39;t
usually lend themselves to deep thinking questions. They&amp;#39;re more
suited to rules, regurgitation, and mechanics. You&amp;#39;ll see trace
through the code questions, know the rules questions and definition
questions. These take time but measure mechanics and memory, not
problem solving.&lt;/p&gt;
&lt;p&gt;
Free response isn&amp;#39;t much better.  You can find past questions
&lt;a href=&#34;https://apcentral.collegeboard.org/courses/ap-computer-science-a/exam/past-exam-questions&#34;&gt;here&lt;/a&gt;. Most of the questions are very wordy which is a challenge to
both native English speakers and English language learners but the
questions usually either spell out in detail step by step what to do
or the solution for each part is arrived at by either using a small
number of calls defined earlier in the question or come from a
provided reference such as the ArrayList reference. I looked over the
2021 exam and indeed two of the questions spell out the solutions and
the other two use the calls from the reference or the question.&lt;/p&gt;
&lt;p&gt;
In general, just like the multiple choice, the free response questions
don&amp;#39;t really test problem solving. They test reading comprehension and
a knowledge of the mechanics of fundamental programming. It&amp;#39;s coding
not computer science.&lt;/p&gt;
&lt;p&gt;
Sometimes it gets a little ridiculous. One year, back in the APCS-AB
days there was a question that was essentially a mergesort but the
question itself was a writeup of the psuedocode in outline form.&lt;/p&gt;
&lt;p&gt;
On the flip side, there sometimes is a deep thinking question. The
very first year APCS was offered there was a question that essentially
asked the design of a data structure to store a sparse matrix. I took
that exam and I&amp;#39;m sure I got that one wrong. It wasn&amp;#39;t easy but it
required problem solving. The problem with those types of questions is
that they&amp;#39;re all or nothing and the College Board, even with the types
of questions they use receives far too many blank solutions.&lt;/p&gt;
&lt;p&gt;
So that&amp;#39;s the test - it&amp;#39;s a test of programming mechanics, rule
familiarity, and reading. The truth is, that it probably has to be
this way. A teacher throughout a year can assess a student in a
variety of ways and should know their students and where they are
at. Some assessments might cover mechanics and memory but others the
deeper concepts. It&amp;#39;s why, when I decided where to place my incoming
Hunter freshmen, I didn&amp;#39;t care about their AP scores. For APCS-P
because the class is super uneven - I&amp;#39;ve met APCS-P students with
strong backgrounds and others who would have been better of with
nothing at all in terms of CS learned. For APCS-A, I know plenty of
students who earned a low score who ended up doing great things in
CS - since the vast majority of my students were NYC students, I
generally knew their CS teachers and the classes they taught - that&amp;#39;s
what I went with.&lt;/p&gt;
&lt;p&gt;
For the AP exam? How valuable can a 5 value scale be in communicating
what a student knows? Going back to my last post, while the 2D free
response question had the lowest scores but apparently students scored
well on the 2D array multiple choice questions. Which is it?&lt;/p&gt;
&lt;p&gt;
So there it is - high stakes tests are not only bad due to the
pressure they place kids under but also because they come down to a
single number and a single number in no way can represent a
student. Even worse, high stakes exams are very frequently, and I
don&amp;#39;t know if the college board follows this practice, first scored to
a rubric and then after the fact the raw scores are mapped to a final
grade. This is a key way New York State manipulates test scores and passing
rates to suit their needs.&lt;/p&gt;
&lt;p&gt;
This is just one of the reason I&amp;#39;m down on the College Board - better
for high schools to partner with local colleges and offer dual credit
classes. Teach college stuff and get real college credit - not a
number between 1 and 5.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Learning Elisp 1</title>
      <link>https://cestlaz.github.io/post/learning-elisp-1/</link>
      <pubDate>Thu, 06 Jul 2023 10:16:49 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/learning-elisp-1/</guid>
      <description>&lt;p&gt;
Here&amp;#39;s the first video in my learning elisp series.&lt;/p&gt;
&lt;p&gt;
Elisp is a lisp variant embedded within the Emacs editor. You could
actually describe Emacs as an &amp;#34;elisp machine&amp;#34; in the same sense of the
old &lt;a href=&#34;https://en.wikipedia.org/wiki/Lisp_machine&#34;&gt;lisp machines&lt;/a&gt;. It&amp;#39;s not quite the same as the way most other
editors have extension or plugin languages. Other than the core of
Emacs, which is written in C, everything is elisp. Even when you type
in a key. For example, when I type in an &amp;#39;x&amp;#39; on the keyboard, emacs
actually runs the self-insert-command function. When you open a new
file, which you might do in another editor using the File menu, you
actually are running the find-file function in elisp. So instead of
using the menu or the keybinding to open a new file you can write, in
emacs (find-file &amp;#34;some-file&amp;#34;) and run that function and the file will
be opened.&lt;/p&gt;
&lt;p&gt;
In the video, I talk a bit about elisp in general, show how to call
some built in functions, use the help a bit and then set the stage for
the rest of the series.&lt;/p&gt;
&lt;p&gt;
Important functions and keybindings from the video:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Key&lt;/th&gt;
&lt;th&gt;Function&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;C-h i&lt;/td&gt;
&lt;td&gt;info&lt;/td&gt;
&lt;td&gt;bring up the info (help) system&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;C-h k&lt;/td&gt;
&lt;td&gt;describe-key&lt;/td&gt;
&lt;td&gt;bring up info for the next keystroke&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;C-h f&lt;/td&gt;
&lt;td&gt;describe-function&lt;/td&gt;
&lt;td&gt;bring up help for a function&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;C-x C-e&lt;/td&gt;
&lt;td&gt;eval-last-sexp&lt;/td&gt;
&lt;td&gt;evaluates the previous elisp form&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;eval-print-last-sexp&lt;/td&gt;
&lt;td&gt;like above but also print the result&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;
In the next video, we&amp;#39;ll learn how to create our own functions,
explore some fundamental elisp structures and functions, and try to
write something useful.&lt;/p&gt;
&lt;p&gt;
Here&amp;#39;s the video, enjoy:&lt;/p&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/x9Qws7ZOksc&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; allowfullscreen&gt;&lt;/iframe&gt;
</description>
    </item>
    
    <item>
      <title>APCS A - The Hardest Question</title>
      <link>https://cestlaz.github.io/post/acps-a-hardest-question/</link>
      <pubDate>Mon, 03 Jul 2023 07:14:37 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/acps-a-hardest-question/</guid>
      <description>
&lt;p&gt;
There was some discussion the other day resulting from some info
released by the College Board on this past years APCS-A exam.The
&amp;#34;hardest&amp;#34; question was the 2D Array free response. As it happened, 34%
of test takers earned 0 out of 9 points on the question. What&amp;#39;s
interesting is that the College Board noted that at the same time,
students did very well on the multiple choice 2D array questions.&lt;/p&gt;
&lt;p&gt;
What does that mean and what does that tell us. Let&amp;#39;s explore.&lt;/p&gt;
&lt;p&gt;
You can find the question in the released &lt;a href=&#34;https://apcentral.collegeboard.org/media/pdf/ap23-frq-comp-sci-a.pdf&#34;&gt;exam&lt;/a&gt; questions starting on page 14.&lt;/p&gt;
&lt;div id=&#34;outline-container-headline-1&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-1&#34;&gt;
Was it really a hard question?
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-1&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
In my opinion, not really. APCS-A is supposed to be a college level CS1 class and
following instructions to traverse or manipulate a 2D array should be
pretty easily handled by CS1 students.&lt;/p&gt;
&lt;p&gt;
Once you get to the meat of the question it was pretty
straightforward. Of course, getting to the meat, particularly under
time pressure could be a considerable challenge. More on that below. &lt;/p&gt;
&lt;p&gt;
The first part of the question was basically just a scan down a column
and reassign elements with a couple of conditions.  The &amp;#34;to do&amp;#34; items
were listed pretty clearly in the question so a student would just
have to take the bulleted instructions as an outline and code it out.&lt;/p&gt;
&lt;p&gt;
The second part involved scanning through a 2D array. Pretty
standard stuff but you had to pay attention to the specific order of
your traversal which was hidden in a mountain of text.&lt;/p&gt;
&lt;p&gt;
There have certainly been harder and trickier questions in past
years. I can think of one &amp;#34;encryption&amp;#34; question that I remember to be
harder and I seem to recall others that required shifted values in a
2D array which is certainly harder than what was asked here. It would
be interesting to see the score data on the &amp;#34;hard&amp;#34; question from past
years and see how they compare. &lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-2&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-2&#34;&gt;
Whose fault is it?
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-2&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
One of the comments I read was that if 34% of test takers score 0
points on a question the test write is at fault. This is probably
correct but not necessarily because the question was bad or that the
exam was bad. This is a deeper question. I plan to address this in
a later post.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-3&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-3&#34;&gt;
Blank question or blank test?
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-3&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
This question was raised in one of the forums. Each year, so I&amp;#39;m told,
there are large swaths of AP exams that are just blank. This can be
for a variety of reason - an unprepared kid, one who never wanted to
take the exam, cases where the kid&amp;#39;s already decided on college (or
not college at all) and the exam won&amp;#39;t do anything for them and
possibly other reasons. Obviously this question would be blank if the
entire exam was blank. What percent of otherwise completed tests had
this question scoring 0 points. Better, but maybe impossible to figure
out now, how many questions were left blank vs had totally incorrect
answers? All of this would be interesting. &lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-4&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-4&#34;&gt;
Is this a CS test or is this reading?
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-4&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
Another comment pointed out that this question was a wall of
text. Hard enough for a native English speaker but a particular
challenge for an English Language Learner. How badly did this affect
the results? It took me a reasonable amount of time and effort to make
sense of the question. It was somewhat contrived and arbitrary and you
really had to get into the weeds of the text to know exactly what to
do. How big of an effect was this? Did it cause kids to give up?  Did
they misinterpret things? Who knows. While understanding a problem
statement is important, in the real world, a professional programmer
can always ask for clarification. Not on an exam. I get it - since its
one way communication, the test writers have to put &lt;strong&gt;everything&lt;/strong&gt; in
the question and leave no ambiguity but if the result is a long winded
obtuse question, maybe come up with another question. Strip away the
story and this particular question is pretty easy. With it, it&amp;#39;s much
harder for most high school kids and maybe intractable for an English
Language learner.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-5&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-5&#34;&gt;
Did they run out of time?
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-5&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
Maybe it wasn&amp;#39;t that it was a hard question but seeing the wall of
text or the topic of 2D arrays, students left it for last. This is
not an uncommon strategy. For years, across all subjects, teachers
tell students not to get caught up on one time consuming problem. The
strategy is to maximize your points. When I taught APCS, my students
never had trouble with the time for the free response but the multiple
choice was a race - probably because I never did any explicit prep for
it. It&amp;#39;s frequently better to skip a couple of time consuming ones and get all the
others right.&lt;/p&gt;
&lt;p&gt;
Same strategy can be used for the free response. How many students
focused on getting maximum points on the other questions and just ran
out of time. This would jive with the fact that students did well on
the multiple choice 2D array questions. &lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-6&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-6&#34;&gt;
Was it a strategic omission to maximize score?
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-6&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
What if it was left for last and by &amp;#34;it&amp;#34; I mean teaching 2D
arrays. This has long been a teaching strategy when high stakes tests
are at play. Arrange the topics taught and the amount of time to
allocate so as to maximize student performance on the exam.&lt;/p&gt;
&lt;p&gt;
This seems to have happened far and wide in New York City in
Geometry. In NY, students have to pass a number of high stakes tests
called regents exams. Many schools allocate 2 years to Algebra and
most students pass. Then, they allocate one year to Geometry - a much
harder, richer curriculum. Based on the design of the exam, teachers
have realized that in spite of the fact that the course is really
supposed to be about deductive reasoning and proof, that proof only
comprises a very small number of points on the exam. So, if you don&amp;#39;t
teach proof - a notoriously hard subject to teach and learn or merely
pay it lip service, students won&amp;#39;t get any points on the proof section
but the hope is that they&amp;#39;ll know the other subjects better and end up
passing and in fact scoring better overall.&lt;/p&gt;
&lt;p&gt;
Last time I graded the geometry regents, before I left for Hunter
College, the number of proof answers that were entirely blank backs
the theory of this approach.&lt;/p&gt;
&lt;p&gt;
Now, for geometry this certainly hurts kids down the road since
deductive reasoning and proof is more fundamental and important than
say, circle geometry but since teachers and students are being judged
by standardized test scores you can&amp;#39;t really blame them.&lt;/p&gt;
&lt;p&gt;
Could it be that APCS-A teachers have decided to do something similar
with 2D arrays. It&amp;#39;s even more plausible given that most high school
CS teachers are currently much newer to and weaker in CS than math
teachers are to math.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-7&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-7&#34;&gt;
Final thoughts
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-7&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
As you see, there&amp;#39;s a lot to explore based on the simple statistic of
34% of students scored 0 on a question. There are probably more
factors and potential explanations than the ones I&amp;#39;ve shared but the
next, more interesting question is the one posited at the top - is the
College Board to blame or someone else? I think it is a College Board
issue and it&amp;#39;s an issue with the basic AP model. I&amp;#39;ll explore that in
a future post.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Thoughts on Affirmative Action</title>
      <link>https://cestlaz.github.io/post/affirmative-action/</link>
      <pubDate>Thu, 29 Jun 2023 16:48:27 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/affirmative-action/</guid>
      <description>&lt;p&gt;
Today our Supreme Court ruled 6-3 to eliminate racial considerations
in admissions decisions or affirmative action.&lt;/p&gt;
&lt;p&gt;
This will be celebrated by some and reviled by others even though it
probably won&amp;#39;t make a huge difference in terms of class makeup at most
&amp;#34;elite&amp;#34; institutions. Given my leanings and who I follow, you can
probably guess which views I&amp;#39;m seeing more of.&lt;/p&gt;
&lt;p&gt;
The cases that have generally been brought against institutions
implementing affirmative action usually amount to &amp;#34;I was more
qualified than the affirmative action candidate you took&amp;#34; with public
cries of &amp;#34;you&amp;#39;re lowering standards.&amp;#34;&lt;/p&gt;
&lt;p&gt;
Could either of these claims hold water?&lt;/p&gt;
&lt;p&gt;
Let&amp;#39;s look at the lowering standards side. Either the accepted
candidate was set up and able to succeed in the school or they are
not. If they weren&amp;#39;t, well, that would have come clean long ago given
that we&amp;#39;ve had affirmative action for a long time. So, it would appear
that these candidates that &amp;#34;got in over me&amp;#34; are able to survive and
thrive. This could be because intuitions like Harvard are much harder
to get in than to graduate from but whatever. Doesn&amp;#39;t sound like a
standards issue.&lt;/p&gt;
&lt;p&gt;
If we want to talk about lowering standards however, how about
athletes that &amp;#34;didn&amp;#39;t come here to play school&amp;#34; or legacy admits -
I can think of a couple of recent Presidents who were, well, let&amp;#39;s say
not high intellects but somehow attended our &amp;#34;elite&amp;#34;
institutions. Personally, if you eliminate my Stuy grads from the
equation, I&amp;#39;ve met as many dummies who went to the
Harvards of the world as I&amp;#39;ve met geniuses. Well connected dummies who
ran in the right circles and went to the right schools but dummies
nonetheless.&lt;/p&gt;
&lt;p&gt;
What about &amp;#34;I&amp;#39;m more qualified?&amp;#34; Well, schools like Harvard or really
any elite school can pretty much shape their incoming classes however
they&amp;#39;d like. The pool of qualified applicants - students who will go
through four years and graduate successfully - dwarfs the size of the
accepted class. Just looking at Stuy numbers from when I was there,
for every student Harvard accepted, I could point to dozens who would
have fared just as well who were rejected. Now project that
nationally. There&amp;#39;s no doubt in my mind that affirmative action
candidates would be easily in the qualified pool.&lt;/p&gt;
&lt;p&gt;
It made me remember something I read that Malcolm Gladwell once wrote
or said. Something like that Harvard had so many qualified graduates
that if they really cared about being fair, they should take all the
qualified applicants and then select randomly. No athletes, no legacy,
nothing special. Of course, that would never happen.&lt;/p&gt;
&lt;p&gt;
Now, I get that when you&amp;#39;re qualified and aren&amp;#39;t accepted you might
want to cry out &amp;#34;unfair&amp;#34; and maybe it is, but it&amp;#39;s not unfair because
of an affirmative action candidate. It&amp;#39;s unfair because it&amp;#39;s arbitrary
and tons of qualified applicants get turned away for no apparent
reason not because of affirmative action.&lt;/p&gt;
&lt;p&gt;
The end result    today is that colleges are free to keep those legacy
admits, big donor admits, or whatever but heaven help you if you deign
to consider anything to help balance the scales for marginalized
groups or anything to try to help build equity in our country.&lt;/p&gt;
&lt;p&gt;
Now, I do have one issue with affirmative action. It can be a
distracter. Distract from what? The big picture problem.&lt;/p&gt;
&lt;p&gt;
Affirmative action can help but the students that they can admit are
qualified to be accepted to these elite institutions. That says that
either they&amp;#39;re from situations where they&amp;#39;ve had available to them
some or all of the advantages that the rich white kids have had or
that they&amp;#39;ve already rose above the challenges to make themselves
viable candidates. If so, good on them and good for rewarding them but
the issue has to be addressed much earlier.&lt;/p&gt;
&lt;p&gt;
We have so many issues that have to be resolved with education,
poverty, health care, housing, all of which hits our vulnerable
populations the hardest and until as a nation we decide to address
those we&amp;#39;re not truly going to have a fair equitable
society. Unfortunately, a significant portion of our country doesn&amp;#39;t
want to solve these problems and injustices.&lt;/p&gt;
&lt;p&gt;
In the meantime, a handful of students who, well, quite frankly,
deserved to be admitted to Harvard anyway, getting admissions as
affirmative action is nice for them but its no game changer. It&amp;#39;s feel
good window dressing.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m not saying this to diminish the problems with today&amp;#39;s ruling but
we really have to attack the big problems and not just around the
edges. It&amp;#39;s like programs like Prep for Prep. Prep for Prep&amp;#39;s mission
is to &amp;#34;develop future leaders by creating access for young people of
color to first-rate educational, leadership development and
professional advancement opportunities.&amp;#34; They identify individual
students who they feel show promise and get them into elite private
schools (and pay the tuition). Great for those kids but it&amp;#39;s a small
number and it doesn&amp;#39;t do anything to fix any problems in the system as
a whole.&lt;/p&gt;
&lt;p&gt;
So, that&amp;#39;s my two cents. I&amp;#39;m as angered by today&amp;#39;s ruling as the next
person but to me it&amp;#39;s a reminder that it&amp;#39;s not about getting a few
kids into &amp;#34;elite&amp;#34; institutions. It&amp;#39;s about making the all the
institutions &amp;#34;elite.&amp;#34;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>They WILL use AI to come for teachers</title>
      <link>https://cestlaz.github.io/post/ai-replace-teaching/</link>
      <pubDate>Wed, 28 Jun 2023 07:00:25 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/ai-replace-teaching/</guid>
      <description>
&lt;p&gt;
With all the AI hubbub there&amp;#39;s been a lot of talk about AI and
teaching. Will it enhance teaching? Replace teachers? Others? In this
vein, I saw this tweet by Pat Yongpradit of code.org yesterday
evening:&lt;/p&gt;
&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;I would share the nuance that teachers who don&amp;#39;t use AI might be replaced by teachers who use AI, but honestly we need as many of you as possible. Our students need teachers to expand their effectiveness with AI, even if it just opens up more time for developing student… &lt;a href=&#34;https://t.co/NzZGp9m57x&#34;&gt;https://t.co/NzZGp9m57x&lt;/a&gt;&lt;/p&gt;&amp;mdash; Pat Yongpradit (@MrYongpradit) &lt;a href=&#34;https://twitter.com/MrYongpradit/status/1673796564718964736?ref_src=twsrc%5Etfw&#34;&gt;June 27, 2023&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;p&gt;
I hope Pat&amp;#39;s right but I&amp;#39;m pretty sure he&amp;#39;s wrong. While Pat used to
be a teacher, I feel he&amp;#39;s seeing this from an Ed Tech view as code.org
is in many ways an ed tech / lobbying organization.&lt;/p&gt;
&lt;p&gt;
As a general rule, if you want to see how tech can be used to enhance
education just look at the &amp;#34;elite&amp;#34; private schools. In my experience,
public school teachers are, in general, stronger and more innovative
than their counterparts in the private schools - they have to be since
the private schools have super small class sizes and the resources.&lt;/p&gt;
&lt;p&gt;
On the other hand, tech is most often used to cut costs at the public
schools or, when policy is set by republicans and neo-liberals, to
devalue and remove teaching.&lt;/p&gt;
&lt;p&gt;
Let&amp;#39;s look at some pre-AI examples and you&amp;#39;ll see why I think that AI
is likely going to be used the same way.&lt;/p&gt;
&lt;div id=&#34;outline-container-headline-1&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-1&#34;&gt;
Credit Recovery
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-1&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
This has been forced on the NYC public schools since the Bloomberg
Administration. Schools were and are under intense pressure to get and
keep graduation rates up and they couldn&amp;#39;t just kick kids out like
Bloomberg&amp;#39;s favored charted schools. Programs by which kids would sit
in front of computers and go through computer based training
modules. Instead of a teacher they&amp;#39;d have a lower paid aide in the
room or a teacher in charge of a far greater number of students. The
adult would trouble shoot the system but not teach.&lt;/p&gt;
&lt;p&gt;
This was cheaper and pushed kids through the system but it&amp;#39;s not
education. Only recently are we starting to see some pushback on this
type of garbage but it&amp;#39;s a prime example of tech that was meant to be
used as an &amp;#34;extra&amp;#34; instead being used to cut costs and remove those
pesky teachers&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-2&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-2&#34;&gt;
Scripted lessons
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-2&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
This is not strictly tech but we&amp;#39;ve seen a push from ed &amp;#34;reformers&amp;#34;
towards scripted lessons. This is a favorite of private charter schools,
organizations like Teach For America, content and curriculum
providers, and yes code.org. There was even training where a teacher
had an earpiece during the lesson and an observer would correct the
teacher if they went off script.&lt;/p&gt;
&lt;p&gt;
Content providers love this because it streamlines things to a least
common denominator but it certainly isn&amp;#39;t education. Charter schools
love this because they can hire untrained, unprepared &amp;#34;teachers&amp;#34; who
can just follow the scripts. Since the charters can just kick kids out
before standardized tests and they can drill and kill for test prep
they look good but again, it&amp;#39;s garbage education.&lt;/p&gt;
&lt;p&gt;
Is it really a big step to go from bad scripted lessons to bad AI teachers?&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-3&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-3&#34;&gt;
Cyber Charters
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-3&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
Online or cyber charters are another example. Online schools with
hundreds of kids per teacher. Lots of tech, little learning. Just look
them up.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-4&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-4&#34;&gt;
CS 50
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-4&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
If you&amp;#39;ve read my blog you know I&amp;#39;m not a fan of CS50 but the latest
news of them using AI TAs is another example of a level of non-teacher
hubris that could easily lead to a way to replace teachers.&lt;/p&gt;
&lt;p&gt;
Instead of addressing fundamental problems with CS50&amp;#39;s design or
delivery, they&amp;#39;re implementing AI TAs so that students can get more
help in the class. Adding an additional resource is, in general a good
thing but the real answer would be to look inwards and fix the
problems with the course and then also develop additional tools.&lt;/p&gt;
&lt;p&gt;
Do you really think that someones going to push for a version of
CS50 - probably focused on HS which is made up of videos from David
Malan, the charismatic front man, and computerized AI TAs. No teachers
necessary. There was a push for this during the MOOC explosion. It&amp;#39;ll
happen again. If not with CS50 then with something else.&lt;/p&gt;
&lt;p&gt;
The AI TA also brings up tons of questions ranging from how the
feedback from the students will then feed into future classes to the
issue of students engaging with automatons rather than people and is
that, when it gets to a large scale, healthy? &lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-5&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-5&#34;&gt;
Final thoughts
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-5&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
I do fundamentally agree with Pat in that AI will not be able to
replace teachers in terms of effective education which is why I don&amp;#39;t
think we&amp;#39;ll see teacher replacement in the &amp;#34;elite&amp;#34; private
schools. The rich will provide for their kids and foist the money
saving experiments on &amp;#34;other peoples kids.&amp;#34;&lt;/p&gt;
&lt;p&gt;
Unless there are major changes in the way teaching and teachers are
perceived in this country there is no doubt in my mind that there will
be attempts to replace teachers with AI - it won&amp;#39;t improve education
but it will enrich donors and reduce municipal budgets.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Do you really need a degree for tech - an MLH podcast</title>
      <link>https://cestlaz.github.io/post/degree-for-tech/</link>
      <pubDate>Tue, 27 Jun 2023 08:06:43 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/degree-for-tech/</guid>
      <description>&lt;p&gt;
Yesterday, I noticed a LinkedIn post by my friend &lt;a href=&#34;https://www.linkedin.com/in/jonmarkgo/&#34;&gt;Jonathan Gottfried&lt;/a&gt;
of &lt;a href=&#34;https://mlh.io/&#34;&gt;Major League Hacking&lt;/a&gt; about an MLH podcast, &lt;a href=&#34;https://podcasts.bcast.fm/the-state-of-developer-education&#34;&gt;The State of Developer
Education&lt;/a&gt;. The episode he shared caught my eye. It was titled &amp;#34;Do you
Really Need a Degree for Tech?&amp;#34; Here&amp;#39;s the YouTube &lt;a href=&#34;https://www.youtube.com/watch?v=agD0Q4vhi6w&#34;&gt;link&lt;/a&gt;. It featured
Lauren Schaeffer, Developer Advocate for Grammarly.&lt;/p&gt;
&lt;p&gt;
I enjoyed listening to Jon and Lauren&amp;#39;s conversation and recommend
that you too take a listen, Lauren talked a bit about her journey and
highlighted some happenings and practices along the way in school,
IBM, MongoDB, and finally Grammarly. Truth be told, though, I didn&amp;#39;t
feel that they really dove into the title question of &amp;#34;Do you really
need a degree for tech?&amp;#34;&lt;/p&gt;
&lt;p&gt;
The podcast did make me think a bit more about the title question and
we&amp;#39;ll get to that later but I wanted to riff on one point Lauren made
that struck a chord with me. After pivoting from a straight
engineering role to a DevRel role, she worked it so that she could
spend one quarter a year working on an eng team. I love this. Really
smart. It can only help a customer if their DevRel people keep their
tech skills sharp and are in the trenches with the developers and
likewise the transfer of knowledge the other way has got to help the
straight dev teams. I don&amp;#39;t think this could be a universal practice
though because I&amp;#39;ve met many DevRel people and while some, like
Lauren, clearly have the engineering chops, others I&amp;#39;ve met don&amp;#39;t, or
at least don&amp;#39;t yet have a strong enough tech background to be dumped
in to an eng team for a quarter and be productive.&lt;/p&gt;
&lt;p&gt;
Besides loving the idea, even with the limitations, it&amp;#39;s something I
thought about with respect to teaching. When I was working on putting
together my teacher certification programs I thought about tech
internships for teachers as a sabbatical solution or summer
enrichment. Teachers would be certified through a strong CS Ed program
and then later, when they are ready for a sabbatical or a summer
boost, and this would mostly be aimed at high school teachers, they
could do a tech internship set up for them. I even talked to a number
of tech leaders who seemed to like the idea.&lt;/p&gt;
&lt;p&gt;
It made all the sens in the world to me. A high school teacher in the
sciences might work in a lab during their summers but for a high
school CS teacher working with a CS researcher would be pretty
worthless. Very little, if anything would end up enhancing that
teacher&amp;#39;s in class performance when they were back to teaching. A tech
internship, on the other hand would up their software engineering
game, bring them up to speed with best and industry practices, and
even give them the platform to tell their kids about how &amp;#34;when they
were there.&amp;#34;&lt;/p&gt;
&lt;p&gt;
Unfortunately, I think that&amp;#39;s a program that will never come to
light or at least it won&amp;#39;t for a good long time. Now that we&amp;#39;re seeing
cert programs pop up, we&amp;#39;re getting what I feared. A few solid
programs and many more weak certification mills. Teachers going
through the latter will in no way be prepared for a tech internship
and their students will be the worse for it. For a teacher tech
internship program to exist, we&amp;#39;ll need to wait for the next few crops of
teachers to work their way to their licenses and hope that they select
the strong certification programs.&lt;/p&gt;
&lt;p&gt;
So, that was my big takeaway from the podcast but I do encourage you
to listen to the whole thing.&lt;/p&gt;
&lt;p&gt;
To get back to the title question of &amp;#34;is a degree necessary?&amp;#34; - that&amp;#39;s
a debate that&amp;#39;s gone on for a while now and it frequently focuses on
code school vs college. I think there are a couple of additional
wrinkles to add.&lt;/p&gt;
&lt;p&gt;
Are we talking about K12 –&amp;gt; Code school –&amp;gt; workforce or are we
talking about K12 –&amp;gt; college for non CS –&amp;gt; Code school –&amp;gt; &amp;gt;
workforce. These are two very different things. I recently wrote about
&lt;a href=&#34;https://cestlaz.github.io/post/tech-and-lib-arts/&#34;&gt;liberal arts&lt;/a&gt; education and how I feel that a BA in CS can be more
valuable than a BS in CS for many people and that the liberal arts, if
taken the right way by a student that&amp;#39;s ready for them can be a big
boon to our society as we try to get a handle on the ethical and AI
related issues that have been too long ignored since we decided that
education should only be for jobs.&lt;/p&gt;
&lt;p&gt;
The code school in some ways can be viewed as a lightweight CS minor
focused on industry so is it really different than someone doing an
undergrad in anything and taking enough CS for a job? Probably
not. The CS major probably gives the student more adaptability and
grounded base knowledge but then the CS major also requires a lot of
cruft only useful for the future PhD candidate.&lt;/p&gt;
&lt;p&gt;
On the other hand, K12 right to the code school, particularly given
the damage caused by common core, NCLB and the like will miss serious
opportunities on the &amp;#34;soft&amp;#34; side from college and yes, the humanities.&lt;/p&gt;
&lt;p&gt;
No answers here but more to think about.&lt;/p&gt;
&lt;p&gt;
So, once again, check out the &lt;a href=&#34;https://www.youtube.com/watch?v=agD0Q4vhi6w&#34;&gt;podcast&lt;/a&gt;. I&amp;#39;m going to have to look at
the other released episodes myself when I get a chance.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Using Emacs 81 Elfeed Webkit</title>
      <link>https://cestlaz.github.io/post/using-emacs-81-elfeed-webkit/</link>
      <pubDate>Mon, 26 Jun 2023 15:27:54 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/using-emacs-81-elfeed-webkit/</guid>
      <description>
&lt;p&gt;
Before I get to my elisp series, I thought I&amp;#39;d do a short video on
&lt;a href=&#34;https://github.com/fritzgrabo/elfeed-webkit&#34;&gt;elfeed-webkit&lt;/a&gt;. This was suggested to me by &lt;a href=&#34;https://irreal.org/blog/&#34;&gt;jcs&lt;/a&gt;. Even though I think
elfed-webkit is great - a mini-gamechanger for me, I thought that
there wasn&amp;#39;t enough for a video. Then I realized that in order to run
elfeed-webkit you need to have xwidgets enabled in your Emacs build. I
thought I&amp;#39;d make a video on how I build Emacs and enable features like
xwidgets and then I quickly set up elfeed-webkit.&lt;/p&gt;
&lt;p&gt;
If you use Emacs and reed rss/atom feeds, you really should check out
elfeed and if you use elfeed, then elfeed-webkit. It basically allows
elfeed to render feeds as the appear in a browser right from within Emacs.&lt;/p&gt;
&lt;p&gt;
Here&amp;#39;s the writeup with the video at the bottom.&lt;/p&gt;
&lt;div id=&#34;outline-container-headline-1&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-1&#34;&gt;
Building Emacs
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-1&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
I run Linuxmint which is an Ubuntu Linux derivative. To build Emacs
here, you have to first set up your machine with all the right
developer tools.&lt;/p&gt;
&lt;p&gt;
First, you have to go to your software manager and enable software
sources - I show how to do that in the video.&lt;/p&gt;
&lt;p&gt;
Then you have to install the build tools. I typed the follownig
commands.&lt;/p&gt;
&lt;div class=&#34;src src-sh&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  sudo apt update
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  sudo apt install build-essential
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  sudo apt build-dep emacs&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
The first line updates your package repo lists to reflect that you
turned on the source code repos and the next two install what you
need.&lt;/p&gt;
&lt;p&gt;
Next, you have to grab the Emacs source code. I show you how in the
video using git. Grab it from
&lt;a href=&#34;https://savannah.gnu.org/git/?group=emacs.&#34;&gt;https://savannah.gnu.org/git/?group=emacs.&lt;/a&gt; You can also download the
files old school from the same site.&lt;/p&gt;
&lt;p&gt;
In the video, I walk through the compile but the basics are:&lt;/p&gt;
&lt;div class=&#34;src src-sh&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  sh autogen.sh
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  ./configure --without-compress-install --with-native-compilation --with-json --with-mailutils --with-tree-sitter --with-xwidgets CC&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;gcc-10
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  make
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  sudo make install&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
If the ./configure line gives errors you might need some extra
libraries - I talk about that in the videos.&lt;/p&gt;
&lt;p&gt;
Also note that the ./configure line I used above includes extra
options that I use for tree-sitter - not needed for elfeed-webkit but
It&amp;#39;s another rabbit hole I went down as a result of reading Mickey
Peterson&amp;#39;s &lt;a href=&#34;https://www.masteringemacs.org/article/how-to-get-started-tree-sitter&#34;&gt;article&lt;/a&gt; on it.&lt;/p&gt;
&lt;p&gt;
Once we&amp;#39;ve got Emacs with the required features we can move to elfeed
webkit.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-2&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-2&#34;&gt;
Elfeed and Elfeed Webkit
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-2&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
I already wrote a series of posts with videos on elfeed. If you&amp;#39;ve
never used it, check it out - here are links to the older posts.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://cestlaz.github.io/posts/using-emacs-29-elfeed/&#34;&gt;https://cestlaz.github.io/posts/using-emacs-29-elfeed/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cestlaz.github.io/posts/using-emacs-30-elfeed-2/&#34;&gt;https://cestlaz.github.io/posts/using-emacs-30-elfeed-2/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cestlaz.github.io/posts/using-emacs-31-elfeed-3/&#34;&gt;https://cestlaz.github.io/posts/using-emacs-31-elfeed-3/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cestlaz.github.io/post/using-emacs-72-customizing-elfeed/&#34;&gt;https://cestlaz.github.io/post/using-emacs-72-customizing-elfeed/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The video shows how I set it up and also its use. Basically I just
copied the config right over from the elfeed-webkit repo but here it
is for convenience:&lt;/p&gt;
&lt;div class=&#34;src src-emacs-lisp&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  (straight-use-package &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;elfeed-webkit&lt;/span&gt;) &lt;span style=&#34;color:#75715e&#34;&gt;;; use straight to install&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;;; and old-school use-package to configure&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  (use-package elfeed-webkit
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        :straight
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        :demand &lt;span style=&#34;color:#75715e&#34;&gt;;; !&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        :init
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        (setq elfeed-webkit-auto-tags &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#39;&lt;/span&gt;(webkit comics))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        :config
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        (elfeed-webkit-auto-enable-by-tag)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        :bind (:map elfeed-show-mode-map
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;t&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; elfeed-webkit-toggle)))&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
So, all of this is in the video. Enjoy:&lt;/p&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/GGypKmrOf2I&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Working on a new short Emacs series</title>
      <link>https://cestlaz.github.io/post/elisp-series/</link>
      <pubDate>Sat, 17 Jun 2023 19:45:19 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/elisp-series/</guid>
      <description>&lt;p&gt;
It&amp;#39;s been quite some time since my last Emacs video. The lack of
content has been for two reasons. One was my overall feeling of
burnout and the other was that most of my videos involved looking at
new packages and I really wasn&amp;#39;t playing with anything new.&lt;/p&gt;
&lt;p&gt;
Now that I&amp;#39;ve started my retirement the burnout is gone and I&amp;#39;m
starting to think about what my next adventures will be. As I start
figuring out the big picture I thought I&amp;#39;d get back to some Emacs
content.&lt;/p&gt;
&lt;p&gt;
What&amp;#39;s on tap?&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m thinking about a short series on elisp. Now, I&amp;#39;m no elisp master -
I&amp;#39;ve only done enough to get by but I think that could make for some
nice beginner content and I&amp;#39;m sure I can count on the Emacs community
to (in a nice way) tweak my content towards best practices.&lt;/p&gt;
&lt;p&gt;
The plan is to start from the basics and ultimately write a few
interesting functions. Maybe a minor mode or two. Probably nothing
hugely useful but something that will illustrate the concepts. That
said, I want the examples to be at least a little useful and not
totally contrived.&lt;/p&gt;
&lt;p&gt;
I also figure that I probably won&amp;#39;t be doing laundry lists of
functions or going over all the different ways of doing things but
hopefully I can provide pointers and process so other elisp beginners
can find their way to the info they&amp;#39;ll need for their specific
projects.&lt;/p&gt;
&lt;p&gt;
So, stay tuned and look for more Emacs content to come.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>The anatomy of a bad teacher prep program</title>
      <link>https://cestlaz.github.io/post/bad-teacher-prep/</link>
      <pubDate>Thu, 15 Jun 2023 14:04:19 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/bad-teacher-prep/</guid>
      <description>&lt;p&gt;
Yesterday, someone posted &lt;a href=&#34;https://njctl.org/teacher-education/programs/computer-science-mstl/&#34;&gt;this link&lt;/a&gt;  to the various CS teacher groups
on Facebook. A Masters program in teaching CS. As I usually do, I took
a look. I&amp;#39;ve spoken before about the variation of quality in teacher
certification programs across all subjects. Some are great but many
(&lt;strong&gt;many&lt;/strong&gt;) are bad. I blame this largely on NCLB but that&amp;#39;s for another
day. For CS I&amp;#39;ve lamented that while I&amp;#39;d like to think that my program
is strong and I know there are programs like &lt;a href=&#34;https://catalog.siena.edu/preview_program.php?catoid=5&amp;amp;poid=1228&#34;&gt;Siena&amp;#39;s&lt;/a&gt; that are great
but there are others both in NY State and out that are quite frankly,
certificate mills. It appears to me that the NJCTL program is one of
those so I thought this was a good opportunity to dissect the program
as described by their web page.&lt;/p&gt;
&lt;p&gt;
First - two notes. On each of the posts on Facebook someone responded
calling the institutions accreditation into question - I don&amp;#39;t know about this one
way or another so I won&amp;#39;t speak to that.&lt;/p&gt;
&lt;p&gt;
Second - I&amp;#39;m only responding to the website based information. I
haven&amp;#39;t spoken to anyone in the program and therefore could be offbase
on some things. Still, I&amp;#39;ll be sharing my initial impressions and
opinions and barring any new information, well, you know.&lt;/p&gt;
&lt;p&gt;
Okay. Let&amp;#39;s go.&lt;/p&gt;
&lt;p&gt;
The program is online asynchronous. My program is online with a mix of
sync and async. I think in person is better for some classes but as
long as we&amp;#39;re the only adv cert program running in the state, we have
to be online to accommodate teachers who live or teach far away. I do
think that being entirely async is a problem for a teaching
program. The program seems to have online discussion groups But I
don&amp;#39;t think alone that&amp;#39;s enough.&lt;/p&gt;
&lt;p&gt;
Still, the format wasn&amp;#39;t really what attracted my attention when I
perused the program site.&lt;/p&gt;
&lt;p&gt;
The first class is &amp;#34;Secondary PSI Teaching Methods for Compuer
Science.&amp;#34; Okay, sounds good but since it&amp;#39;s cross listed for all the
other curricula areas they offer and the syllabus doesn&amp;#39;t seem to
mention any CS this is not a great start.&lt;/p&gt;
&lt;p&gt;
Next there&amp;#39;s a course in &amp;#34;learning and teaching programming in
Python.&amp;#34; The title is reminiscent to math ed classes like &amp;#34;Geometry
for math teachers&amp;#34; - when this is offered by an academic department
rather than as an education course it&amp;#39;s historically code for &amp;#34;watered
down math since real math might be too hard.&amp;#34; In this case, I wouldn&amp;#39;t
come down too hard since it&amp;#39;s an intro programming experience so it&amp;#39;s
probably fine.&lt;/p&gt;
&lt;p&gt;
Finally, phase 1 ends the &amp;#34;Learning and Teaching General Computing
Concepts.&amp;#34; Fine but it seems pretty shallow for a 3 credit graduate
level course and while it&amp;#39;s coded as a CS class (CSCI), if the program
was meatier, the relevant concepts would probably appear in other more
worthwhile courses.&lt;/p&gt;
&lt;p&gt;
Phase 2 has three courses. One is field experience and since the
syllabus being general for all subject areas I couldn&amp;#39;t really
determine if the class is legit or not. The other two Phase 2 classes
were basically &amp;#34;APCS-P for teachers&amp;#34; parts 1 and 2, three credits
each.&lt;/p&gt;
&lt;p&gt;
Okay, here we have a problem. First off, APCS-P isn&amp;#39;t a college level
class to begin with again we&amp;#39;re having a CSCI class about how to teach
CS with early high school CS content. Not good. It really rings of
weekend PD stretched out for 3 credits. If a teacher actually knows
their CS, they shouldn&amp;#39;t have to actually take a class in APCS-P.&lt;/p&gt;
&lt;p&gt;
Phase 3? More field experience with the same concerns and 2 semesters
of &amp;#34;APCS-A for teachers.&amp;#34; This might be worse. APCS-A content is early
level undergraduate CS that&amp;#39;s usually taught in 1 semester. Here it&amp;#39;s
taught as it is in HS over a full year.&lt;/p&gt;
&lt;p&gt;
By contrast, my program provides self study for very rudimentary
programming and our first course is APCS-A with all the other ones
being more advanced and all content. We then also have our methods and
curriculum classes on top of that. We don&amp;#39;t spend a year on APCS-P or
APCS-A but you can bet my grads teaching HS will be able to teach
either along with a wide range of other classes. &lt;/p&gt;
&lt;p&gt;
The final class is basically prep for the praxis exam so are they
saying that a good practice for a teacher prep program is a test prep
class for a standardized exam?&lt;/p&gt;
&lt;p&gt;
I couldn&amp;#39;t find out more but these were my personal impressions. I
looked at all the syllabi and all had faculty listed on the top but I
sure hope those aren&amp;#39;t the actual faculty because all but I think 1
don&amp;#39;t appear to have any CS background (based on looking them up on
LinkedIn).&lt;/p&gt;
&lt;p&gt;
Before going on, I want to state that I&amp;#39;m just sharing my impressions
for information - this program doesn&amp;#39;t compete with my program since
it&amp;#39;s not NY State approved and besides, I just retired so it&amp;#39;s not
technically my program anymore anyway.&lt;/p&gt;
&lt;p&gt;
Continuing, I thought this was worth writing up because there are
plenty of other programs like this and including some in NY State (and some that
I think, shockingly, the state approved as certification
programs). These are programs to look out for. It&amp;#39;s also CS Ed going
the way of all Ed.&lt;/p&gt;
&lt;p&gt;
When I got my math certification, I needed a certain number of math
credits and back then there wasn&amp;#39;t, or at least, I wasn&amp;#39;t aware of the
&amp;#34;math ed&amp;#34; alternatives. When I got my license in NY City, I had to
face a &amp;#34;board of examiners&amp;#34; - a principal, a math chair, and some math
teachers who could grill me both on math and how to teach it. A couple
of years the city stopped certifying teachers and just followed the
state&amp;#39;s lead. After that NCLB was enacted and all of a sudden instead
of having to actually know your content you could complete a &amp;#34;math
ed,&amp;#34; &amp;#34;sci ed,&amp;#34; or other &amp;#34;ed&amp;#34; program. This opened the door for severely
watered down content. In fact, before I got my Masters (in straight CS from the
Courant Institute at NYU), I had colleagues list out programs where I
could get my masters and my 30 above (for increased salary). Everyone
knew which programs you&amp;#39;d learn stuff but had to work in and which
ones were basically pay for the credits, sit back, and relax (and
yes, I did in fact take a couple of those courses as well to round out
my 30 above).&lt;/p&gt;
&lt;p&gt;
It seems that we&amp;#39;re going down the same road with CS Ed.&lt;/p&gt;
&lt;p&gt;
If you&amp;#39;re a teacher seeking to add CS certification or even take
classes to improve your CS knowledge or pedagogical content knowledge,
buyer beware. There are some great classes out there and great
programs but there&amp;#39;s also a lot of low level PD masquerading as deep
content.&lt;/p&gt;
&lt;p&gt;
Sorry if this pisses some people off but you know me, I&amp;#39;m New York&amp;#39;s
resident CS curmudgeon. If I don&amp;#39;t rant about these things, who will?&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Tech and the liberal arts</title>
      <link>https://cestlaz.github.io/post/tech-and-lib-arts/</link>
      <pubDate>Wed, 14 Jun 2023 07:12:43 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/tech-and-lib-arts/</guid>
      <description>&lt;p&gt;
Last night, I gave a talk to this years &lt;a href=&#34;https://hackny.org/&#34;&gt;HackNY&lt;/a&gt; fellows. It was a lot
of fun. I was originally going to speak about liberal arts and tech
education but I was asked to do something more on my professional
journey as a teacher so I did that. Had a great time but figured I&amp;#39;d
write about the liberal art stuff here anyway.&lt;/p&gt;
&lt;p&gt;
Over the last few months, I&amp;#39;ve noticed a surge in social media pushing
the humanities in CS education. This has mostly been a reaction to the
recent AI craze, chatGPT and related ethical concerns. This doubles
down on the ethics based push for more humanities resulting from all
of the plain as day ethic issues in the tech world.&lt;/p&gt;
&lt;p&gt;
I say surge but it&amp;#39;s all relative. I haven&amp;#39;t seen major initiatives to
change CS programs or anything like that, just more buzz.&lt;/p&gt;
&lt;p&gt;
Personally, I&amp;#39;ve been on the humanities bus for a long time. Going all
the way back to when I went to a liberal arts school as opposed to an
engineering school. Here, I&amp;#39;m not going to talk about the humanities
specifically with respect to ethics or ai, the issues du jour, but rather
what I&amp;#39;ve always spoken out on - their value to a student following a
tech path. I&amp;#39;m also not going to talk about the teaching side of
things. I&amp;#39;ll save that for another day.&lt;/p&gt;
&lt;p&gt;
On one side, a side that&amp;#39;s been covered for years is the whole cross
and interdisciplinary thing. Even before CS was big in K12 there were
plenty of efforts of including STEM in humanities classes and the
humanities in STEM classes. Makes sense. The whole silo thing that
we&amp;#39;ve evolved into works in some cases but is lacking in so many
more. For tech, the truth, contrary to most college CS programs is
that most CS majors will apply CS to some other field and not go on to
get PhDs. This means that having CS students with deep exposure to
other fields is a good thing. It&amp;#39;s also easy - opportunities abound
just by choosing the right problems to explore. One I love is the
&lt;a href=&#34;https://www.netlogoweb.org/launch#https://www.netlogoweb.org/assets/modelslib/Sample%20Models/Biology/Termites.nlogo&#34;&gt;termite gathering&lt;/a&gt; model in NetLogo. On it&amp;#39;s own, it explores just
that - termites gathering woods as an emergent behavior. Beyond that,
though, I&amp;#39;ve read articles describing the same model as an exploration
of things as widely disparate as galaxy formation and wealth distribution.&lt;/p&gt;
&lt;p&gt;
The other side, and more interesting one as far as I&amp;#39;m concerned is
the value of a liberal arts education to a CS major ignoring the
above interdisciplinary utility. Disclaimer- I&amp;#39;m going to talk a bit
about the differences in a liberal arts education vs a more
engineering one (for lack of a better term). This does &lt;strong&gt;not&lt;/strong&gt; mean that
individuals educated in one way are necessarily in any way lacking in
the other. That comes down to the individual.&lt;/p&gt;
&lt;p&gt;
I was once talking to two of my closest friends, independently about
this. Changing names to ensure privacy, let&amp;#39;s call my friend educated
in a liberal arts school Liberal Arts Larry and my engineer friend,
Engineering Ed.&lt;/p&gt;
&lt;p&gt;
Talking about his education, Ed was able to pinpoint where he learned
specifically useful things for his career. &amp;#34;I really got Fourier
Transformations when a Took blahblahblah&amp;#34; or &amp;#34;automata really made
sense after I took compilers.&amp;#34;&lt;/p&gt;
&lt;p&gt;
Larry on the other hand described his experience by saying &amp;#34;I really
can&amp;#39;t say anything specific in any of my core (liberal arts) courses
but as a whole they&amp;#39;ve shaped who I am today and at some fundamental
level they inform so many of my decisions.&amp;#34;&lt;/p&gt;
&lt;p&gt;
Interesting difference, at least between these two. Also, I would be
remiss if I didn&amp;#39;t mention that Ed is very well read in the classics,
and knowledgeable in music and the arts and on the other side Larry is
as strong technically as anyone I know. At the same time, both were CS
majors and both have been very successful over their careers.&lt;/p&gt;
&lt;p&gt;
We can drill down more on Larry&amp;#39;s statement to really think about
how liberal arts, if taken by a student ready for them, shine. High
School students frequently tell me they want to work on games. They
think they need all the science and math, and to a certain extent,
they might, but I ask them, what is a game really? It&amp;#39;s a
story. Playing a game is being a player in a story. Every game I can
think of, save one &lt;sup class=&#34;footnote-reference&#34;&gt;&lt;a id=&#34;footnote-reference-1&#34; href=&#34;#footnote-1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; tells a story. Story telling is liberal
arts. Other aspects that might influence a young individual embarking
on their tech career? How about psychology - how people
thing. Certainly a boon in understanding your users and pitching a
solution. In a similar vein, anthropology. Okay, maybe not the bone
digging side of physical anthro but certainly cultural anthropology -
how groups of people live - customs, cultures, taboos
etc. Understanding people is not part of a CS curriculum but it&amp;#39;s
layered all over the humanities. Of course literature and writing
quite literally is story telling and art and related fields as well
and even history, particularly if it&amp;#39;s not just a collection of facts
but more  cause and effect based. &lt;/p&gt;
&lt;p&gt;
In short, at least in my opinion, unless you&amp;#39;re really going down the
engineering side rabbit hole a liberal arts education can be super
beneficial to students moving into tech and so many dismiss BA
offering schools in favor of a BS. This isn&amp;#39;t even getting to the
ethics and AI side of things but, as I said up top - that&amp;#39;s for another post. &lt;/p&gt;
&lt;p&gt;
The catch with all of this, though, is that the student must be ready
for a liberal arts education. Our society pushes really hard on the
&amp;#34;college is for jobs only&amp;#34; button and while I&amp;#39;ve argued that a BA can
in fact be better for a tech career in many cases many dismiss the
idea. How many students look for the easiest distribution requirements
and take their liberal arts classes in a vacuum - only about the class
itself as opposed to how it can grow them as a person. In my
experience, most colleges don&amp;#39;t help matters with professors self
silo-ing their subjects making matters worse. If a student doesn&amp;#39;t
approach  a liberal arts education with the right attitude and
investment, much of the value can be lost.&lt;/p&gt;
&lt;p&gt;
Still, I hope that the pendulum will swing and more people will see
how a tech education without the humanities is only half an
education. I&amp;#39;ve been talking about it for years. I hope others start
to do the same.&lt;/p&gt;
&lt;div class=&#34;footnotes&#34;&gt;
&lt;hr class=&#34;footnotes-separatator&#34;&gt;
&lt;div class=&#34;footnote-definitions&#34;&gt;
&lt;div class=&#34;footnote-definition&#34;&gt;
&lt;sup id=&#34;footnote-1&#34;&gt;&lt;a href=&#34;#footnote-reference-1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;
&lt;div class=&#34;footnote-body&#34;&gt;
&lt;p&gt;Tetris&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>CS and the liberal arts - my HackNY talk - a preview</title>
      <link>https://cestlaz.github.io/post/cs-liberal-arts-preview/</link>
      <pubDate>Mon, 05 Jun 2023 08:03:11 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/cs-liberal-arts-preview/</guid>
      <description>&lt;p&gt;
So, I went for my walk yesterday and indeed was able to settle on a
topic for my HackNY talk next week.&lt;/p&gt;
&lt;p&gt;
HackNY is, for lack of a better description, a support system for
tech interns in NYC. It started 12 years ago. Back then, a college
student would apply to HackNY. If accepted, they would be matched with
a NY based tech startup and they&amp;#39;d be housed, I believe in the NYU
dorms. HackNY would provide a number of common activities beyond
communal living - talks and other events. Big tech companies like
Google were already offering housing, guest talks, and special events
both  social and technical. HackNY sort of did this across the nY
tech startup space. You&amp;#39;d intern at whatever small company that could
provide a great internship experience and HackNY provided the out of
office side.&lt;/p&gt;
&lt;p&gt;
It also served as a recruitment and advertising tool for NY Tech which
was just developing back then.&lt;/p&gt;
&lt;p&gt;
Tech in NY and the startup scene is very different now and as a
result, according to the HackNY
website, the program&amp;#39;s changed since then - they still provide
the housing, talks and events but no longer provide the
internships. The student must find that on their own prior to starting
with HackNY over the summer. It could be awesome, with HackNY
providing a nexus for these students who might otherwise be floating
without much support - particularly those interning at very small
companies or it could be that something&amp;#39;s lacking without HackNY
curating the internship experiences. We&amp;#39;ll see. &lt;/p&gt;
&lt;p&gt;
Anyway, what should I, a career teacher, have to say to these
students. Sure, I have a unique view - I&amp;#39;ve worked in industry and I
think I&amp;#39;m one of the few people out there who&amp;#39;s both strong as a
teacher and technically who&amp;#39;s experienced in working with populations
from elementary school all the way well into the workplace but this
isn&amp;#39;t a room of aspiring teachers.&lt;/p&gt;
&lt;p&gt;
These kids will still be in college next year, and maybe for three
more years. I thought, maybe I should talk about the liberal
arts. Sure, Humanities in tech has gotten a little buzz in the last
few years, first due to ethical issues and now because of AI but I&amp;#39;ve
been talking about why the liberal arts are important for tech majors
for far longer.&lt;/p&gt;
&lt;p&gt;
So, I outlined a talk on my walk and now I have to flesh it out. Sure,
I&amp;#39;ll talk a bit about the education scene, I think as New York&amp;#39;s CS
Education Curmudgeon I have to complain about that. I&amp;#39;ll also talk
about the ethics and AI issues but the focus will be on something more
fundamental. How CS relates to the liberal arts from the humanities
point of view and how studying liberal arts can enhance a tech person.&lt;/p&gt;
&lt;p&gt;
Devorah and I will be heading to Philadelphia tomorrow for a brief
vacation (what is it, we won second place or something in a
contest &lt;sup class=&#34;footnote-reference&#34;&gt;&lt;a id=&#34;footnote-reference-1&#34; href=&#34;#footnote-1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; but then I&amp;#39;ll
flesh it out. If the talk goes well, I&amp;#39;ll write it up sometime
afterwards. If not, I&amp;#39;ll probably still write it up but it&amp;#39;ll probably
be more humorous. &lt;/p&gt;
&lt;p&gt;
&lt;sup class=&#34;footnote-reference&#34;&gt;&lt;a id=&#34;footnote-reference-1&#34; href=&#34;#footnote-1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;You know the old joke, the prize for the sweepstakes was
one week in Philladelphia, second prize, two weeks :-)&lt;/p&gt;
&lt;div class=&#34;footnotes&#34;&gt;
&lt;hr class=&#34;footnotes-separatator&#34;&gt;
&lt;div class=&#34;footnote-definitions&#34;&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Walks and Lesson Planning</title>
      <link>https://cestlaz.github.io/post/walks-and-planning/</link>
      <pubDate>Sun, 04 Jun 2023 10:18:47 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/walks-and-planning/</guid>
      <description>&lt;p&gt;
Coming in from my run this morning I had a thought. When I&amp;#39;m not
otherwise doing anything in particular, I frequently go for a walk at
some point during the day. Usually two to five miles.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve got a few standard routes - the Union Square Green Market and/or
Kalustyans, both of which usually result in some food related
purchase, walking down to the village and up the river, or similar but
starting by going north.&lt;/p&gt;
&lt;p&gt;
Today, I realized that my recent walks have been a little
different. For the past however many years, my mind was frequently
occupied during these times with lesson planning. Not just the lesson,
but I&amp;#39;ll run through the pace in my head, motivations, activities,
alternative paths, when I was teaching at Stuy, the differences
between different sections of the same class. I&amp;#39;d also project a bit
into what could be next in case things ran fast. Basically getting a
handle on what I&amp;#39;d be doing in my next class.&lt;/p&gt;
&lt;p&gt;
Of course, I didn&amp;#39;t always do this but it was a frequent use of my
walk and think time.&lt;/p&gt;
&lt;p&gt;
I realized today that I don&amp;#39;t have any more lessons to prepare. I
won&amp;#39;t be officially retired for a few more months between how my
contract works and terminal leave but I&amp;#39;m basically 99% done with my
Hunter obligations and 100% done with my teaching obligations.&lt;/p&gt;
&lt;p&gt;
This realization didn&amp;#39;t feel bad nor did it feel good. Just a little
odd.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ll probably go out for a walk in a bit today. The weather&amp;#39;s nice and
we don&amp;#39;t have any family thing planned. For today, I still though have
something to mull over. I&amp;#39;m supposed to be giving a talk to the
current HackNY cohort in a little over a week and to be honest, I have
absolutely no idea what to speak about&lt;/p&gt;
&lt;p&gt;
Maybe in my wanderings my mind will come up with something.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Worst Practices</title>
      <link>https://cestlaz.github.io/post/worst-practices/</link>
      <pubDate>Tue, 30 May 2023 12:35:12 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/worst-practices/</guid>
      <description>&lt;p&gt;
I stumbled upon an awesome new YouTube channel for programmers - &lt;a href=&#34;https://www.youtube.com/@WorstPractices&#34;&gt;Worst
 Practices&lt;/a&gt;. Specifically, Worst Practices in Software
 Development. The tagline is &amp;#34;we&amp;#39;ve all heard enough about everyone&amp;#39;s
 best practices in software development, we&amp;#39;re here to talk about
 … worst practices.&amp;#34;&lt;/p&gt;
&lt;p&gt;
 I&amp;#39;ve written about &amp;#34;best practices&amp;#34; for teaching &lt;a href=&#34;https://cestlaz.github.io/post/research-vs-practice/&#34;&gt;before&lt;/a&gt; - I don&amp;#39;t
 believe in them - I believe in practices that are good under certain
 circumstances. Maybe in the majority of circumstances but there&amp;#39;s no
 silver bullet.&lt;/p&gt;
&lt;p&gt;
 In software development, it&amp;#39;s similar. Even though we call certain
 things best practices, there&amp;#39;s no such thing. There&amp;#39;s the practice
 but that has to be tempered with the circumstances - people, project,
 environment, deadlines and more. Sounds similar to the situation with
 teaching.&lt;/p&gt;
&lt;p&gt;
 Now, specifically for the video series, the presented &amp;#34;worst
 practices&amp;#34; are things that we all do or have done as software
 developers - debugging with print statements, not reading
 documentation, using an under-powered editor or not using your
 editor/ide &amp;#34;correctly&amp;#34; etc. Just like in teaching, a frowned upon
 practice can be the right one under the right circumstances. In one
 video, Leah Culver talks about print statement debugging. It&amp;#39;s
 frequently the most sensible and efficient way to go rather than
 using a debugging tool. Other times, the tool is betetr. As Brian
 Kernighan said:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The most effective debugging tool is still careful thought, coupled
with judiciously placed print statements.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Julia Evans doesn&amp;#39;t &amp;#34;read the documentation&amp;#34; but I&amp;#39;m guessing her
approach of using a code sample and building from there has worked for
her over the years.&lt;/p&gt;
&lt;p&gt;
Thea Flowers doesn&amp;#39;t use package managers. Maybe things are better
now, but I&amp;#39;ve been burned with paths and versioning enough times over
the years to certainly get that one.&lt;/p&gt;
&lt;p&gt;
Anyway, the series is short right now. Eight videos of about five
minutes each and they&amp;#39;re great. Lots of fun and good material to think about.&lt;/p&gt;
&lt;p&gt;
As a programmer, I 100% endorse the series. As a teacher, I do as
well.&lt;/p&gt;
&lt;p&gt;
Here&amp;#39;s the link: &lt;a href=&#34;https://www.youtube.com/@WorstPractices&#34;&gt;&lt;a href=&#34;https://www.youtube.com/@WorstPractices&#34;&gt;https://www.youtube.com/@WorstPractices&lt;/a&gt;&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>A model district for introducing CS education</title>
      <link>https://cestlaz.github.io/post/model-district/</link>
      <pubDate>Fri, 26 May 2023 06:49:38 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/model-district/</guid>
      <description>&lt;p&gt;
One of the highlights of this week has been finally &lt;a href=&#34;https://cestlaz.github.io/post/certified-teacher-meetup/&#34;&gt;getting together&lt;/a&gt;
with a large number of the teachers in my certification
program. Another was finally being able to once again attend a CSTA-NY
meeting as they&amp;#39;ve almost always conflicted with my teaching schedule
over the past couple of years.&lt;/p&gt;
&lt;p&gt;
The reason I scheduled my meetup back to back with the CSTA-NY meetup
was because of another highlight. Five of my Advanced Certificate
teachers are from the Dryden and Groton school districts, a little
east and northeast of Cayuga lake near Ithaca. The three Dryden
teachers were able to come for a visit so I scheduled my meetup so
that the Dryden folk could attend both and meet a whole bunch of new
CS teachers.&lt;/p&gt;
&lt;p&gt;
How this all happened should be a model for other districts across the
state.&lt;/p&gt;
&lt;p&gt;
A couple of years ago I got a cold email from someone in the Dryden
school district. They were asking about my advanced certificate
program. Having seen that New York state recently published its
Computer Science standards and had recently created a certification,
they knew that they would need to deal with the subject area in some
way or shape. They knew that finding a new computer science teacher
would be very difficult as none of the colleges offering teacher
certification programs in the area offered CS Ed. They also knew that
even if they found a new teacher and were able to hire them, that
would be one lone teacher and a new one at that being solely
responsible for the districts direction in computer science.&lt;/p&gt;
&lt;p&gt;
The could also do what many others have done - send a couple of
teachers for short form code.org or similar training. Well, you all
know my feelings on that.&lt;/p&gt;
&lt;p&gt;
So, what did they decide to do?&lt;/p&gt;
&lt;p&gt;
They saw that I offered an advanced cert program - a way to recertify
some of their current teachers. They were working on a writing an NFS
grant proposal to support CS education and were thinking about
including a funding request to send some of their teachers to such a
program.&lt;/p&gt;
&lt;p&gt;
It would have to be my program since it was and still is the only such
program running in the state. We spoke, they liked what I was selling
program wise and so worked to include it in their grant. I tried to
lend whatever support I could.&lt;/p&gt;
&lt;p&gt;
In the mean time, I also had to make sure my program remained remote
accessible - something I was already fighting for since it can be very
difficult for a working teacher, particularly one in a transportation
desert to get to Hunter after a long day. I felt we had a
responsibility to those local but distant teachers as well as the rest
of the teachers across the state. My administration agreed and we
remained remote.&lt;/p&gt;
&lt;p&gt;
So, by Spring 2022, Dryden, who had teamed up with neighboring Groton
were awarded the grant and we got five teachers into my cert
program. All five have been great and it&amp;#39;s been really healthy to add
a handful of non NYC teachers to our already solid mix of current K12
teachers and aspiring masters students.&lt;/p&gt;
&lt;p&gt;
This past fall, Devorah and I drove up to their region for a small
Fall vacation and while there I was able to visit the Dryden High
School and spend time with both the teachers and the
administration. As part of their grant, the three Dryden teachers were
able to come down to the city. The two Groton teachers couldn&amp;#39;t attend
due to scheduling conflicts. The three came down on Wednesday and were
able to attend our &lt;a href=&#34;https://cestlaz.github.io/post/certified-teacher-meetup/&#34;&gt;meetup&lt;/a&gt; and connect with other CS
teachers. Thursday, I partnered each with a local CS teacher who was
doing something similar. One of the Dryden teachers was interested in
tech/robotics to go with the CS, another also an art teacher and the
third a generalist.&lt;/p&gt;
&lt;p&gt;
This was followed by the CSTA-NY meetup which inspired them to see
about either getting involved in their closest CSTA chapter or if not,
forming a new one. This was cool to hear.&lt;/p&gt;
&lt;p&gt;
Now, this morning, they&amp;#39;ll be visiting my old haunts at Stuyvesant to
observe a couple more classes and meet a few more teachers before
trying to beat the holiday traffic on their way back north.&lt;/p&gt;
&lt;p&gt;
Moving forward, Dryden and Groton now have a combined 5 qualified,
certified CS teachers and can now design programs and opportunities
that best suit their student&amp;#39;s needs as opposed to just copying the
curriculum du jour. I&amp;#39;d be delighted if they include me in that
process but if they do or don&amp;#39;t, Dryden and Groton are in great shape
for CS education moving forward.&lt;/p&gt;
&lt;p&gt;
Other districts should follow their lead.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>A meetup of NY&#39;s first certified CS teachers</title>
      <link>https://cestlaz.github.io/post/certified-teacher-meetup/</link>
      <pubDate>Thu, 25 May 2023 07:32:39 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/certified-teacher-meetup/</guid>
      <description>&lt;p&gt;
Finally, after three years, we had the opportunity for the
participants in my (Hunter&amp;#39;s) CS Teacher Certification program to get
together in person. Last year, a handful of the cohort 2 members had a
dinner but never a big gathering across the cohorts.&lt;/p&gt;
&lt;p&gt;
Not everyone could make it, so yesterday, we had close to 50 teachers
out of our total 100 across the three cohorts gather at Yext in the
Meatpacking district to meet each other, talk shop, and celebrate
being New York State&amp;#39;s first certified CS teachers.&lt;/p&gt;
&lt;p&gt;
Now, of course, meeting in person as opposed to Zoom, as we have been
these past three years has some obvious advantages but one that never
fails to amuse me is that we all now know how tall everyone is.&lt;/p&gt;
&lt;p&gt;
On Zoom, particularly if you see a screen with someone you know,
everyone gets sized with respect to that person. If I see JonAlf, my
co-teacher this past semester on the screen and he&amp;#39;s about my size,
everyone else, is relative to his size allowing for camera position.&lt;/p&gt;
&lt;p&gt;
Quite a surprise for me on for a few people.&lt;/p&gt;
&lt;p&gt;
Okay, ultimately that&amp;#39;s not important but I did geta chuckle out of
it.&lt;/p&gt;
&lt;p&gt;
A highlight of the event was that three of our teachers from the
Dryden School district - a little east of Cayuga lake came
down. They&amp;#39;re in town today and tomorrow to visit the CS classes of
some of our NY city teachers and we scheduled this meetup so they
could meet their classmates and the rest of our teachers.&lt;/p&gt;
&lt;p&gt;
I guess that&amp;#39;s really what I was reminded of - meeting other teachers,
pulling them into your network can be so powerful. Many of the
teachers last night commented on that. Yes, they commented on the
content of the program - the CS, the methods, everything we did in the
classes but they also commented on how they were &amp;#34;it&amp;#34; in their
school. The lone CS teacher flying solo. Being in the program not only
introduced them to other teachers in the same boat but over the year
of the program it built relationships through common experiences and
the in person meetup just helped cement the relationships.&lt;/p&gt;
&lt;p&gt;
Moving forward, they&amp;#39;ll always have the content but now they&amp;#39;re all in
a network of CS teachers that they legit know, as opposed to just
seeing at events here and there and I think that&amp;#39;s going to be a
big impact of the program I built moving forward.&lt;/p&gt;
&lt;p&gt;
What&amp;#39;s next? Well, since I&amp;#39;m retiring, one thing I think I might do,
assuming my friends at companies like Yext and Google and others
provide space and food is get back to running the PD sessions that I
ran prior to covid through my non-profit. The teachers last night were
really enthused about that idea. That&amp;#39;ll probably be a good way of
keeping the community together and able to support each other along
with our slacks and emails.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Grading And Ungrading</title>
      <link>https://cestlaz.github.io/post/grading-and-ungrading/</link>
      <pubDate>Thu, 18 May 2023 14:12:59 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/grading-and-ungrading/</guid>
      <description>&lt;p&gt;
Classes are done and all that&amp;#39;s left is the grading. Grading is
something I truly hate. Hating grading actually had a lot to do with
my starting to build CS at Stuy (&lt;a href=&#34;https://cestlaz.github.io/post/quarter-century-courses/&#34;&gt;story here&lt;/a&gt;). I&amp;#39;m glad it&amp;#39;s my last
grading rodeo but even as I work through assignments for the final
time after 33 years I still have many questions about the best way to
do it.&lt;/p&gt;
&lt;p&gt;
Should we give tests or be project based? What about deadlines? Work
alone or in a group? Should students be able to update solutions after
getting back an initial grade? How many assessments? And of course,
how important are grades anyway.&lt;/p&gt;
&lt;p&gt;
A recent trend has been to move to ungrading or it&amp;#39;s relative
specification grading. There are many more variants and names but the
idea, described here in terms of a programming assignment for
convenience, is that a student project must check off certain things -
to be awarded an A grade. The student can update the project over time
and often resubmit it after an initial grading. If a student checks
off enough items on enough assignments, they get an A for the term.&lt;/p&gt;
&lt;p&gt;
As a coarse example, in my algorithms class, I gave 8 assignments. If I
said that any student that completes 4 out of 5 of the &amp;#34;deliverables&amp;#34;
for each assignment they get an A. Alternatively if the get 5 out of 5
on, let&amp;#39;s say 5 assignments  and 3 out of 5 on the other two they can
also get an A. Then variations ensue.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m not actually doing that this semester. I have 8 projects, each has
a hard deadline that can be extended upon request. Each gets a
holistic grade and then I do a hard average. The vast majority of my
students will be getting an A or A- as a result with most earning an A.&lt;/p&gt;
&lt;p&gt;
Now, I like the idea of ungrading but I have some real concerns. First
though, we have to discuss why grades are, or are not important.&lt;/p&gt;
&lt;p&gt;
In many classes, truth be told, they aren&amp;#39;t important. I&amp;#39;d argue that
this is true for most advanced CS classes and CS electives. Companies
might use GPA as a first cut for interviews but really most look at
resumes and a student transcript is not what&amp;#39;s used but rather the
technical interview, which is flawed in its own ways. I guess grad
school might care more about specific class grades but that&amp;#39;s really a
very small minority of students and so is the tail wagging the dog.&lt;/p&gt;
&lt;p&gt;
Grades can be important as a baseline of information in classes though
that have follow ups. If a student got an A or a B in data structures
it can inform the algorithms teacher about what to expect from those
students vs a student who squeaked by with a C. On the other hand, do
college instructors actually look at that information?&lt;/p&gt;
&lt;p&gt;
At the high school level, teachers will and it can be useful. Not as
useful as what often happens when teachers have time together and can
compare notes. I used to trade class lists with colleagues and we&amp;#39;d
share info. We were all perceptive enough to know that the previous
teacher might have some biases so we wouldn&amp;#39;t hold anything against a
student but it was helpful to know where kids had challenges and what
were some tendencies. Grades can do that a little but discussion works
better.&lt;/p&gt;
&lt;p&gt;
I didn&amp;#39;t know where I&amp;#39;d end up when I started writing this but from
the importance of grades side, I&amp;#39;m thinking they&amp;#39;re not very important
in the greater scheme of things other than pass/fail with the idea
that pass means you know what you need to know for the next course.&lt;/p&gt;
&lt;p&gt;
At Stuy, grades were 55, 65 to 90 in increments of 5 then 90 to 100
and culturally grades were very important. For our AP classes and
higher in CS I&amp;#39;d always say that we want to reward a student who&amp;#39;s
trying to do and learn more so be generous with grades. In our intro
class, the feeder to our AP and advanced classes, I&amp;#39;d say to my
teachers &amp;#34;if you award under a 90 you&amp;#39;re saying that the student will
struggle in our APCS class. If you award a 90 - 95 you&amp;#39;re saying the
student will do well and if you award 95 or above, the student will
breeze through the class.&amp;#34; That was the purpose of grades so a year
later when the teacher was unavailable we could still assess the kid
for placement.&lt;/p&gt;
&lt;p&gt;
So, one can be lose with grades and take away a fair amount of
pressure but there are other issues with ungrading.&lt;/p&gt;
&lt;p&gt;
One issue involves deadlines. I like the idea of ungrading but I also
think that deadlines are important. While frequently people opposed to
deadlines will say they&amp;#39;re not really important - real world projects
are frequently delivered late, there are plenty of times where
deadlines are real - try getting to your plane after they close the
boarding gate. Doc says come back in 6 months to check that thing and
you don&amp;#39;t for 18, you might be in trouble. Miss that college
application deadline and you&amp;#39;re probably SOL. Some deadlines are
flexible. Many are not and in any event, I want my former students to
be the ones who deliver on time. Open deadlines are also bad for
students who need more structure. Instructors who favor unlimited
assignment submission and re submission are only catering to students
who thrive under those circumstances. Also, students who would benefit
from deadlines can also fall behind and experience a snoball effect in
cumulative classes - this is not good. Finally, not having deadlines
results in a massive workload increase on teachers.&lt;/p&gt;
&lt;p&gt;
At the end of the day, deadlines aren&amp;#39;t bad and can be good and
important but you need to be reasonable and flexible. I talk about
what I do &lt;a href=&#34;https://cestlaz.github.io/post/deadlines-and-commitments/&#34;&gt;here&lt;/a&gt; and &lt;a href=&#34;https://cestlaz.github.io/post/late-assignments&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;
Another issue with ungrading. and this might be specific to CS and
programming classes is that when students can complete things any time
in any way they might not really learn what they have to learn (with
of course, the ultimate bad end of this being outright cheating). This
happened with a small number of teachers in my program. As
professionals, they were left to do certain things on their own for
prework and we followed very open deadlines and specification grading
for our summer courses. Some students benefited from this, others were
take it or leave it, there were a few, though, who were able to finish
what had to be finished but since it was as flexible as it was, and
through the program they saw more code samples, similar code samples,
etc., at the end of the day they completed what they needed to
complete but didn&amp;#39;t really learn what we wanted them to learn.&lt;/p&gt;
&lt;p&gt;
In reality, this wasn&amp;#39;t a huge deal for my program
(although one or two teachers actively took advantage of the lose
policy and while it helped some legitimately and I&amp;#39;m glad for that,
it pisses me off when people take advantage) since the CS we cover is
far and away more than the teachers will need but it still didn&amp;#39;t sit
well with me. I wasn&amp;#39;t going to change policy for the summer session
mid stream but it ended up not giving them as much as it should have.&lt;/p&gt;
&lt;p&gt;
I know other places are trying to implement versions of ungrading and
I&amp;#39;m guessing they&amp;#39;re also seeing mixed results if they track students
to later classes. Unfortunately, all the experiments I know of are in
&amp;#34;elite&amp;#34; institutions. I&amp;#39;d be curious if anyone&amp;#39;s trying anything in a
mid-performing public high school or mid tier (perception wise)
college.&lt;/p&gt;
&lt;p&gt;
So, now that I&amp;#39;ve avoided grading for the duration of this post, I
should probably get back to work and finish looking at those last sets
of assignment. &lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>