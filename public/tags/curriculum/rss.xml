<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>curriculum on C&#39;est la Z</title>
    <link>https://newblog/tags/curriculum/</link>
    <description>Recent content in curriculum on C&#39;est la Z</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 14 Mar 2022 12:17:11 -0400</lastBuildDate><atom:link href="https://newblog/tags/curriculum/rss.xml" rel="self" type="application/rss" />
    <item>
      <title>Truth Tables and Logic Gates - where to teach them.</title>
      <link>https://newblog/post/truth-tables/</link>
      <pubDate>Mon, 14 Mar 2022 12:17:11 -0400</pubDate>
      
      <guid>https://newblog/post/truth-tables/</guid>
      <description>A question was raised on Facebook last week asking about teaching truth tables and logic gates in an intro class in programming Python. The teacher who posed the question certainly appreciates the value of these topics but was wondering both how best to motivate the topics and if they were really appropriate in an intro programming course as opposed to, say, and intro computer architecture or electronics course or even a more general intro CS survey course.</description>
    </item>
    
    <item>
      <title>Do you need to know assembly to be a computer scientist?</title>
      <link>https://newblog/post/assembly/</link>
      <pubDate>Wed, 19 Jan 2022 06:47:18 -0400</pubDate>
      
      <guid>https://newblog/post/assembly/</guid>
      <description>Another recent discussion online asked &amp;#34;do you need to know assembly language to be a computer scientist?&amp;#34;
Sides quickly formed. On one side, it was a strict requirement. Some going so far as saying you had to start with it or at worst a language like C. On the other side you had people claiming that it&amp;#39;s wholly unnecessary for most CS graduates like many of the classes we require of a CS major (I&amp;#39;m looking at you Calc II and beyond).</description>
    </item>
    
    <item>
      <title>What is a Syllabus and why does it matter?</title>
      <link>https://newblog/post/whats-a-syllabus/</link>
      <pubDate>Fri, 14 Jan 2022 07:14:35 -0400</pubDate>
      
      <guid>https://newblog/post/whats-a-syllabus/</guid>
      <description>Over in the Facebook CS Ed groups there was a discussion of the forthcoming code.org APCS-A curriculum. As far as I can tell, the curriculum isn&amp;#39;t actually available yet so I can&amp;#39;t really comment on it but the discussion started with a concern about some of the announcement. It made me think of what a curriculum was when I started teaching, what it is now, and the ramifications of the change.</description>
    </item>
    
    <item>
      <title>Teaching non required topics - the command line</title>
      <link>https://newblog/post/non-required-topics/</link>
      <pubDate>Fri, 08 Oct 2021 08:56:11 -0400</pubDate>
      
      <guid>https://newblog/post/non-required-topics/</guid>
      <description>The other day I saw Allen Holub lamenting on how students don&amp;#39;t learn the command line.
All my students this semester have gone through at least a year of programming classes, and some of them do not know how to do even basic stuff on the command-line. This strikes me as a huge flaw in the curriculum. Maybe the first CS class should be How Devs Use Computers 101.</description>
    </item>
    
    <item>
      <title>Quarter Century Courses</title>
      <link>https://newblog/post/quarter-century-courses/</link>
      <pubDate>Tue, 15 Sep 2020 07:09:25 -0400</pubDate>
      
      <guid>https://newblog/post/quarter-century-courses/</guid>
      <description>I was talking in our Curriculum Development class last week about the courses I&amp;#39;ve created over the years. From the first computer graphics course to the current teacher education courses. JonAlf pointed out that we missed an &amp;#34;important&amp;#34; occasion last spring - the twenty fifth offering of my computer graphics class at Stuy. I haven&amp;#39;t taught it in almost 10 years but it&amp;#39;s been running continuously for a quarter century since it first ran back in the mid 90s.</description>
    </item>
    
    <item>
      <title>A new book on teaching CS in K12 - and I wrote a chapter!!</title>
      <link>https://newblog/post/in-a-book/</link>
      <pubDate>Mon, 15 Jun 2020 07:08:12 -0400</pubDate>
      
      <guid>https://newblog/post/in-a-book/</guid>
      <description>I was involved in a really exciting project a few months ago and now that it&amp;#39;s available, it&amp;#39;s time to tell everyone about it.
There&amp;#39;s a new book on teaching CS in K12 - Computer Science in K12. I got an email a few months ago from Shuchi Grover. Okay, actually a DM over twitter. I hadn&amp;#39;t officially met Shuchi although I&amp;#39;m pretty sure we&amp;#39;ve been at the same table or group in a conference or two but I did know her from reputation.</description>
    </item>
    
    <item>
      <title>Teachers Pay Teachers - part 2 - the report</title>
      <link>https://newblog/post/teachers-pay-teachers-2/</link>
      <pubDate>Mon, 20 Jan 2020 10:03:27 -0400</pubDate>
      
      <guid>https://newblog/post/teachers-pay-teachers-2/</guid>
      <description>Continuing from yesterday, what about the article and report on pay and free teacher resources.
The report looked at three sources - one pay and two free. They came up with a number of results but I think they largely missed the point.
Their bottom line conclusion was that &amp;#39;Overall, reviewers rate most of the materials as “mediocre” or “probably not worth using”.&amp;#39; They also didn&amp;#39;t seem to find that neither the for profit or free sources were universally better.</description>
    </item>
    
    <item>
      <title>Teachers Pay Teachers  - part 1 - should they</title>
      <link>https://newblog/post/teachers-pay-teachers/</link>
      <pubDate>Mon, 20 Jan 2020 08:43:37 -0400</pubDate>
      
      <guid>https://newblog/post/teachers-pay-teachers/</guid>
      <description>There was a bit of buzz a couple of months ago when Amazon announced an online marketplace for educational resources. It wasn&amp;#39;t a new concept - on the pay side, Teachers Pay Teachers has been around for a while and in terms of free, there are many online resources but they&amp;#39;re not necessarily well organized or curated. What was the buzz? Should teachers be charging their peers for class materials or should they be providing them for free.</description>
    </item>
    
    <item>
      <title>Implicit Curricula</title>
      <link>https://newblog/post/implicit-curricula/</link>
      <pubDate>Sun, 07 Apr 2019 16:23:43 -0400</pubDate>
      
      <guid>https://newblog/post/implicit-curricula/</guid>
      <description>The state got back to us the other week on our CSEd programs. Still no approval. One of the requirements is that we have 12 graduate CS credits in our program and that in those courses these five major areas:
Algorithms and programming Computing systems Data and analysis Impacts of computing Networks and the internet as described in the K12 CS Framework. Even though many of the items described in the framework fit better in an education side course NY is requiring that it&amp;#39;s all covered in CS courses offered by a CS department.</description>
    </item>
    
    <item>
      <title>Sequencing Topics</title>
      <link>https://newblog/post/sequencing-topics/</link>
      <pubDate>Sat, 26 Jan 2019 16:06:08 -0400</pubDate>
      
      <guid>https://newblog/post/sequencing-topics/</guid>
      <description>Monday&amp;#39;s the start of the Spring semester. Other than the 8:00am start I&amp;#39;m looking forward to it. My 8:00am class is the honors/lab component that goes with CS1. I taught it last semester and during each of the past two years at Hunter. My second class is the follow up - more OOP / C++, data structures and some algorithms.
The material is old hat. I&amp;#39;ve taught it in Java more times than I can count and also in C++ albeit many years ago.</description>
    </item>
    
    <item>
      <title>When does a new course really get developed</title>
      <link>https://newblog/post/when-does-a-new-course-get-developed/</link>
      <pubDate>Mon, 07 Jan 2019 08:49:17 -0400</pubDate>
      
      <guid>https://newblog/post/when-does-a-new-course-get-developed/</guid>
      <description>Following up on my last post I thought I&amp;#39;d talk a bit more about course development. According to most powers that be it&amp;#39;s all done ahead of time. Organizations and companies with curricula to sell package it all up ahead of time lesson by lesson unit by unit. When I create a new course at Hunter, they demand a sample syllabus during the approval process with a week by week outline, assignments reading and more.</description>
    </item>
    
    <item>
      <title>Owning The Curriculum</title>
      <link>https://newblog/post/owning-the-curriculum/</link>
      <pubDate>Sat, 05 Jan 2019 19:41:23 -0400</pubDate>
      
      <guid>https://newblog/post/owning-the-curriculum/</guid>
      <description>I spent a couple of days last week hunkered down working designing a CS Ethics course and of course it got me thinking about designing courses in general. One of the topics I&amp;#39;ve ranted on is my disdain for canned curricula. I&amp;#39;ve never been a fan. This isn&amp;#39;t to say I don&amp;#39;t want to leverage other people&amp;#39;s work. I&amp;#39;ll take sample curricula, lessons, and all the resources I can get my hands on but I&amp;#39;d never just deliver them as is.</description>
    </item>
    
    <item>
      <title>What CS should we teach in HS</title>
      <link>https://newblog/post/what-cs-in-hs/</link>
      <pubDate>Sun, 23 Sep 2018 16:54:12 -0400</pubDate>
      
      <guid>https://newblog/post/what-cs-in-hs/</guid>
      <description>I wanted to chime in on Alfred Thompson&amp;#39;s post last week on what to include in a HS CS class but was working on moving blogging platforms so didn&amp;#39;t get a chance so I&amp;#39;ll say a few words here.
If you&amp;#39;ve been here before you probably know I&amp;#39;m not a fan of the standards and I certainly am no fan of the College Board and the AP program so what&amp;#39;s my take?</description>
    </item>
    
    <item>
      <title>Time To Create An Ethics Course</title>
      <link>https://newblog/posts/time-to-create-an-ethics-course/</link>
      <pubDate>Sat, 21 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://newblog/posts/time-to-create-an-ethics-course/</guid>
      <description>I think it&amp;#39;s time for me to start developing a CS Ethics class.
An ethics course isn&amp;#39;t a replacement for having teachers that live and model good behavior and weave ethical issues throughout the curriculum but still, adding a separate course on top of that has its merits.
I&amp;#39;m not in a rush to create this course. I might be done in a month or it might take a couple of years.</description>
    </item>
    
    <item>
      <title>NYC CS4All - This Is Not The CS We&#39;re Looking For</title>
      <link>https://newblog/posts/this-is-not-the-cs-were-looking-for/</link>
      <pubDate>Fri, 29 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://newblog/posts/this-is-not-the-cs-were-looking-for/</guid>
      <description>It&amp;#39;s no secret that I&amp;#39;m something of an old curmudgeon in the K12 CS Education world and I&amp;#39;ve been critical of a number of initiatives and organizations over the years but I&amp;#39;ve been pretty quiet on the CS4All movement in NYC Department of Education. I&amp;#39;ve had and any number of concerns though.
This past week at the inaugural meeting of New York City&amp;#39;s CSTA chapter we got a taste of the NYC CS4All Blueprint.</description>
    </item>
    
    <item>
      <title>Ethics, Cybersecurity, ethics, curricula  and standards</title>
      <link>https://newblog/posts/ethics-cybersecurity-curricla-standards/</link>
      <pubDate>Wed, 02 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://newblog/posts/ethics-cybersecurity-curricla-standards/</guid>
      <description>This morning, I read Alfred Thompson&amp;#39;s post on teaching cybersecurity. as Alfred says, it&amp;#39;s something of a CS Ed buzzword this summer.
Another hot topic in K12 CS Ed this summer is the inclusion of ethics in our CS courses courtesy of efforts like the #ethicalCS twitter chat every Wednesday at 8:00 Eastern time hosted by Saber Khan. Discussions about both topics include &amp;#34;where should we be doing this?&amp;#34; &amp;#34;What should we be doing?</description>
    </item>
    
    <item>
      <title>Designing a course with constraints</title>
      <link>https://newblog/posts/design-course-with-constraints/</link>
      <pubDate>Fri, 19 May 2017 00:00:00 +0000</pubDate>
      
      <guid>https://newblog/posts/design-course-with-constraints/</guid>
      <description>One of the hats I wear at Hunter is to build a new CS Honors program and to bring my particular brand of insanity to Hunter College CS as a whole.
Yesterday was my last class for the semester so I thought I&amp;#39;d write a bit about the course.
For the Fall semester, I taught an intro programming course to the entire cohort. For some in the cohort, this was their first exposure to CS.</description>
    </item>
    
    <item>
      <title>Starting with scheme</title>
      <link>https://newblog/posts/staring-with-scheme/</link>
      <pubDate>Wed, 15 Feb 2017 00:00:00 +0000</pubDate>
      
      <guid>https://newblog/posts/staring-with-scheme/</guid>
      <description>Scheme is one of the languages used in Stuy&amp;#39;s intro CS course. Like any other language, there are pros and cons of using it to introduce students to CS. Here are some of the reasons why I like Scheme as a first language and why despite that, I don&amp;#39;t recommend it in many cases.
Scheme certainly isn&amp;#39;t mainstream. That&amp;#39;s not the main reason why I like it but it is a side benefit.</description>
    </item>
    
    <item>
      <title>Selecting a starting language - why not Javascript</title>
      <link>https://newblog/posts/starting-with-js/</link>
      <pubDate>Mon, 13 Feb 2017 00:00:00 +0000</pubDate>
      
      <guid>https://newblog/posts/starting-with-js/</guid>
      <description>I was catching up with the team at Stuy the other day and they mentioned that they were periodically getting pushback on their choice of languages, particularly in the intro class. The pushback was mostly in the form of &amp;#34;why don&amp;#39;t you start them with Javascript?&amp;#34;
Back in the day, when I created our intro class where we use Scheme, NetLogo and then later Python, I&amp;#39;d get similar pushback but then it was &amp;#34;why not Java?</description>
    </item>
    
    <item>
      <title>Essential topics for an intro course (not)</title>
      <link>https://newblog/posts/essentials-for-an-intro-course/</link>
      <pubDate>Mon, 09 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>https://newblog/posts/essentials-for-an-intro-course/</guid>
      <description>What essential topics should we teach in our intro courses? This seems to be a recurring topic recently.
It can be an important topic but, unfortunately, too often, it seems that people have too myopic a view
I remember thinking about this years ago when APCS moved from C++ to Java. Both languages have good and bad points both for practical and educational use. A big loss in the move to Java was memory management and the topics you could cover when memory issues arose.</description>
    </item>
    
    <item>
      <title>Lesson plans - scripts to springboards</title>
      <link>https://newblog/posts/lesson-plans/</link>
      <pubDate>Thu, 23 Jun 2016 00:00:00 +0000</pubDate>
      
      <guid>https://newblog/posts/lesson-plans/</guid>
      <description>I spent last Saturday up at the Microsoft offices in Times Square observing a TEALS training session. My fried Nathaniel Granor, Teals Regional Manager in the east has invited me a number of times and this time I was able to make it.
If you don&amp;#39;t know, TEALS is a program that takes volunteers in the tech industry and places them in classrooms. Unlike other programs, the TEALS volunteers work with the teachers while the kids learn some CS.</description>
    </item>
    
    <item>
      <title>Navajo Math Circles</title>
      <link>https://newblog/posts/navajo-circles/</link>
      <pubDate>Wed, 08 Jun 2016 00:00:00 +0000</pubDate>
      
      <guid>https://newblog/posts/navajo-circles/</guid>
      <description>Yesterday, I saw the New York Premiere of Navajo Math Circles, a documentary on a Math Circle put in place to support and enrich the currently under-served community in the Navajo educational system.
At their core, Math Circles are math outreach and enrichment programs. I&amp;#39;m most familiar with the New York Math Circle. I&amp;#39;m friends with many of their teachers and organizers and my son took part in their summer program for a couple of years.</description>
    </item>
    
  </channel>
</rss>
