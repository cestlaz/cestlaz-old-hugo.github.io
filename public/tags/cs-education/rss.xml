<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>CS Education on C&#39;est la Z</title>
    <link>https://cestlaz.github.io/tags/cs-education/</link>
    <description>C&#39;est la Z (CS Education)</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 23 Jul 2024 15:10:14 -0400</lastBuildDate>
    
    <atom:link href="https://cestlaz.github.io/tags/cs-education/rss.xml" rel="self" type="application/rss" />
    
    
    <item>
      <title>CSTA 2024 final thoughts</title>
      <link>https://cestlaz.github.io/post/csta-2024-final/</link>
      <pubDate>Tue, 23 Jul 2024 15:10:14 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/csta-2024-final/</guid>
      <description>&lt;p&gt;
Got home last night. Only delayed a couple of hours so we were much
luckier than many friends who had to scramble and deal with canceled
flights. It helped that we flew JetBlue, an airline not affected by
the CrowdStrike issues and also because we were staying until Monday
anyway so as to play tourist.&lt;/p&gt;
&lt;p&gt;
What&amp;#39;s left to cover. Let&amp;#39;s start with the exhibition hall with all
the vendors. There were the big companies - Google, Amazon, and
Microsoft, curriculum provers like CodeHS and CMU (CS Academy), and
lots of robots and robotics companies. There were a few others mixed
in as well.&lt;/p&gt;
&lt;p&gt;
I didn&amp;#39;t speak to too many vendors though as I&amp;#39;m not particularly
interested in using someone else curriculum and while some of the
robotics stuff looked very cool, it&amp;#39;s not something I&amp;#39;ll be using
since I&amp;#39;m no longer in a classroom and any toys I do want to play with
have to fit in my Manhattan apartment.&lt;/p&gt;
&lt;p&gt;
I did spend some time with the people in the &lt;a href=&#34;https://www.kira-learning.com/&#34;&gt;Kira&lt;/a&gt; booth. I thought I&amp;#39;d
check them out since they seem to be getting a bit of buzz
recently. Their home page touts Kira as &amp;#34;The AI platform for schools.&amp;#34;
There are courses which seem to basically be MOOCS, although they can
be used (and appear to be meant to be used) as a tool by a teacher
with a class. There are pre-made courses and units and teachers can
also build their own content. This all looks fine but seems similar to
other course platforms.&lt;/p&gt;
&lt;p&gt;
They seem to want to differentiate themselves with their AI
piece. This comes as an auto-grader which I didn&amp;#39;t get to see along
with an AI tutor for the students. It looks cool but to be honest, I
don&amp;#39;t know if it&amp;#39;s even a good idea as a classroom tool. I think I&amp;#39;d
rather have a student talk with a neighbor first. I plan to do a
deeper dive into Kira sometime soon and then will probably report
back. Right now, if they keep the buzz, they&amp;#39;ll sell well but I&amp;#39;m not
yet sold. If I were still in the classroom, I think I&amp;#39;d stick to my
old school ways.&lt;/p&gt;
&lt;p&gt;
To me, CSTA has always been a people conference rather than a session
conference and this year was no exception. I got to see and spend time
with many old friends and met a couple of new ones. For the sessions
though, while I found a couple of great ones, many didn&amp;#39;t do much for
me. That&amp;#39;s not to say they were bad sessions. I think I even noted
that in my previous posts where I felt that a session would be great
for a teacher at another point in their career but it didn&amp;#39;t scratch
my itch.&lt;/p&gt;
&lt;p&gt;
Of course, given that any attendee can only go to one session per slot
and since descriptions don&amp;#39;t always tell the whole story, perceptions
vary. I just read Amy Ko&amp;#39;s &lt;a href=&#34;https://medium.com/bits-and-behavior/csta-2024-trip-report-mixed-messages-20222112a788&#34;&gt;CSTA report&lt;/a&gt; and Amy lamented the lack of
equity and justice focus. I felt there was good coverage there. I on
the other hand felt that there should have been more coverage on
actual content and pedagogy. Both of us could be right, both of us
could be wrong. At the end of the day though, CSTA provided a platform
with CS teachers from across the country could discuss whatever issues
they desired with a diverse range of colleagues and that&amp;#39;s a pretty
special thing.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;d be remiss if I didn&amp;#39;t close with a few words on my tourist time. I
wasn&amp;#39;t excited to come to Las Vegas - I&amp;#39;m not into casinos and coming
from New York I&amp;#39;ve got better and cheaper food options as well as
pretty much any entertainment I want. In NY I also don&amp;#39;t feel like
then entire town is trying to scam me for my money. I don&amp;#39;t want to
come down though on residents of Las Vegas though since I do know a
couple of great people who live there so I&amp;#39;m sure people there are
just like everywhere else it&amp;#39;s just that the tourist industry there
isn&amp;#39;t for me.&lt;/p&gt;
&lt;p&gt;
That said, we did do a number of things we enjoyed.&lt;/p&gt;
&lt;p&gt;
We did a couple of day trips with Pink Jeep tours - one to Hoover Dam
and the other to Red Rock Canyon. Our Red Rock tour guide was the
better of the two but both were solid and both trips 100% worthwhile.&lt;/p&gt;
&lt;p&gt;
We also visited the Atomic Testing Museum and the Mob Museum. Both
were really interesting. I&amp;#39;ve always been interested in the mob thing,
particularly the Jewish Mob in New York so the Mob Museum was a
particular hit for me.&lt;/p&gt;
&lt;p&gt;
We walked Freemont Street, which was basically another touristy strip
but got a great apple fritter at a donut shop across from one of the
ends.&lt;/p&gt;
&lt;p&gt;
On our last afternoon, after our Red Rock tour we grabbed lunch at
&lt;a href=&#34;https://www.sayulitaseats.com/&#34;&gt;Sayulitas&lt;/a&gt; - a hole in the wall burrito place. I&amp;#39;ve got to say -
probably our best meal in Vegas.  All the strip stuff was overpriced
although some was tasty but Sayulitas was dynamite. When we got in, we
were concerned about the lack of seating but there was a huge crowd of
locals and pretty much no English being spoken - all good
signs. Hadn&amp;#39;t had burritos that good in decades.&lt;/p&gt;
&lt;p&gt;
From there we went to the &lt;a href=&#34;https://www.pinballmuseum.org/&#34;&gt;Pinball Hall of Fame&lt;/a&gt;. While I&amp;#39;m not into
casinos, I love pinball. Basically a pinball parlor with machines
ranging from the early days up until today. Also a bunch of novelty
machines like a vertical circus game with three mini pinball games in
it and a couple of two player games where each player is on opposite
sides and the playfield tilts back and forth. Super cool. Price per
game range from a quarter for some of the old machines to a dollar for
the new ones. Devorah and I spent a couple of hours and $20 and had a
super fun time.&lt;/p&gt;
&lt;p&gt;
So that&amp;#39;s CSTA 2024. Before flying to Las Vegas, I was already not hot
on the town and also not so hot on some aspects of CSTA, the national
organization. I think the most positive thing I can say is that I left
the conference not only energized but thinking about proposing a
session or two for next year.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>CSTA 2024 - the final day</title>
      <link>https://cestlaz.github.io/post/csta-2024-day-4/</link>
      <pubDate>Sun, 21 Jul 2024 19:51:07 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/csta-2024-day-4/</guid>
      <description>&lt;p&gt;
The conference ended this past Friday. After a couple of morning
sessions I started to play tourist which included spending more time
in the 100+ degree out doors. Fun stuff that I&amp;#39;ll talk about later but
left me too drained Friday and Saturday evening to continue my write
ups.&lt;/p&gt;
&lt;p&gt;
First up was another AI session &amp;#34;Unlocking AI: Teaching Artificial
Intelligence in K12.&amp;#34; Slides and other materials can be found
&lt;a href=&#34;https://docs.google.com/presentation/d/121zotqh5_kr7jSP3HdUQue-vyT-goWznqFvjTbyvcWE/edit#slide=id.g2df995fa4b0_0_417&#34;&gt;here&lt;/a&gt;. The speakers were Nora Burkhauser who gave the talk on &amp;#34;Machine
Learning for Kids&amp;#34; and Nick Yates. The talk focused on two
professional development opportunities they&amp;#39;ve developed to bring K12
teachers of all grade levels and all subjects up to speed on
Artificial Intelligence. Well really one PD opportunity split into two
part.&lt;/p&gt;
&lt;p&gt;
Part one, offered via remote sessions with interspersed assignments
followed by in person PD covered the basics. Basic definitions,
classic ML and AI, a typical AI pipeline. From where I sat, it looked
like this course provided a good overview for any teacher new to
AI. It didn&amp;#39;t, in my opinion cover enough for a CS teacher in a HS
class to do a full AI unit but given time constraints of a typical PD,
it&amp;#39;s a great start and looks like it provides plenty for the early
grade teachers and the non CS teachers while at least getting the CS
teachers on the road.&lt;/p&gt;
&lt;p&gt;
Part 2 goes over available AI curricula, touches on modern AI -
generative AI, neural nets etc., and also goes over applying AI. In
fact, they presented the same lesson, more or less, as was presented
in the &amp;#34;Machine Learning for Kids&amp;#34; talk I attended on Thursday. This
part 2 course certainly adds to the foundation for the early grade
teacher on non CS teacher, but still wouldn&amp;#39;t be enough, in my opinion
for the HS teacher. I understand that the speakers can only do so
much - they can&amp;#39;t offer one or more college or graduate level courses
in AI - they have to work within their state&amp;#39;s professional
development system but we have to become vocal about the fact that so
long as our CS teachers are not coming in with strong content
knowledge, add on professional development isn&amp;#39;t a solution, it&amp;#39;s just
window dressing. Sure, right now it&amp;#39;s frequently the best we can do
but more people have to start banging the drum that we &lt;strong&gt;need&lt;/strong&gt; our CS
teachers to actually have a good amount of knowledge in, you know, CS.&lt;/p&gt;
&lt;p&gt;
Before moving on, I do want to say again that this was another strong
session and the speakers are doing great work, they&amp;#39;re just trying to
do their best within the limitations of the system under which they
work.&lt;/p&gt;
&lt;p&gt;
After this AI talk I attended some lightening talks. The first was
given by a new teacher on  her just barely staying ahead of her
class. It was a nice talk but got me thinking that it might be useful
for CSTA to specifically set up an affinity meeting that combined
brand new CS teachers (particularly those with limited content
knowledge) and match them with groups of slightly more experienced
teachers - say those with 3 or 4 years experience. Teachers with
enough mileage so that they can provide encouragement and guidance to
the neophytes but not with so much experience that they&amp;#39;ve forgotten
the struggle.&lt;/p&gt;
&lt;p&gt;
Another lightening talk was about creating a social media presence. I
was interested in this because the speaker was going to talk about
making short form videos and I&amp;#39;ve spent the past decade+ in the world
of blogs. Unfortunately, the talk was really more about how to tweak
your already existing video content to maximize viewers. Valuable if
you&amp;#39;ve already got a video presence but not the info I was hoping for.&lt;/p&gt;
&lt;p&gt;
I didn&amp;#39;t attend the last keynote so that was it for me but that&amp;#39;s not
it for my SIGCSE post. Next up, the exhibitors, Las Vegas and final
thoughts on the conference.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>CSTA 2024 day 3 part 2 - AI and a keynote panel</title>
      <link>https://cestlaz.github.io/post/csta-2024-day-3-2/</link>
      <pubDate>Fri, 19 Jul 2024 09:56:09 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/csta-2024-day-3-2/</guid>
      <description>&lt;p&gt;
So, I stopped my &lt;a href=&#34;https://cestlaz.github.io/post/csta-2024-day-3/&#34;&gt;previous post&lt;/a&gt; after my thoughts on the DEI talk. The actual
post wasn&amp;#39;t all that long, the reason I said for stopping the post but
rather because writing that post was emotionally draining. Can I talk
about that stuff? Will people interpret it the way I intended. Will
people who I don&amp;#39;t want to offend and don&amp;#39;t think I&amp;#39;m offending, will
they be offended? Will the people I want to offend not be offended
(okay, just joking here). It&amp;#39;s really hard for people to have these
conversations and too many people these days don&amp;#39;t allow for nuance
but I felt it important to get my thoughts out there. Not so much
because my thoughts are anything special or that they&amp;#39;re right or
wrong but one, because the session was terrific and I am documenting
my conference experience and two because having these conversations
won&amp;#39;t get easier unless people are willing to put themselves out
there.&lt;/p&gt;
&lt;p&gt;
Anyway, back to our regular programming.&lt;/p&gt;
&lt;p&gt;
Thursday afternoon I sat in on &amp;#34;AI Lessons using Machine Learning for
Kids.&amp;#34; &lt;a href=&#34;https://machinelearningforkids.co.uk/#!/login&#34;&gt;Machine Learning for Kids&lt;/a&gt; is a site/platform that allows people
to set up and train machine learning models. The speaker&amp;#39;s slide deck
with links to resources can be found &lt;a href=&#34;https://docs.google.com/presentation/d/1AJ5sfkMVzl_JNnnVeTOnEZD__fe8b7LN_2sPTpFLH44/edit#slide=id.g272ca406bce_0_21&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;
The speaker walked us through how she used ML for kids with her
class. She basically teaches a typical Machine Learning pipeline, that
is:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;collect data –&amp;gt; prepare/clean –&amp;gt; select model –&amp;gt; train –&amp;gt; validate
–&amp;gt; predict&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Her specific project was sentiment analysis of text. The platform can also
work with images, sounds, and numbers. After logging in (or clicking
to try without registering) you start a project. You select the model
you&amp;#39;re using, &amp;#34;recognizing text&amp;#34; in this case. You then use their
interface to add data. The instructor, of course, would have to
provide guidance so that a student would know what and how to enter.&lt;/p&gt;
&lt;p&gt;
When finished, you click the train button and the platform builds the
model. I&amp;#39;m pretty sure you can then play with the model but I didn&amp;#39;t
actually test that. The cool thing, to me was that you can then have
the platform generate code - scratch, python, and a couple of other
platforms. I clicked the generate button and all of a sudden I got a
chunk of Python code that I could embed in a program. Specifically,
the code let you use your now trained model as a library (or more
specifically, web based API) and make calls with data and get your
results.&lt;/p&gt;
&lt;p&gt;
While this is &lt;strong&gt;very&lt;/strong&gt; cool, it raised some questions. The big one for me
is that you can go through all of this and have almost zero knowledge
of the underlying machine learning. Contrast that with the session I
wrote up a couple of days ago where the students learned all the
little details of gradient descent for linear regression (more on this
later).&lt;/p&gt;
&lt;p&gt;
Is this really the right way to go?&lt;/p&gt;
&lt;p&gt;
The instructor noted that when we use a tool like ChatGPT we&amp;#39;re using
an already trained model so this is no different. That&amp;#39;s true but in a
class learning about, say sentiment analysis as an ML technique, I
think students should learn how the sausage is made. &lt;/p&gt;
&lt;p&gt;
Now, this approach of leaving the actual ML as a black box does still
allow for some good learning to go on.  Students will learn the
pipeline. They can also discuss issues like false positives and true
negatives - the effects of different training data, over training and
much more. They could also see, from a user point of view if different
models produce different results. A teacher might also have constraints
to keep them from diving deeper - insufficient time, toolset limits,
student backgrounds and I&amp;#39;m sure others.&lt;/p&gt;
&lt;p&gt;
That said, I&amp;#39;m a firm believer in seeing what&amp;#39;s under the hood.&lt;/p&gt;
&lt;p&gt;
Now, going back to the Linear Regression talk from Wednesday, that
might be too much for an average high school class and almost
certainly too much for a pre APCS-A class so where do you draw the
line?&lt;/p&gt;
&lt;p&gt;
It turns out that in a CS0 class using a text based language like
Python, students can pretty easily write a simple sentiment analysis
system. You can also scaffold pretty thoroughly.&lt;/p&gt;
&lt;p&gt;
The basic gist is:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Make two lists, one of positive words, one of negative&lt;/li&gt;
&lt;li&gt;Read in the text you want to test&lt;/li&gt;
&lt;li&gt;Split the text into words&lt;/li&gt;
&lt;li&gt;Count how many words are in the positive list and how many in the
negative.&lt;/li&gt;
&lt;li&gt;If there are more positive than negative, it&amp;#39;s a positive piece,
otherwise negative.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;This is extremely bare bones and has issues. For instance if a
document has &amp;#34;not bad&amp;#34; in it it&amp;#39;ll just see the word bad and classify
as negative but that&amp;#39;s something the class can talk about. The project
can also be easily extended in any number of ways. You can also
include all of the good things from the speakers lesson design - the
pipeline, different training sets, etc.. The important thing is that
the students will have a stronger understanding of how sentiment
analysis actually works.&lt;/p&gt;
&lt;p&gt;
While this was a strong session, I&amp;#39;m a big believer in students
understanding the inner workings of things and I think this is going
to be even more important with the current AI craze - this is
something one of the end of day keynote panelists actually pointed out
(more on that down below). Of course, you have to know your
population, where they&amp;#39;re at, and what your restrictions are.&lt;/p&gt;
&lt;p&gt;
In middle school with scratch, the black box approach is most likely
the way to go, particularly since ML for kids hooks in to
scratch. Teaching a High School class using Python? You should
probably do a unit where your class codes the whole thing.&lt;/p&gt;
&lt;p&gt;
Just my opinion and approach.&lt;/p&gt;
&lt;p&gt;
One final note before moving on to the rest of the day. I&amp;#39;ve noticed
that while there are plenty of sessions that, by description, talk
about ChatGPT tools - what&amp;#39;s considered the cutting edge of the AI
fad, there have been a few sessions on Machine Learning and more
traditional AI. This has been great to see as so much of what runs and
what will run the world operates using these techniques and
technologies and it&amp;#39;s important not to drop them in education for the
flavor of the month.&lt;/p&gt;
&lt;p&gt;
That was it for the Thursday sessions for me, I spent the rest of the
session time looking at the posters and the hallway track.&lt;/p&gt;
&lt;p&gt;
The Thursday keynote was a panel moderated by education journalist
Natasha Singer. The panelists were (as seated left to right):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Christy Crawford of the New York City Board of Ed&amp;#39;s CSforAll initiative&lt;/li&gt;
&lt;li&gt;Maggie Johnson, Global head and VP, Google.org&lt;/li&gt;
&lt;li&gt;Mehram Sahami, Chair of the CS department, Stanford University&lt;/li&gt;
&lt;li&gt;Kip Glazer, Principal, Mountain View High School &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Before diving in to the panel, I&amp;#39;ve got to express more pride in my
Hunter CS Teacher Cert program graduates. While delivering some
opening comments, Natasha Singer gave a shout out to another Hunter CS
Certified teacher, Marisa Shuman citing some of the work Marisa&amp;#39;s done
bringing AI to her students in New York. Here&amp;#39;s Natasha&amp;#39;s article
about it: &lt;a href=&#34;https://www.sanjuandailystar.com/post/at-this-school-computer-science-class-now-includes-critiquing-chatbots&#34;&gt;link&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;
Now to the panel. Overall it was a great session but I did notice one
thing missing. There were no actual teachers on the panel. Maggie
Johnson&amp;#39;s from Google and he background&amp;#39;s in higher ed as is Mehram
Sahami&amp;#39;s. Christy Crawford doesn&amp;#39;t show any classroom teaching
experience on her linkedin. Only Kip Glazer listed any K12 teaching
experience on linkedin and that ended back in 2016 - about 11 years
total which is a nice chunk but in my mind generally not anywhere near
the time needed for mastery.&lt;/p&gt;
&lt;p&gt;
It would have been nice to have at least one actual K12 teacher up
there. Even better if it were an experienced CS teacher who also had
strong content knowledge.&lt;/p&gt;
&lt;p&gt;
The first question was on the overall impact of AI in
education. Mehram was first to respond and hit the nail on the head -
AI can&amp;#39;t transform education, only people (teachers can transform
education. Bravo. He added that AI can enhance teachers ability to
transform education but it&amp;#39;s just a tool. As a side note, I really
felt that Mehram was pretty much spot on throughout. I was very
impressed with his responses.&lt;/p&gt;
&lt;p&gt;
Christy chimed in with a common teacher&amp;#39;s fear - will AI replace them.&lt;/p&gt;
&lt;p&gt;
I think this was an interesting juxtaposition. You have the academic
speaking the truth of how things should be and the person immersed in
K12 noting the unfortunate reality that the politicians and private
interests are always looking to save money and turn a buck by cutting
teachers and directing money to private companies to &amp;#34;compensate.&amp;#34;&lt;/p&gt;
&lt;p&gt;
The next question asked were coding should live in K12 with tools like
copilot and other code generating LLMs.&lt;/p&gt;
&lt;p&gt;
Maggie noted that even if AI can generate code, it still needs to be
understood, checked, tested, extended, and embedded. She said she
didn&amp;#39;t know how much coding would be necessary but certainly it&amp;#39;s
something we much teach in K12.&lt;/p&gt;
&lt;p&gt;
Mehran noted that teaching coding syntax is still important and that
we can use tools like chatGPT like a code library or API to enhance
our student&amp;#39;s work. This echoed something I wrote about when I wrote
up this year&amp;#39;s SIGCSE experience.&lt;/p&gt;
&lt;p&gt;
In response to Natasha Singer asking if there should be limits on
AI on AI Maggie spoke on how it&amp;#39;s something that Google talks about
top to bottom every day. When she followed up with &amp;#34;what about in the
classroom&amp;#34; Christy chimed in yes but added an oh so important &amp;#34;but not
on the backs of the teachers.&amp;#34; I do lament that there wasn&amp;#39;t an actual
teacher on the panel but applaud Christy for consistently having
teacher&amp;#39;s backs throughout the panel. It&amp;#39;s not a surprise, she&amp;#39;s
always had teacher&amp;#39;s backs in her role at CSforAll. I wish others in
the NY DOE would follow her lead more.&lt;/p&gt;
&lt;p&gt;
Natasha also asked about corporate influences on curriculum as this is
something somewhat unique to CS. As a new field and a new field in
K12, few teachers and schools knew what to teach so for better or
worse, outsiders filled the void. That&amp;#39;s the college board, code.org,
organizations like PLTW, companies liked CODEHS. This doesn&amp;#39;t happen
in other older fields. A friend of mine later pointed out that it sort
of does but the outside influencers are the book publishers. Anyway,
Maggie posited that technology changes so fast that industry is needed
to keep curriculum up to date. I think she misinterpreted the question
though. I  believe Natasha was specifically talking about content
providers like those I listed above while Maggie was thinking about
pure tech companies informing curriculum which, if they did and if
they &amp;#34;stepped back&amp;#34; to go back to yesterday&amp;#39;s post would be great.&lt;/p&gt;
&lt;p&gt;
I think Mehram also misinterpreted the question as he talked of the
symbiotic relationship between industry and education. I think he was
thinking more about the university industry relationship.&lt;/p&gt;
&lt;p&gt;
Once again, though, Christy had the teacher&amp;#39;s backs when she on the
one hand noted how important industry can be - they can inform,
provide opportunities like mentoring, and support but there has to be
a hard line. They should not be driving curriculum or
education. Again, bravo.&lt;/p&gt;
&lt;p&gt;
At this point, we ran out of time. Great panel. As I said, I
particularly liked Mehram&amp;#39;s comments which included a number I didn&amp;#39;t
mention here as well as Christy&amp;#39;s constant defense of teachers but
everyone was terrific.&lt;/p&gt;
&lt;p&gt;
That&amp;#39;s it for day 3.&lt;/p&gt;
&lt;p&gt;
In the next day or so I&amp;#39;ll get to day 4, the exhibitors, and some
closing thoughts.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>CSTA 2024 day 3</title>
      <link>https://cestlaz.github.io/post/csta-2024-day-3/</link>
      <pubDate>Thu, 18 Jul 2024 17:37:43 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/csta-2024-day-3/</guid>
      <description>&lt;p&gt;
Started out today in a session titled &amp;#34;Keep Calm and AI on.&amp;#34; The panel
was made up of CSTA Equity Fellows. It turned out that the session
wasn&amp;#39;t what I was looking for. According to the description the panel
was supposed to cover &amp;#34;the promise and the challenges of various
artificial intelligence tools, especially generative AI tools such as
ChatGPT, Copilot, and Bard.&amp;#34; Instead it was a general panel and
discussion of the use of AI. To be frank, the session wasn&amp;#39;t really
focused on CS educators at all and could just as easily been plopped
down int a PD session for any subject or grade level. Now, that&amp;#39;s not
necessarily bad but it just wasn&amp;#39;t what I was hoping for.&lt;/p&gt;
&lt;p&gt;
The panel consisted of a number of questions where each panelist had
their say and then the moderator, also a panelist solicited thoughts
from the audience.  The questions they asked were:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;What ethical concerns do you have?&lt;/li&gt;
&lt;li&gt;In your setting, how is AI used?&lt;/li&gt;
&lt;li&gt;What&amp;#39;s one piece of advice you&amp;#39;d share?&lt;/li&gt;
&lt;li&gt;What work have you seen being done for AI in education?&lt;/li&gt;
&lt;li&gt;What is your call to action?&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The moderator ran the panel well and we got to share many points of
view. Personally, I was hoping for a discussion of some specifics with
using CS specific tools like copilot or issues or possibilities with
applying ore general tools like ChatGPT in a CS classroom or lesson
but I suspect that the panel as it went own was probably pretty
valuable to a lot of people in the audience&lt;/p&gt;
&lt;p&gt;
My second session was &amp;#34;The Power of Words in CS Education&amp;#34; - another
panel. As per the description, &amp;#34;this panel discussion aims to explore
the intricacies of intercommunication and confront uncomfortable
conversations&amp;#34; with the key word being DEI.&lt;/p&gt;
&lt;p&gt;
The questions were:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;What comes to mind when you hear the term DEI?&lt;/li&gt;
&lt;li&gt;Who can talk about DEI?&lt;/li&gt;
&lt;li&gt;What issues have you had speaking your truth in this space?&lt;/li&gt;
&lt;li&gt;Do we need DEI offices and spaces?&lt;/li&gt;
&lt;li&gt;Who owns this space?&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Due to time constraints, the panel never got to the last two quesitons
(other than a quick mention of question 4 where the consensus answer
in the room was &amp;#34;yes&amp;#34;).&lt;/p&gt;
&lt;p&gt;
The panel was run much like the AI session I described with the
panelists sharing their thoughts and then the moderator (again, also a
panelist) solicited audience input and again the session was run
smoothly and effectively.&lt;/p&gt;
&lt;p&gt;
I want to highlight some thoughts that came out on question 2 - who
can talk about DEI as well some thoughts I had based on something one
of the panelists said.&lt;/p&gt;
&lt;p&gt;
One panelist commented that anyone can talk about DEI but talk is
cheap, we have to look at actions. My take is that you&amp;#39;ve got to walk
the walk and thought about all the companies who crow about their DEI
programs but really just pay lip service. Companies who claim they&amp;#39;re
pushing say black SWE hires but really only fight with with the other
top companies to monopolize the candidates from say Stanford. They
talk the talk but aren&amp;#39;t really doing anything to improve the
situation but rather they&amp;#39;re just trying to gobble up the low hanging
fruit.&lt;/p&gt;
&lt;p&gt;
Another panelist mentioned that we need white people involved
but they need to know when to step back. This is a tricky one. I get
it - I can&amp;#39;t understand the life experiences, situation, or needs of
say a black person in the USA and I certainly shouldn&amp;#39;t be telling one
what they should feel or what they need but on the other hand I might
actually have some background where I should be stepping in in a
complementary way or might be raising a relevant issue. &lt;/p&gt;
&lt;p&gt;
I&amp;#39;ll share two personal situations where I was frozen out of a
community for not &amp;#34;stepping back.&amp;#34; One was a conversation with some
people about the LGBTQ+ pride parade in NYC. My position was that
while I&amp;#39;m all for the parade, I had a problem with what I saw at the
parade a number of years ago - near naked people on floats essentially
performing simulated sex. Apparently I wasn&amp;#39;t stepping back. Now to
me, I wasn&amp;#39;t telling anyone in this young subset of the LGBTQ+
community how to celebrate or behave and I wasn&amp;#39;t telling the members
of this set of LBGTQ+ community members how to live their lives. I
was conveying my opinion that as a parent I really didn&amp;#39;t want to have to start
explaining people having simulated sex mid day on a float to my young
kids. Please note, my objection wasn&amp;#39;t specific to this parade, I&amp;#39;ve
had the same complaint to other non LGBTQ+ parades that cut through
family areas during the day. Was I out of line? &lt;/p&gt;
&lt;p&gt;
The other time was in a discussion of the SHSAT - the exam you take
for admission to Stuy/Science/Tech etc.. There&amp;#39;s long been a problem
with the low number of black students being admitted to these schools
and Stuy in particular. A number of ideas have been floated including
one particularly bad one - admit the valedictorian of each middle
school. I asserted why this was a horribly bad idea. I as accused of
being a racist and frozen out. To them, I wasn&amp;#39;t standing back. To me,
I was pointing out the reality that this solution didn&amp;#39;t get to the
root cause of the problem and also wouldn&amp;#39;t end well. I obviously
can&amp;#39;t walk in the footsteps of a black middle school student or their
parents but I had much greater knowledge of the test and test process,
what Stuy was like and how it operated and think I had and have a much
better understanding of what the outcome would be from this plan.&lt;/p&gt;
&lt;p&gt;
Was I out of line and should have stepped back or was I appropriately
contributing to the discussion. It can get complicated, particularly
if recognize that many of these situations are pretty nuanced. &lt;/p&gt;
&lt;p&gt;
A final comment I&amp;#39;ll make is that one of the panelists mentioned that
they don&amp;#39;t want allies, they want co-conspirators. The difference
being that a co-conspirator will step in front of a car for them. I
get this and agree but it also irritated me. Not about the speaker or
the panel but something I&amp;#39;ve noticed going on with some subsets of DEI
supporting communities. I&amp;#39;m hoping that these subsets are small but
vocal minorities but it&amp;#39;s hard to believe that given what I&amp;#39;ve seen in
the media. &lt;/p&gt;
&lt;p&gt;
I&amp;#39;m a white male Jew. Back in the day Jews were recognized as
co-conspirators with the black community and the LGBTQ+ community. We
would not only figuratively step in front of a car for those
communities but at times literally do so. Recently I&amp;#39;ve noticed the
rise of antisemitic voices coming from some of those communities. This
forces me to examine my relationship with these communities and makes
me sad.&lt;/p&gt;
&lt;p&gt;
I really enjoyed this session but think it&amp;#39;s important to note that
this was another session that really had no focus on CS.&lt;/p&gt;
&lt;p&gt;
I still want to write about one more session I attended as well as the
Thursday keynote and the exhibit halls (including a bit on Kira
Learning) not to mention tomorrow but I think this is long enough for
today&amp;#39;s post. I&amp;#39;ll cover the rest in the next few days.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>CSTA 2024 day 2</title>
      <link>https://cestlaz.github.io/post/csta-2024-day-2/</link>
      <pubDate>Wed, 17 Jul 2024 23:01:02 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/csta-2024-day-2/</guid>
      <description>&lt;p&gt;
What, no day 1? Well, day one was all workshops followed by a keynote
and a reception. I generally don&amp;#39;t do workshops and got in too late
for the keynote but I did hit the reception but not too much to write
about there.&lt;/p&gt;
&lt;p&gt;
This year the CSTA conference is in Las Vegas. I&amp;#39;ve never been to
Vegas and there&amp;#39;s not really much of a draw here for me. I&amp;#39;m not into
gambling, the food, for a New Yorker is nothing special and while
there are a number of shows that are unique to Vegas, again, as a New
Yorker, it&amp;#39;s not like I&amp;#39;m lacking for local entertainment
options. That said, there are some things I&amp;#39;ll enjoy taking in while
I&amp;#39;m here - the spectacle of everything, the Mob museum, Hoover Dam,
and Red Rock Canyon in particular.&lt;/p&gt;
&lt;p&gt;
To be honest, though, I really don&amp;#39;t get putting a teacher conference
here. Everything is &lt;strong&gt;so&lt;/strong&gt; expensive. The rooms were reasonable (even with
the resort fee) but everything is nickle and dime. The room only comes
with 2 WIFI connections so if you&amp;#39;re 2 teachers sharing a room and
each need a phone and computer on WIFI, that&amp;#39;s $30 extra a day. Then
you&amp;#39;ve got food. A medium coffee in the morning is going to set you
back $7 or $8 and today lunch cost me around $25 for a mediocre
sandwich and a cannoli - around $10 more than I&amp;#39;d pay in NYC which is
not a cheap town.&lt;/p&gt;
&lt;p&gt;
So, I don&amp;#39;t get the location but I still really enjoyed the opening
reception, had a blast today as well and am a big fan of the CSTA
conference.&lt;/p&gt;
&lt;p&gt;
To start out the day I sat in on John Dutton&amp;#39;s session &amp;#34;Creating a
toolkit for all CS learners.&amp;#34; I was hoping to avoid an AI talk since I
knew I&amp;#39;d get plenty of those later on but I really wasn&amp;#39;t sure where
this session would lead. It turns out I didn&amp;#39;t avoid an AI talk but
that was okay.&lt;/p&gt;
&lt;p&gt;
The first half of John&amp;#39;s talk was on how he set up his class culture -
something that&amp;#39;s both very important and also frequently neglected. He
spoke about empowering the class by asking them how they would like
this class to be different than others they&amp;#39;ve had - it reminded me of
my friend and former student Davin, who, whenever he starts a new
company spends time with the founding team discussing what they did
and didn&amp;#39;t like about the culture of their past companies and then
uses their combined experiences to make a strong positive culture for
their new venture. John&amp;#39; talks about student &amp;#34;jobs&amp;#34; in the class and
more. I ran into John at lunch later and we chatted a bit. I felt that
our thoughts are pretty aligned on class culture being really
important but also confirmed my suspicion that he only had around 14
kids per class which affords him more opportunities to set a positive
culture than a teacher of say 34 per class in a crowded room. This is
not to take away anything from his work as he&amp;#39;s aware of this
advantage and appreciates it.&lt;/p&gt;
&lt;p&gt;
John also talked about some CS teaching techniques. Well, they&amp;#39;re not
really CS specific techniques but CS teachers frequently use them -
rubber duck debugging, asking classmates before asking the teacher and
a few other strategies. Then, the main event, a template to set up an
assignment that then used a script that used AI to take the data in
the form and create multiple, differentiated versions of the lesson.&lt;/p&gt;
&lt;p&gt;
To be honest, there wasn&amp;#39;t a lot in this session for me given that I&amp;#39;m
not teaching right now but for a new CS teacher, I could see a lot of
value. I think I thought there would be more actual CS in the
presentation but that&amp;#39;s neither here nor there. John shared &lt;a href=&#34;https://drive.google.com/drive/folders/1bUW03Qwvy2LvvUAIeH5j2n-K5jMxNk-M&#34;&gt;this&lt;/a&gt; link
with materials which includes along with his lesson template, lists of
frameworks and other resources, and a whole lot more. If you&amp;#39;re
relatively new to teaching CS I&amp;#39;d strongly recommend you click on the
link and check out everything provided.&lt;/p&gt;
&lt;p&gt;
Next up was a teacher certification talk given by three educators fro
Gwinnett County Georgia. The talk covered the state of things in
Georgia and what they&amp;#39;ve been doing. I learned that in Georgia, one
has to have certification (or rather, an endorsement) to teach
CS. This can be earned either by taking an exam or by earning an
endorsement through an approved program. This group from Gwinnett
designed a one year and also acquired funding to cover costs. I like a
lot of what they&amp;#39;re trying to do. The Gwinnett team developed a one
year boot camp for current teachers and area trying to emphasize a
community model along with mentorship. Philosophically, at least from
the pedagogy and implementation side, their program sounds similar to
what I designed at Hunter in New York. My concern has to do with the
depth of CS knowledge they&amp;#39;re covering. This isn&amp;#39;t necessarily the
fault of the Gwinnett team though, it appears this is what Georgia&amp;#39;s
requiring and if they require content far deeper than Georgia
requires, the state might not approve of their program and teachers
might not attend. Their program maxes out at APCS-P which to me, is
way to elementary for a certified High School CS teacher. Those
teachers need, in my opinion, at least a bit beyond APCS-A along with
a good deal of breadth.&lt;/p&gt;
&lt;p&gt;
It was interesting to hear about what was going on in another state
and while it sounds like Gwinnett County Schools are doing some pretty
good work within the framework and constraints their state provides, I
fear that by setting the CS bar so low, Georgia is shortchanging their
students.&lt;/p&gt;
&lt;p&gt;
After lunch, I attended John Chapin&amp;#39;s session on &amp;#34;Machine Learning
Made (more) simple.&amp;#34; I loved this session. John&amp;#39;s material is all
&lt;a href=&#34;http://bit.ly/CSTA-ML&#34;&gt;here&lt;/a&gt;. John described and walked us through how he teachers linear
regression. His goal was to teach us (his students) how it works
rather than just use a library or black box toolkit. I&amp;#39;m 100% behind
this. Now, it is true that John&amp;#39;s at a public magnet school with high
achieving students just like I was at Stuyvesant and what he
presented, out of the box, probably can&amp;#39;t be  implemented in a typical
school but the approach and attitude certainly can and should.&lt;/p&gt;
&lt;p&gt;
John motivated the problem by asking what data would be helpful in
predicting home prices, he then had his class (us) work for a time in
groups to try to figure out relationships and even models to go from
the data to something to predict prices. He then stepped us through
unplugged hands on exercises that led us to and through gradient
descent. This in turn led to code and in the end, the class had both
written and understood a key machine learning technique.&lt;/p&gt;
&lt;p&gt;
Great session and I hope the attendees take this approach in some of
their CS classes. As I said, I don&amp;#39;t think this specific assignment
will go over well as is with all populations but I think the approach
can. I&amp;#39;ve successfully done similar things both my AP classes and in
pre AP programming classes like when I cover writing a Caesar Cipher
decryption program. The difference is that in the Linear Regression
lesson the class is learning a specific machine learning technique
that requires a certain level of mathematical sophistication to really
&amp;#34;get&amp;#34; while in my case, we do a simpler problem that uses many similar
techniques but with simpler mathematics and simpler application. My
problem sets the stage for that ML lesson a couple of years later. I
also do something similar in my &amp;#34;who played Spiderman&amp;#34; unit.&lt;/p&gt;
&lt;p&gt;
Great session. I was concerned that all of the AI sessions - and there
are many - will all be, taking out policy sessions about using
existing tools and libraries and not result in students really
understand what&amp;#39;s going on under the hood. This talk allayed that
concern.&lt;/p&gt;
&lt;p&gt;
I just hit the posters and exhibits for the last sessions and then
attended the closing keynote delivered by Gholdy Muhammid -
&amp;#34;Cultivating Genius and Joy in Education Through Culturally and
Historically Responsive Pedagogies.&amp;#34; I thoroughly enjoyed the
talk. Muhammid is an engaging, entertaining and funny speaker. My
takeaway was that our teaching should be evaluated by the Joy in the
classroom and the pursuit of knowledge as opposed to just the standards
based evaluation currently used which just measures facts and only
facts. Note that I say &amp;#34;just the standards…&amp;#34; and not instead of
them. To her credit Ms. Muhammid noted that standards - the specifics,
the skills, the facts are important as well. This is critical. One of
my annoyances at a lot of the K12 CS movement is that there&amp;#39;s
frequently only emphasis on the joy and they ignore the facts that at
the end of the day the teacher must know some, I don&amp;#39;t know, actual CS
and that students must learn it as well.&lt;/p&gt;
&lt;p&gt;
That said, Ms. Muhammid&amp;#39;s talk was really all about the type of
education reform we really need in our schools. I had a couple of
quibbles but it was a great talk. If CSTA releases a video, take the
time to watch it.&lt;/p&gt;
&lt;p&gt;
The day ended with Devorah, who played tourist by day, and I went for
drinks and some light dinner with the New York contingent at the
conference. A highlight was getting together with four students from
my CS certification program at Hunter including Marisa - a CSTA Equity
Fellow and incoming CSTA-NYC board member, Jessica and Josh - both CSTA-NYC
board members, and Victoria - the first person in New York State to
earn a Masters in CS Education from an approved certification program
and earn the associated license. So proud to have been privileged to
work with all four of them.&lt;/p&gt;
&lt;p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/csta-2024.jpg&#34; alt=&#34;/img/csta-2024.jpg&#34; title=&#34;/img/csta-2024.jpg&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>CS Research by HS Students</title>
      <link>https://cestlaz.github.io/post/research-in-k12-cs/</link>
      <pubDate>Tue, 28 May 2024 14:02:01 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/research-in-k12-cs/</guid>
      <description>&lt;p&gt;
Last week Devorah and I attended the Stuyvesant High School Alumni
Association&amp;#39;s annual fundraising gala. We were there as guests of the
Alumni Association since, as retired teachers, gala tickets are
generally out of our budget range. &lt;/p&gt;
&lt;p&gt;
We had a great time. I spent time with a bunch of former students
spanning the years, some current teachers I hadn&amp;#39;t seen since I left
Stuy, as well as new Stuy alums and current students. I had a great
conversation with one particular young man, a graduating Stuy senior,
who&amp;#39;s working on an interesting app. He asked if he could contact me
to talk about it. I told him, I&amp;#39;d love to so I hope he reaches out.&lt;/p&gt;
&lt;p&gt;
At one point, I was talking to a current Stuy teaching involved in
their research program - that is, the STEM research program, primarily
focused around the Regeneron Science Talent Search - Westinghouse to
us old timers. She lamented to me that she wished she could get one of
the CS teachers into the fold - to basically run a CS version of the
other research classes that already exist for Biology, Chemistry,
Physics, and Mathematics. Each of those classes target students in
their Junior years, hook them up with a researcher, and shepherd them
through the process of ultimately submitting a project to the big
competition.&lt;/p&gt;
&lt;p&gt;
I had to explain that I actually did run a CS &amp;#34;research&amp;#34; course back
in the day but it was actually a bogus cover course since I didn&amp;#39;t
think that high school students, even with Stuyvesant&amp;#39;s multi-year
program had sufficient CS and Math to by and large do good research.&lt;/p&gt;
&lt;p&gt;
The class was created primarily because, at the time, I had set up and
was running Stuy&amp;#39;s network. I got neither pay nor time compensation
for this. I also typically worked with a handful of students. They
learned a lot about Linux and networking and helped keep things
running. They also got nothing for their troubles - no grade, no
pay.&lt;/p&gt;
&lt;p&gt;
The deal was that we&amp;#39;d create the class, they&amp;#39;d learn the networking
stuff and we&amp;#39;d all have some time to keep things running. The kids
would also get a nice high grade rewarding their work. They also had
to cobble together a &amp;#34;research&amp;#34; project that they could enter into
Westinghouse/Intel/Siemans/Regeneron.&lt;/p&gt;
&lt;p&gt;
Over the years, the class had some students who wanted to do the
research thing and were not so much there for the networking
side. Those kids had to do a more legit research project. Now,
occasionally I had a kid who was able to do an excellent
project. Spike&amp;#39;s Sporknet project which was a design for a scalable,
anonymous network. Really good work and ahead of his time. Brad&amp;#39;s work
on Captcha was also really great. The thing is, though, that most kids
just didn&amp;#39;t have the background to do solid CS research.&lt;/p&gt;
&lt;p&gt;
Even though Stuy&amp;#39;s program was and is arguably the most rigorous HS CS
program in the country, by second term Junior year, they&amp;#39;re just
finishing up CS1 (APCS-A). They&amp;#39;d be studying data structures during
the second half of 11th grade. Since the research projects were always
due in the early November, senior year courses don&amp;#39;t have much affect.&lt;/p&gt;
&lt;p&gt;
On the math side, some might be taking calculus during their junior
year but many will be in precalc. Few will have taken statistics and
none will have taken discrete math or linear algebra.&lt;/p&gt;
&lt;p&gt;
These kids were and are tremendously talented but they just don&amp;#39;t have
the knowledge base yet. On top of that, on the programming side, they
haven&amp;#39;t yet gotten to the point where they can write large complex
programs reasonably quickly. That doesn&amp;#39;t typically happen until some
time senior year, or the semester after data structures.&lt;/p&gt;
&lt;p&gt;
Now, in the sciences, the kids were always hooked up with a researcher in a
lab. In the best case, they can do legit research. At Stuy, in all
areas, including CS, there are usually a couple of outlier kids who
had exposure early on and come in with a wealth of experience in their
resaerch field. In the worse case though, these kids become glorified
lab assistants. The thing is, though, this can be a really good
experience. They are there for the entire process and learn a lot. In
CS, the equivalent is basically having the kids implement an already
designed algorithm or create part of a software system that isn&amp;#39;t
really showing them the research process. From what I saw, it just
wasn&amp;#39;t as rich of an experience. &lt;/p&gt;
&lt;p&gt;
After a few years, I dropped the network - too many headaches and soon
after, got rid of the &amp;#34;research&amp;#34; course. I think it was the right
choice. The research course could have continued and been a good
experience for the couple of outlier kids each year who came in super
strong but that wouldn&amp;#39;t be a sensible use of resources with each
class having over 1000 students.&lt;/p&gt;
&lt;p&gt;
So, unfortunately, I wasn&amp;#39;t able to help this Stuy research teachers
case for CS research in high school. I did point out that the kids
might be able to leverage their CS and coding skills in their research
in other areas. I had one student who ultimately did Physics research
who made extensive use of his CS skills for data analysis and
visualization. I believe he was a semi-finalist. I&amp;#39;ve also had
former students do Astronomy research in college and grad school using
CS skills they got at Stuy.&lt;/p&gt;
&lt;p&gt;
So, I guess that&amp;#39;s it. Am I wrong on this? I certainly could be. Maybe
I wasn&amp;#39;t back then but times have changed. Sure, if a school had
unlimited resources for unlimited classes, having a CS research class
would be great even if it only had a handful of students. With budget
and space constraints though, I think a full class of another advanced
elective is more valuable.&lt;/p&gt;
&lt;p&gt;
All this said, I&amp;#39;d love to hear differing opinions.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Should we use MongoDB in High School</title>
      <link>https://cestlaz.github.io/post/mongodb-hs/</link>
      <pubDate>Wed, 01 May 2024 11:14:59 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/mongodb-hs/</guid>
      <description>&lt;p&gt;
Should we use MongoDB in High School? That&amp;#39;s the question. Usually
when I give a post such a title, I already have an opinion - it&amp;#39;ll be
a yes or no and if it&amp;#39;s yes, I&amp;#39;ll have a plan.&lt;/p&gt;
&lt;p&gt;
Not this time. My gut tells me there&amp;#39;s a place for it but I&amp;#39;m not sure
where. Besides, that&amp;#39;s not what this post is really about.&lt;/p&gt;
&lt;p&gt;
At one point during SIGCSE 2023, I stopped by the MongoDB booth. Had a
couple of great conversations with the people there. I wasn&amp;#39;t looking
for how I might use it in my classes - I knew I&amp;#39;d be retiring soon but
I did want to convey how much I liked the product and how supportive
they&amp;#39;ve been towards some of my efforts both K12 and while I was at
Hunter, I mean I still have more MongoDB shirts than pretty much any
other type of swag shirt from when they donated so many for some high
school hackathons I&amp;#39;ve run.&lt;/p&gt;
&lt;p&gt;
This year, at SIGCSE, I reconnected with my new MongoDB friends from
2023 and we started asking if there were a place for MongoDB in a
typical High School. Clearly there was at Stuy but I covered MongoDB
there in a senior elective after the kids had already finished a CS0
class as well as a college CS1 and CS2.&lt;/p&gt;
&lt;p&gt;
Now MongoDB is much more advanced than when I started using it but
even back then there was a lot to like. It stored documents
essentially in dictionaries which made things much simpler than
SQL. You also formed dictionaries to form queries which might have
been trickier to &amp;#34;get&amp;#39; than SQL with things like &amp;#34;SELECT NAME from
PEOPLE where AGE=30&amp;#34; or something like that but much easier to debug
and automate since one deals with a data structure to do it in MongoDB
as opposed to string manipulation for old school SQL. It was also
helped from the fact that most student projects didn&amp;#39;t benefit from
the relational SQL model. There was also an open source server you
could install and self host.  Nowadays MongoDB is much more capable
for example it&amp;#39;s &lt;a href=&#34;https://www.mongodb.com/resources/basics/databases/data-lake-vs-data-warehouse-vs-database&#34;&gt;data lake&lt;/a&gt; features.&lt;/p&gt;
&lt;p&gt;
I don&amp;#39;t think MongoDB is &lt;strong&gt;the&lt;/strong&gt; tool to universally use in High School but
my gut tells me there&amp;#39;s a place for it.&lt;/p&gt;
&lt;p&gt;
The cool thing to me is that we&amp;#39;re now exploring this. Me, a
few teachers I&amp;#39;ve gathered, and some new friends at MongoDB. The
interesting thing is how it came about. Many of the K12 company based
initiatives were the result of the company (or college) deciding that
they wanted to do something in the K12 space. This frequently comes
with a certain level of hubris that they can do it better. Not always,
but frequently. The small companies and startups then work to generate
interest and ultimately market share. The big boys are more frequently
anointed since so few K12 CS educators are currently armed to really
evaluate what they&amp;#39;re seeing.&lt;/p&gt;
&lt;p&gt;
This was different. Nothing coming from the top. What started as a
serindipidous conversation between someone on the education team at
Mongo and me, an old education curmudgeon. We both asked &amp;#34;does it make
sense?&amp;#34; We didn&amp;#39;t know the answer so we&amp;#39;re exploring.&lt;/p&gt;
&lt;p&gt;
Tomorrow morning I&amp;#39;ll be going to MongoDB World Local in New York and
hope to meet a couple more people on the MongoDB team. In the next few
weeks, I&amp;#39;ll be talking to some teachers who also hope to explore the
MongoDB in high school question. After that, maybe not until the Fall
if people are away for the summer, we&amp;#39;ll get together and start to get
to work.&lt;/p&gt;
&lt;p&gt;
Either we&amp;#39;ll see that MongoDB probably doesn&amp;#39;t make sense in high
school or we&amp;#39;ll figure out where and how. It&amp;#39;ll be a fun process and
if we do figure it out, you can bet it&amp;#39;ll make more sense than any of
the typical initiatives that come from above.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>New York - where actual teacher preparation in optional.</title>
      <link>https://cestlaz.github.io/post/knowledge-optional/</link>
      <pubDate>Thu, 01 Feb 2024 14:03:17 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/knowledge-optional/</guid>
      <description>&lt;p&gt;
This morning, I read Arthur Goldstein&amp;#39;s latest &lt;a href=&#34;https://arthurgoldstein.substack.com/p/anybody-can-teach-newcomers-says&#34;&gt;blog post&lt;/a&gt;. Arthur, is a
relatively recently retired NYC public school teacher, a UFT
(United Federation of Teachers) chapter leader, and a frequent critic
of Michael Mulgrew, the current and long term UFT president.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m a union guy through and through but I also, like Arthur, believe
that UFT&amp;#39;s leadership is neither pro-teacher nor pro-student but
rather pro-themselves. It&amp;#39;s a rather sad state of affairs.&lt;/p&gt;
&lt;p&gt;
Today, Arther shared Mulgrew&amp;#39;s latest &amp;#34;accomplishment.&amp;#34; He, along with
the city and state have relaxed the requirements for bilingual and ENL
(English as a new language) certifications. This is in response to the
recent massive influx of newcomers.&lt;/p&gt;
&lt;p&gt;
The deal has two parts. The first makes all the sense in the world. If
a teacher holds the credentials for multiple certifications - one for
bilingual and one not, they will be able to activate the bilingual
cert with no penalty - that is they won&amp;#39;t lose salary, tenure,
seniority or anything else. This should always have been the case and
it should in fact he true, or at least partially true for any
certification area. Maybe not the tenure thing but even in that case,
there should be some modified rule to encourage teachers to switch to
their most needed certification and not be penalized for doing so.&lt;/p&gt;
&lt;p&gt;
The second part is the problematic one. They&amp;#39;re easing the
requirements for the bilingual certification. Now, instead of
completing the coursework and taking an standardized assessment, you
only have to do one or the other. That is, take a standardized test, a
single instance platform on which success certainly doesn&amp;#39;t indicate a
teacher is qualified or take a handful  of courses.&lt;/p&gt;
&lt;p&gt;
Arthur was lamenting over the exam, but given the number of education
programs in NY where you just show up and earn an &amp;#34;A&amp;#34; or even for some
you barely have to show up, this is basically just a rubber stamp for
bilingual teachers.&lt;/p&gt;
&lt;p&gt;
Here&amp;#39;s the language from the UFT&amp;#39;s release on the program:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Certified teachers and pupil personnel services professionals (i.e.,
social workers, school counselors and psychologists) can now complete
either the examination requirement or the enrollment and education
requirements, instead of both. That means candidates can pass the
Bilingual Education Assessment and/or the Content Specialty Test in
ESOL, if available, in lieu of completing coursework and matriculating
in a registered program leading to a bilingual education extension
and/or an ENL certificate.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This struck me as awfully similar to the CS SOCE (Statement of
Continued Eligibility). In New York State, even though we now have
computer science certification, they created the SOCE which basically
said that as long as you taught a single CS class in the last couple
of years, if you fill out a form, you&amp;#39;ll be essentially certified to
teach any CS in your school for the next 10 years.&lt;/p&gt;
&lt;p&gt;
Both of these initiatives attempt to address the lack of qualified
teachers. Bilingual for the influx of new non native English speakers
and CS for the new field of study that the city and state have been
pushing.&lt;/p&gt;
&lt;p&gt;
Both of these initiatives will, and in the Case of CS have resulted in
students being served by unqualified teachers both now and for the
next decade and such actions should be criminal.&lt;/p&gt;
&lt;p&gt;
True, some teachers thrown into a CS classroom know their stuff and
some are working diligently to learn but many aren&amp;#39;t there and to many
are making no serious move to get there.&lt;/p&gt;
&lt;p&gt;
In each of my first to cohorts for Hunter&amp;#39;s advanced certificate
program, I had well over 100 applicants. These were supposed to be the
most prepared of the city&amp;#39;s CS teachers - all culled through the
CS4All program and most had completed multiple years of New York&amp;#39;s CS
training - much of which was provided by organizations like Code.org.&lt;/p&gt;
&lt;p&gt;
My CS prerequisites were pretty simple - a code sample in a text based
language that showed some basics. A program with a function that
returned the smallest value in an array or list of numbers would have
covered all the requirements and then some. That&amp;#39;s also a typical
early assignment in a CS0 class.&lt;/p&gt;
&lt;p&gt;
Each year, only a very small number of applicants - something like
under 10, maybe under 15, could complete this, another handful were able
to, with the help of self study resources like the Runestone academy&amp;#39;s
Python or Java texts got up to speed. Each of the first two cohorts
had a little over 20 students including a handful of masters
candidates. All of the masters candidates came in with more than the
required CS background.&lt;/p&gt;
&lt;p&gt;
Now, for those applicants who learned what they needed and were
accepted, my hat was off to them, they worked hard and did what they
had to do. They were great members of the cohort.&lt;/p&gt;
&lt;p&gt;
On the other hand, of the hundreds who never followed up, many had no
idea what I meant by &amp;#34;in a text based language like Python, Java, or
Javascript,&amp;#34; or similar parts of the application - and many of them
had been teaching CS for multiple years and attending DOE training for
multiple years.&lt;/p&gt;
&lt;p&gt;
Now, New York State comes along and says that they can all teach CS
for 10 more years, no questions asked.&lt;/p&gt;
&lt;p&gt;
The kids will suffer.&lt;/p&gt;
&lt;p&gt;
How can the state get away with this? They don&amp;#39;t care. Neither do the
teacher&amp;#39;s Unions (and again, I&amp;#39;m a big Union guy) - their current
teachers can do whatever they want and all is good. The students don&amp;#39;t
know how they&amp;#39;re being harmed and overall, parents are none the
wiser. I&amp;#39;ve mentioned that a number of my Hunter undergrads came in
having scored a 3, 4, or frequently 5 on APCS-Principals and while
some had a good background, way more than should have would have been
better off not taking anything. All these kids were super bright and
motivated. It wasn&amp;#39;t there fault they were sold a bill of goods.&lt;/p&gt;
&lt;p&gt;
Back to the bilingual issue - again, the DOE, NYSED and UFT can get
away with it because on the surface, it looks good - we can teach our
newcomers but they&amp;#39;re the ones who will suffer. And of course, they&amp;#39;re
a population with no voice.&lt;/p&gt;
&lt;p&gt;
Should be criminal.&lt;/p&gt;
&lt;p&gt;
So, that&amp;#39;s my rant for the day. I promise, more CS teaching content
and positive posts to come.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Do you really need a degree for tech - an MLH podcast</title>
      <link>https://cestlaz.github.io/post/degree-for-tech/</link>
      <pubDate>Tue, 27 Jun 2023 08:06:43 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/degree-for-tech/</guid>
      <description>&lt;p&gt;
Yesterday, I noticed a LinkedIn post by my friend &lt;a href=&#34;https://www.linkedin.com/in/jonmarkgo/&#34;&gt;Jonathan Gottfried&lt;/a&gt;
of &lt;a href=&#34;https://mlh.io/&#34;&gt;Major League Hacking&lt;/a&gt; about an MLH podcast, &lt;a href=&#34;https://podcasts.bcast.fm/the-state-of-developer-education&#34;&gt;The State of Developer
Education&lt;/a&gt;. The episode he shared caught my eye. It was titled &amp;#34;Do you
Really Need a Degree for Tech?&amp;#34; Here&amp;#39;s the YouTube &lt;a href=&#34;https://www.youtube.com/watch?v=agD0Q4vhi6w&#34;&gt;link&lt;/a&gt;. It featured
Lauren Schaeffer, Developer Advocate for Grammarly.&lt;/p&gt;
&lt;p&gt;
I enjoyed listening to Jon and Lauren&amp;#39;s conversation and recommend
that you too take a listen, Lauren talked a bit about her journey and
highlighted some happenings and practices along the way in school,
IBM, MongoDB, and finally Grammarly. Truth be told, though, I didn&amp;#39;t
feel that they really dove into the title question of &amp;#34;Do you really
need a degree for tech?&amp;#34;&lt;/p&gt;
&lt;p&gt;
The podcast did make me think a bit more about the title question and
we&amp;#39;ll get to that later but I wanted to riff on one point Lauren made
that struck a chord with me. After pivoting from a straight
engineering role to a DevRel role, she worked it so that she could
spend one quarter a year working on an eng team. I love this. Really
smart. It can only help a customer if their DevRel people keep their
tech skills sharp and are in the trenches with the developers and
likewise the transfer of knowledge the other way has got to help the
straight dev teams. I don&amp;#39;t think this could be a universal practice
though because I&amp;#39;ve met many DevRel people and while some, like
Lauren, clearly have the engineering chops, others I&amp;#39;ve met don&amp;#39;t, or
at least don&amp;#39;t yet have a strong enough tech background to be dumped
in to an eng team for a quarter and be productive.&lt;/p&gt;
&lt;p&gt;
Besides loving the idea, even with the limitations, it&amp;#39;s something I
thought about with respect to teaching. When I was working on putting
together my teacher certification programs I thought about tech
internships for teachers as a sabbatical solution or summer
enrichment. Teachers would be certified through a strong CS Ed program
and then later, when they are ready for a sabbatical or a summer
boost, and this would mostly be aimed at high school teachers, they
could do a tech internship set up for them. I even talked to a number
of tech leaders who seemed to like the idea.&lt;/p&gt;
&lt;p&gt;
It made all the sens in the world to me. A high school teacher in the
sciences might work in a lab during their summers but for a high
school CS teacher working with a CS researcher would be pretty
worthless. Very little, if anything would end up enhancing that
teacher&amp;#39;s in class performance when they were back to teaching. A tech
internship, on the other hand would up their software engineering
game, bring them up to speed with best and industry practices, and
even give them the platform to tell their kids about how &amp;#34;when they
were there.&amp;#34;&lt;/p&gt;
&lt;p&gt;
Unfortunately, I think that&amp;#39;s a program that will never come to
light or at least it won&amp;#39;t for a good long time. Now that we&amp;#39;re seeing
cert programs pop up, we&amp;#39;re getting what I feared. A few solid
programs and many more weak certification mills. Teachers going
through the latter will in no way be prepared for a tech internship
and their students will be the worse for it. For a teacher tech
internship program to exist, we&amp;#39;ll need to wait for the next few crops of
teachers to work their way to their licenses and hope that they select
the strong certification programs.&lt;/p&gt;
&lt;p&gt;
So, that was my big takeaway from the podcast but I do encourage you
to listen to the whole thing.&lt;/p&gt;
&lt;p&gt;
To get back to the title question of &amp;#34;is a degree necessary?&amp;#34; - that&amp;#39;s
a debate that&amp;#39;s gone on for a while now and it frequently focuses on
code school vs college. I think there are a couple of additional
wrinkles to add.&lt;/p&gt;
&lt;p&gt;
Are we talking about K12 –&amp;gt; Code school –&amp;gt; workforce or are we
talking about K12 –&amp;gt; college for non CS –&amp;gt; Code school –&amp;gt; &amp;gt;
workforce. These are two very different things. I recently wrote about
&lt;a href=&#34;https://cestlaz.github.io/post/tech-and-lib-arts/&#34;&gt;liberal arts&lt;/a&gt; education and how I feel that a BA in CS can be more
valuable than a BS in CS for many people and that the liberal arts, if
taken the right way by a student that&amp;#39;s ready for them can be a big
boon to our society as we try to get a handle on the ethical and AI
related issues that have been too long ignored since we decided that
education should only be for jobs.&lt;/p&gt;
&lt;p&gt;
The code school in some ways can be viewed as a lightweight CS minor
focused on industry so is it really different than someone doing an
undergrad in anything and taking enough CS for a job? Probably
not. The CS major probably gives the student more adaptability and
grounded base knowledge but then the CS major also requires a lot of
cruft only useful for the future PhD candidate.&lt;/p&gt;
&lt;p&gt;
On the other hand, K12 right to the code school, particularly given
the damage caused by common core, NCLB and the like will miss serious
opportunities on the &amp;#34;soft&amp;#34; side from college and yes, the humanities.&lt;/p&gt;
&lt;p&gt;
No answers here but more to think about.&lt;/p&gt;
&lt;p&gt;
So, once again, check out the &lt;a href=&#34;https://www.youtube.com/watch?v=agD0Q4vhi6w&#34;&gt;podcast&lt;/a&gt;. I&amp;#39;m going to have to look at
the other released episodes myself when I get a chance.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>A poor craftsman blames his tools</title>
      <link>https://cestlaz.github.io/post/ides-tools/</link>
      <pubDate>Mon, 13 Feb 2023 06:48:49 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/ides-tools/</guid>
      <description>&lt;p&gt;
Yesterday, Alfred Thompson posted on students &lt;a href=&#34;https://blog.acthompson.net/2023/02/cs-studentslearn-your-ide.html&#34;&gt;knowing their
development environments&lt;/a&gt;. Alfred&amp;#39;s post was inspired by a related post
by &lt;a href=&#34;https://www.cs.uni.edu/~wallingf/blog/archives/monthly/2023-02.html&#34;&gt;Eugene Wallingford&lt;/a&gt;. Eugene&amp;#39;s post was about more than development
environments and both his and Alfred&amp;#39;s posts are worth a read.&lt;/p&gt;
&lt;p&gt;
Being a tool wonk I thought I&amp;#39;d add my two cents.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve always been a tool wonk. Use the right tool for the job and if
you need to buy one, don&amp;#39;t cheap out - get the best value right
tool. This got me in trouble with Devorah when I spent $309 around
thirty years ago at Bridge Kitchenware for a K5SS - 5 quart Kitchenaid
mixer when we were first living together. Back then $309 was a
lot of money for us and to spend on a mixer…. Over the years, after
countless loaves of bread, cakes and more, the mixer has proven its
worth.&lt;/p&gt;
&lt;p&gt;
Likewise my Cuisinart. Nothing fancy, just a motor in a box. Both are
older than our two children. I also love my F Dick 9 inch chefs
knife although that was a bit of a luxury purchase. I also, equally
love my much less expensive Victorinox boning knife.&lt;/p&gt;
&lt;p&gt;
Of course, the right tool for me - the home cook, is not necessarily
the right tool for the professional. A restaurant kitchen or butcher
shop is much more likely to have inexpensive Dexter Russel knives
rather than pricey Wusthof ones and they&amp;#39;ll use a regular
sharpening/exchange service. Makes sense - in a restaurant the knives
will be used more frequently by more people who on the one hand, know
how to use the tools better, but on the other might take less
individual care of them.&lt;/p&gt;
&lt;p&gt;
Everything that is true about home vs professional tooling can also
inform our CS classroom tooling but it&amp;#39;s not quite as simple.&lt;/p&gt;
&lt;p&gt;
True, students should know their tools and know them well but this
should be tempered by what a teacher is trying to do with the class at
any given time. When encouraging students to really learn a
development environment you have to balance the short term benefit,
the long term benefit, and the cost. that cost is usually up front
time. This is also true for professional developers.&lt;/p&gt;
&lt;p&gt;
I remember talking to a friend who got a little logic puzzle from a
street fair. It involved rearranging colored lines of blocks. He wanted
to write a program to solve it. So, he started to set up and tweak his
programming environment. He ended up spending so long setting things
up just right that in the meantime, his wife and kids all individually
solved the puzzle by hand.&lt;/p&gt;
&lt;p&gt;
One can argue that for future related development, my friend ended up
ahead but since there wouldn&amp;#39;t likely be related development the time
was lost and it would have been much faster just to solve the problem
at hand. &lt;/p&gt;
&lt;p&gt;
The other rub is that professional tools can sometimes be too complex
or can do too much for students. I love autocomplete when using
obscure libraries but I don&amp;#39;t think it helps students when they&amp;#39;re
first learning basic language constructs. Same for large provided
template code.&lt;/p&gt;
&lt;p&gt;
The thing with IDEs is that you have to find the right one that
supports the way you teach.&lt;/p&gt;
&lt;p&gt;
I know teachers that want to do everything on the command line. They
want the students to walk through the process from source code -&amp;gt;
class file -&amp;gt; running on the jvm and the command line gives them that
option. They also might want to teach command line tools. The command
line also, is in some ways the simplest approach. One place to input
commands, one place to see results.&lt;/p&gt;
&lt;p&gt;
On the other hand, it can be intimidating and it doesn&amp;#39;t benefit from
all the supports an IDE can give. Personally, I have mixed feelings on this
approach. Sometimes it&amp;#39;s been the right choice for my students, other
times, not so much. &lt;/p&gt;
&lt;p&gt;
I know other teachers who love BlueJ - a graphical IDE that focuses
on objects. It really seems to shine in helping to clarify OOP but it
never worked for me. Probably because I&amp;#39;m not a huge OOP fan. That
said, for some teachers it&amp;#39;s the sweet spot IDE.&lt;/p&gt;
&lt;p&gt;
Others dump their students into professional IDES like Eclipse or
nowadays VSCode. I feel these give too much and have too much
complexity. Others disagree and that&amp;#39;s fine. What&amp;#39;s right for me and my
students might not be right for another teacher and class.&lt;/p&gt;
&lt;p&gt;
For me the sweet spot IDE for new learners are things like DrJava,
DrRacket, or Thonny. Very simple lerning IDEs. They&amp;#39;re not made for
professionals so they don&amp;#39;t integrate with complex build systems. they
give students some structure and support but not too much.&lt;/p&gt;
&lt;p&gt;
Most recently, I&amp;#39;ve started students on Thonny for Python then
transitioned them to other tools. I encourage them to do a deep dive
between semesters or over the summer and discover what really works
for them. Through my classes, though, I try to demonstrate how knowing
your tools benefits you as a developer or even just a user. If I can
show how I leverage the Unix shell, I do, if there&amp;#39;s something in
Emacs that makes me more productive, I&amp;#39;ll show it. I&amp;#39;ll also mention
that in most cases, whatever tools they&amp;#39;re using will have an
equivalent and they should explore it.&lt;/p&gt;
&lt;p&gt;
While it&amp;#39;s true that a poor craftsman blames his tools, a good
craftsman knows their tools and leverages them to great effect. While
we&amp;#39;re teaching CS, programming, and languages, it&amp;#39;s worth discussing
tooling as well.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Some Professional Development Is Worthwhile</title>
      <link>https://cestlaz.github.io/post/some-pd-is-worthwhile/</link>
      <pubDate>Wed, 26 Oct 2022 16:29:50 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/some-pd-is-worthwhile/</guid>
      <description>&lt;p&gt;
No, I&amp;#39;m not walking back anything from &lt;a href=&#34;https://cestlaz.github.io/post/why-pd-wont-do/#disqus_thread&#34;&gt;my last post&lt;/a&gt;. I still think
we have to stop using professional development as the primary means
for preparing CS teachers but I wanted to take a minute to make it
clear that while there&amp;#39;s plenty of lousy PD out there, there&amp;#39;s also
plenty of good stuff.&lt;/p&gt;
&lt;p&gt;
For bad PD, it&amp;#39;s frequently mandated and frequently neither useful or
relevant or even if its potentially relevant, but the time it becomes
useful you don&amp;#39;t remember it.&lt;/p&gt;
&lt;p&gt;
For good, first we look to our fellow teachers. A couple of years ago
at SIGCSE, they released the results of a survey of CS educators - I
think it was limited to colleges but the results were both expected
and interesting. It turned out that the majority of respondents
considered the best resource to improve their teaching practice to be
techniques learned from other teachers. I believe first it was in
department and then in external meetings but I could be wrong. &amp;#34;The
research,&amp;#34; on the other hand, was way down the list.&lt;/p&gt;
&lt;p&gt;
PD delivered by colleages is the best and can happen at all levels. A
teacher might not be a CS ace nor may they be very experienced but
they can run a session on something they tried and how it worked (or
didnt&amp;#39;) and I&amp;#39;ll take that any day over something from a &amp;#34;thought
leader.&amp;#34;&lt;/p&gt;
&lt;p&gt;
Of course, back to yesterday&amp;#39;s post, you can&amp;#39;t prepare a CS teacher
that way - you can take a teacher and add trick, a technique, a
practice, or a topic.&lt;/p&gt;
&lt;p&gt;
Great stuff for what it is when used appropriately.&lt;/p&gt;
&lt;p&gt;
Every time we would have those school wide required PDs, we&amp;#39;d all look
at the offerings and seek out the good stuff being delivered by our
fellow teachers.&lt;/p&gt;
&lt;p&gt;
There&amp;#39;s another class of PD that can also be excellent although,
again, it&amp;#39;s not a replacement for full teacher preparation. That&amp;#39;s
when some group goes in and isn&amp;#39;t trying to &amp;#34;train the teachers from
scratch to proficient&amp;#34; but rather understands that they&amp;#39;re delivering
a limited experience. This might be to expose a new audience to CS on
an introductory level or a non specialist on how they can deliver a
starter set of CS experiences or it could be something deeper but
it&amp;#39;ll be focussed on growing the teachers tool set and knowledge base,
not on delivering some set scripted experience.&lt;/p&gt;
&lt;p&gt;
This type of PD seems to frequently be delivered by researchers and
can be excellent stuff. It can also be delivered by content providers.&lt;/p&gt;
&lt;p&gt;
Finally, content providers can and do deliver worthwhile PD as long as
its taken in the right context. If you&amp;#39;re a knowledgeable CS teacher
you might love some provider&amp;#39;s curriculum and their training can be
the best way to go. Nothing inherently wrong here as long as the
training is not the actual teacher prep.&lt;/p&gt;
&lt;p&gt;
One of the best places for all of these types of PDs are at
conferences like the CSTA conference and that conference has
historically had the best of all versions of PD.&lt;/p&gt;
&lt;p&gt;
So, there it is, I&amp;#39;m not down on PD but I recognize that there&amp;#39;s a lot
of garbage PD to go with a lot of good stuff. The problem and the
danger is that it&amp;#39;s too often used as a replacement for real teacher
prep.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Why PD doesn&#39;t work for CS</title>
      <link>https://cestlaz.github.io/post/why-pd-wont-do/</link>
      <pubDate>Mon, 24 Oct 2022 08:01:48 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/why-pd-wont-do/</guid>
      <description>
&lt;div id=&#34;outline-container-headline-1&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-1&#34;&gt;
EDIT
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-1&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
I was reminded that by referring to CS4All and what it&amp;#39;s doing in NYC
people could read an implication that the many hard working educators
are not doing a yeoman&amp;#39;s job and indeed they are. They&amp;#39;ve been doing
the heavy lifting from day 1 to bring opportunities to students and I
did not mean to impugn their work or efforts in any way.&lt;/p&gt;
&lt;p&gt;
I also want to mention that I know that there are many educators
working in NY in CS who have been providing direct support for
teachers outside of PD and this post is not about them and their good
work. This is about what PD providers provide and how that is no
longer a good model for us to use for teacher prep. &lt;/p&gt;
&lt;p&gt;
I apologize to educators who read this prior to this edit who felt
that I was referring to them and I hope this addition clears things
up.&lt;/p&gt;
&lt;p&gt;
That said, I&amp;#39;m leaving the post as is because CS4all in NYC has set up
the current system and as I said below &lt;strong&gt;it was correct and necessary at
the start to do it that way&lt;/strong&gt; but it is now clear that the CS4ALl
leadership has to change directions with regards to using professional
development as a model for preparing teachers.&lt;/p&gt;
&lt;p&gt;
I also am leaving it because there are other states along with
nationwide CS PD providers that claim that the PD  model is adequately
preparing CS teachers and it isn&amp;#39;t.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-2&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-2&#34;&gt;
Original Post
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-2&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
Overall, I&amp;#39;ve been down on the Professional Development model that has
been used nationwide to &amp;#34;prepare&amp;#34; our CS teachers. Yes, I&amp;#39;ll happily
admit that in order to get to a lot of teachers quickly, starting
teachers off with PD was essential but too many people think it&amp;#39;s
doing fine and that&amp;#39;s a problem.&lt;/p&gt;
&lt;p&gt;
Before getting to the specifics of CS PD let&amp;#39;s think about PD in
general. There are different types of PDs.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Teachers sharing practices&lt;/li&gt;
&lt;li&gt;conferences and meetings that teachers choose to attend&lt;/li&gt;
&lt;li&gt;PD run by content providers, that is, people selling something&lt;/li&gt;
&lt;li&gt;PD required by schools and districts&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The first two types are usually considered good, the third, sometimes
but not as often. The fourth, fuggedaboudit.&lt;/p&gt;
&lt;p&gt;
Given that there were and are so few CS teachers that really know CS
and how to teach it, CS training, which started with PD, started with
content providers. As I said at the start, this was essential at first
but had and has many problems.&lt;/p&gt;
&lt;p&gt;
First off, content providers aren&amp;#39;t teaches. Sure, they often hire people
who have taught but usually for a limited period of time. Second,
since they&amp;#39;re pushing their product they&amp;#39;re usually teaching a pretty
scripted experience and not going beyond either the way they envision
their lessons to progress nor to broader possible content. This was
essential at the start but it&amp;#39;s not really preparing teachers. It&amp;#39;s
preparing actors for a play. Unfortunately, those 30 or so other
actors in the room (the students) are all doing improv.&lt;/p&gt;
&lt;p&gt;
Even with those problems content provider provided PD can certainly
have value but there&amp;#39;s one more problem and it&amp;#39;s HUGE. Professional
Development has no teacher accountability or follow up. When you
attend a PD there are no exams or required projects, no assessment, no
grade for credits - nothing. You attend, you&amp;#39;re done.&lt;/p&gt;
&lt;p&gt;
This is 100% the right way to do it for most fields but not when this is
how you&amp;#39;re initially training teachers. I&amp;#39;ve seen this in the
applicants to my program. I mentioned it in earlier posts but I&amp;#39;ve
seen far too many applicants who&amp;#39;ve attended multiple years of CS4All
training in NYC. Training provided by a who&amp;#39;s who of providers and
they can barely get past hello world. I&amp;#39;ve even seen it &lt;strong&gt;in&lt;/strong&gt; my
program where a couple of participants have viewed our courses as PDs
and really tried to dial it in. Fortunately, the vast majority get
that we&amp;#39;re offering legit grad courses for grad credits and while
you&amp;#39;ll work (and hopefully have fun) through the program, you&amp;#39;ll
indeed grow as a  CS teacher throughout. &lt;/p&gt;
&lt;p&gt;
Combine the fact that PD is never assessed by the fact that NY state
is allowing unprepared teachers to teach CS for the next 10 years and
we&amp;#39;ve got a problem.&lt;/p&gt;
&lt;p&gt;
I don&amp;#39;t really have an answer - PD in general should remain as it is
in most fields but it should no longer be used as primary teacher
preparation. Even though I strongly believe this, nothing will change
based on the state&amp;#39;s stance and the fact that city and state
politicians gain more by rubber stamping CS teachers and saying
they&amp;#39;ve done it rather than facing the fact that they&amp;#39;re going to
exacerbate the difference between the haves - who can make sure
their kids get well prepared teachers, and the have nots who will get
the PD trained kind.&lt;/p&gt;
&lt;p&gt;
What the city and state should be doing is funding teachers to take
advanced certificate programs like mine and students to take CS
teacher preparation programs, also like mine but like the ones offered
by Siena College and others as well. Do this and reduce the number of
years during which you don&amp;#39;t need certification from 10 years to 5 and
you&amp;#39;ve got a real solution.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m not holding my breath.&lt;/p&gt;
&lt;p&gt;
In any case, there are teachers out there who want to do it right and
there are charitable groups like Gotham Gives and Google who&amp;#39;ve helped
us at Hunter move around 100 teachers from where they started to
becoming solid CS teachers.&lt;/p&gt;
&lt;p&gt;
Regardless of what the city and state do, we need more organizations to
get on board funding good programs and more good programs becoming
available to truly prepare teachers. If this happens, I do believe the
teachers will come.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>We need certified teachers, not professionally developed teachers.</title>
      <link>https://cestlaz.github.io/post/certification-needed/</link>
      <pubDate>Wed, 28 Sep 2022 17:35:05 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/certification-needed/</guid>
      <description>&lt;p&gt;
Last time I mentioned that there are many teachers teaching CS in NY
that have no intention of earning the new certification and also don&amp;#39;t
really know the subject. People might not want to here this but it&amp;#39;s
true. I don&amp;#39;t blame the teachers for this since they&amp;#39;ve been
repeatedly told that &amp;#34;CS is super easy&amp;#34; and that their PD training
100% makes them CS teachers and really prepares them.&lt;/p&gt;
&lt;p&gt;
It doesn&amp;#39;t&lt;/p&gt;
&lt;p&gt;
With the new certification, one would hope that teachers who took one
for the team and muddled through would either get certified or go
back to teaching their primary subject but that probably won&amp;#39;t be the
case.&lt;/p&gt;
&lt;p&gt;
Why?&lt;/p&gt;
&lt;p&gt;
Because the state is allowing it.&lt;/p&gt;
&lt;p&gt;
Current teachers can (or could) file for the SOCE - Statement of
Continuing Eligibility. Basically if you taught CS you can fill out a
form and keep teaching it for 10 years regardless of
qualifications. It has limitations - it&amp;#39;s tied to the school you filed
the SOCE at - if you transfer it&amp;#39;s no longer valid but it basically
means that if you taught CS, good or bad, you can keep doing it at
your current school.&lt;/p&gt;
&lt;p&gt;
This is not good.&lt;/p&gt;
&lt;p&gt;
The idea of giving a time frame to become a strong CS teacher is a
good one but 10 years is excessive.&lt;/p&gt;
&lt;p&gt;
Yes, there are some teachers that won&amp;#39;t be certified but really know
CS and how to teach it but in my experience they are in the
minority. Over the past three years I&amp;#39;ve worked closely with about 100
teachers in my program and I&amp;#39;ve evaluated applications from afew
hundred more. Many of these applicants have been attending CS
professional development for &lt;strong&gt;years&lt;/strong&gt;. These PDs are the usual
suspects - CS4all&amp;#39;s training in NY, code.org etc.. The number of
teachers who attended years of these types of training but have
difficulty with &amp;#34;hello world&amp;#34; has been shocking. Now, I&amp;#39;m not down on
a teacher for not knowing more than what they&amp;#39;ve been taught but
what&amp;#39;s being taught in PDs is sorely lacking and attending them does
not a CS teacher make.&lt;/p&gt;
&lt;p&gt;
Now, this isn&amp;#39;t to say that all CS Certification programs will be
superior to the low bar PD. I&amp;#39;m confident in saying that the Hunter
program is. I&amp;#39;m also confident in the quality of Siena&amp;#39;s program but
they only award a Bachelors so it&amp;#39;s not for currently working, certified
teachers. Other programs, I just don&amp;#39;t know - some will probably be
great and others will be glorified PD.&lt;/p&gt;
&lt;p&gt;
We really need to educate school administrators and district leaders
as to what real CS teacher preparation should look like and they have
to insist that while right now, we&amp;#39;re in a transitional phase, within
a few years - and &lt;strong&gt;not&lt;/strong&gt; the 10 the state is giving, that teachers both
new or existing get that preparation.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Certified CS teachers - 2 flags in NY</title>
      <link>https://cestlaz.github.io/post/certified-teacher-in-ny/</link>
      <pubDate>Wed, 28 Sep 2022 16:39:37 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/certified-teacher-in-ny/</guid>
      <description>&lt;p&gt;
I&amp;#39;ve been running Hunter&amp;#39;s teacher certification program now for three
years. We started with our Advanced Certificate which allows currently
working teachers to earn an additional cert in CS and soon a few
masters students joined the pipeline.&lt;/p&gt;
&lt;p&gt;
In three years we&amp;#39;ve made great progress. Approximately 45 New York
City teachers are either state certified to teach CS or are qualified
to recieve the certification once they file with the state. We&amp;#39;ve got
close to 60 more joining them this spring. That&amp;#39;s really exciting as
it gets us to the critical mass I think the city needs moving
forward.&lt;/p&gt;
&lt;p&gt;
A core of knowledgeable teachers to provide an existing
community of professionals as new young CS teachers join the
profession over the next few years.&lt;/p&gt;
&lt;p&gt;
This work something I&amp;#39;m both proud and excited about but there are two
major concerns.&lt;/p&gt;
&lt;p&gt;
First, there are many teachers teaching CS in NY that have no
intention of earning the new certification and also don&amp;#39;t really know
the subject. &lt;/p&gt;
&lt;p&gt;
Second, this is only New York City and NY is a big state and not
enough is happening in other parts of the state.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ll talk about the first issue in my next post but for now, let&amp;#39;s
talk about the state.&lt;/p&gt;
&lt;p&gt;
A big thing I&amp;#39;m excited about with my current cohort of teachers is
that five of them are from the Finger Lakes region of NY. About a year
ago, I was essentially cold called by educators from the Dryden school
district. They wanted to make sure they had knowledgeable CS teachers
and saw that we had an advanced certificate program. They wanted to
send their teachers to us for certification. There were issues - for
funding, they ended up applying and receiving an NSF grant and on my
end, I had to make sure that our program would remain remote - that
commute from the Finger Lakes would&amp;#39;ve been brutal. When all was said and
done, we started this past summer with over 50 teachers and teacher
candidates from New York City and 5 from Dryden and neighboring
Groton. Those five teachers have been a terrific addition to the
cohort and I think it&amp;#39;s also worked for them - they immediately become
a local network of CS teachers as opposed to being the only one in
town and they&amp;#39;ve also tapped into the New York City network we&amp;#39;ve been
building.&lt;/p&gt;
&lt;p&gt;
This means we&amp;#39;ve planted 2 flags in NY State - two locations that have
or will soon have certified CS teachers. The ones that have finished
my program in NYC along with the five from Dryden and Groton.&lt;/p&gt;
&lt;p&gt;
The trouble is, we need more.&lt;/p&gt;
&lt;p&gt;
Right now, there are 5 institutions with register masters program in
New York State and 3 wither registered bachelors programs. I can&amp;#39;t
vouch for the quality of any programs other than mine and I don&amp;#39;t know
how many are active.&lt;/p&gt;
&lt;p&gt;
Regardless, the issue here is that these are all programs that provide
initial certification - they&amp;#39;re for new people entering the
profession. These programs are needed but will ramp up slowly across
the state. At Hunter we&amp;#39;ve had registrations of 2, 4, and now most
recently 5.&lt;/p&gt;
&lt;p&gt;
We need more Advanced Certificate programs across the
state. Programs that allow current CS teachers to learn this new field
so they can teach it legally and teach it well. Right now, Hunter&amp;#39;s
the only game in town. This is one of the reasons why I&amp;#39;ve fought
to keep us online - you can&amp;#39;t expect teachers from way out in queens
to come into the heart of Manhattan after a school day for classes and
then back out LI or wherever they live let alone teachers from 4 hours
north of the city.&lt;/p&gt;
&lt;p&gt;
We need more Advanced Certification programs and we need ways to fund
the teachers who need these programs. I&amp;#39;ve been extremely fortunate
that organizations like Gotham Gives and Google support our work in
New York City but I&amp;#39;m thinking we need the equivalent up the Hudson
Valley, across the Erie Canal and all the way to Buffalo.&lt;/p&gt;
&lt;p&gt;
These programs and the related funding also wouldn&amp;#39;t have to last
forever. After there years of intense work, NYC will have its core of
certified teachers and I expect the demand for my advanced cert
program to go way down while we slowly see an uptick in interest in
our Masters program.&lt;/p&gt;
&lt;p&gt;
Next time, I&amp;#39;ll talk about that other issue - the fact that we&amp;#39;re
going to have a lot of teachers that don&amp;#39;t really know CS and how to
teach it for a long time but this is enough for now.&lt;/p&gt;
&lt;p&gt;
We need more programs across the state that will recertify current
teachers and really set them up as CS teachers. I&amp;#39;ve done what I could
in that regard at Hunter and am very proud of our partnership with
Dryden and Groton but it&amp;#39;s got to be more than Hunter college.&lt;/p&gt;
&lt;p&gt;
So, hey, if you&amp;#39;re somewhere outside of the city and this is important
to you - drop me a line, I&amp;#39;d love to work together to make things
happen across the state.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>End of summer program beginning of summer break</title>
      <link>https://cestlaz.github.io/post/cohort-3-end-of-summer/</link>
      <pubDate>Wed, 03 Aug 2022 11:45:33 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/cohort-3-end-of-summer/</guid>
      <description>
&lt;p&gt;
Yesterday was the last day of classes for our current cohort. The
rest of the week and maybe weekend will be all grading all the time
and then I&amp;#39;ll try to tune out work for a couple of weeks to try to
recharge the batteries. Since there are some ongoing Hunter
administrative snafus I&amp;#39;m not all that optimistic on getting real down
time but we&amp;#39;ll see.&lt;/p&gt;
&lt;p&gt;
So, how did it go?&lt;/p&gt;
&lt;p&gt;
Overall I&amp;#39;m happy with the results. We had a much larger cohort -
almost three times the size of past years so that presented challenges
but at the end of the day the participants showed a lot of growth and
based on our anonymous survey the vast majority were very happy with
the experience. There were a couple who were not happy but in a large group,
particularly of teachers being taught, you&amp;#39;re not going to please
everybody.&lt;/p&gt;
&lt;div id=&#34;outline-container-headline-1&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-1&#34;&gt;
Challenges
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-1&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
The large group was a challenge but I&amp;#39;m not really sweating it since I
don&amp;#39;t expect there to be cohorts nearly this large in the future. I
had a personal goal of getting NYC to around 100 certified teachers
ASAP and that&amp;#39;ll be done once this cohort finishes in the spring but I
suspect that as we move on, there will be less demand for teachers
getting an additional CS certificate while on the other hand, there
will be a slow and steady increase in demand for Masters programs. At
the same time, additional programs should start coming online across
the state.&lt;/p&gt;
&lt;p&gt;
The end result should be no more classes of 60.&lt;/p&gt;
&lt;p&gt;
We also had elementary school teachers for the first time. This added
an additional axis of complexity. We couldn&amp;#39;t do a whole lot about
some of it. The state created a K12 cert so there&amp;#39;s no way around it,
all students must learn the CS we feel is needed for a 12th
grader. Creating two tracks isn&amp;#39;t an option even though it would make
more sense.&lt;/p&gt;
&lt;p&gt;
The other challenge was the spread of expertise. Other than saying
that most of the participants were real troopers on both sides of the
experience spectrum I&amp;#39;ll leave this alone since it&amp;#39;s not appropriate
for a public post. &lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-2&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-2&#34;&gt;
Good Stuff
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-2&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
As I just said, most participants were real troopers. Most of the
participants with strong CS backgrounds put on their teacher hats and
helped support less experienced teachers. We&amp;#39;d frequently drop in and
lurk in a breakout room to see the more expereinced guide the room and
it was rare to see one of them dominate and just &amp;#34;do the task&amp;#34;
(although it did occasionally happen). Likewise most of the
participants who came in raw showed tremendous progress and
growth. Many stayed for end of day office hours to go beyond what we
were asking because they wanted to master everything. &lt;/p&gt;
&lt;p&gt;
Also, based on the comments, the cohort is building a strong sense of
community. There were a couple of comments where a student or two felt
otherwise, but they were in an extreme minority (based on the
anonymous surveys) and from their full comments it looks like they
just didn&amp;#39;t buy into the program at all.&lt;/p&gt;
&lt;p&gt;
We also had a handful of participants from outside the city with five
from up near Ithaca. It was great adding them to the mix and I think
there will be some rich discussions in the Fall in curriculum
development when we can not only contrast schools but entire
districts.&lt;/p&gt;
&lt;p&gt;
Of course, at a base level, there&amp;#39;s also the fact that everyone got
through the program and there was a lot of growth across the board. &lt;/p&gt;
&lt;p&gt;
For me personaly, the highlight was getting to know a bunch of great
teachers and people and to be able to work with my team again. My team
from Stuy is still the thing I miss most at Hunter. It&amp;#39;s funny, we had
one of my CS colleagues from Hunter also on the team and he commented
on how great it was to work with this team and how well we worked
together. A number of students also pointed that out as a positive.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-3&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-3&#34;&gt;
A couple of things that stood out
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-3&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
These are just a few things that have been on my mind since
closing. Maybe they&amp;#39;re important, maybe not and I might change my own
mind down the line. Still, these are few random or tangential things
that stood out from the past month.&lt;/p&gt;
&lt;div id=&#34;outline-container-headline-4&#34; class=&#34;outline-3&#34;&gt;
&lt;h3 id=&#34;headline-4&#34;&gt;
The state of CS PD
&lt;/h3&gt;
&lt;div id=&#34;outline-text-headline-4&#34; class=&#34;outline-text-3&#34;&gt;
&lt;p&gt;
This year, when I saw the spread of CS expertise, I decided to dig
deeper into teacher backgrounds. I also looked back to the teachers
from the first two cohorts who came in barely able to write &amp;#34;Hello
World!&amp;#34;&lt;/p&gt;
&lt;p&gt;
In many, indeed most of these cases the teacher had gone to the &amp;#34;usual
suspects&amp;#34; PD sessions - mostly through CS4All in NYC but sometimes
arranged independently by them or their school.&lt;/p&gt;
&lt;p&gt;
I then looked to see how long these teachers were doing these PDs.&lt;/p&gt;
&lt;p&gt;
In many cases it was years - three, four, five, or even more years of
going to CS training.&lt;/p&gt;
&lt;p&gt;
This really alarmed me. Well, actually, I already suspected this but
it was a sobering confirmation. I know a lot of people won&amp;#39;t want to
hear this but teachers attending CS &amp;#34;training&amp;#34; for multiple years
should be well beyond the most basic of programs. Even if they haven&amp;#39;t
used a text based language, after multiple years, they should be able
to transition to text fairly easily.&lt;/p&gt;
&lt;p&gt;
So, I know that a lot of people might be offended by my saying this
but I stand by it. There are some providers I know who do good work
but I think what I saw here is an indictment of the overall PD
approach that, to paraphrase what code.org said a few years ago,
&amp;#34;trained XXXXX CS teachers&amp;#34; in a very short period of time.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-5&#34; class=&#34;outline-3&#34;&gt;
&lt;h3 id=&#34;headline-5&#34;&gt;
Split the class
&lt;/h3&gt;
&lt;div id=&#34;outline-text-headline-5&#34; class=&#34;outline-text-3&#34;&gt;
&lt;p&gt;
Another interesting thing is that there weren&amp;#39;t a lot of comments from
participants about the mixed teacher levels in terms of sharing
experiences. On the other hand many would have loved us to be able to
split based on programming experience. I haven&amp;#39;t had a chance to do a
deep debrief with JonAlf and Topher who ran the methods components but
this was a little bit of a surprise. We&amp;#39;ll see if this becomes a
larger discussion topic in Curriculum Development.&lt;/p&gt;
&lt;p&gt;
On the splitting for programming level we couldn&amp;#39;t do that for
assorted reasons and moving forward I expect it not to be an issue.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-6&#34; class=&#34;outline-3&#34;&gt;
&lt;h3 id=&#34;headline-6&#34;&gt;
Teaching Methods and Best Practices
&lt;/h3&gt;
&lt;div id=&#34;outline-text-headline-6&#34; class=&#34;outline-text-3&#34;&gt;
&lt;p&gt;
We approach methods, and in fact our approach to teaching in general
is all about helping teachers build a toolbox. We have to do a better
job at communicating why this is our approach.&lt;/p&gt;
&lt;p&gt;
There were a couple of comments both in class and in the survey about
&amp;#34;best practices&amp;#34; and &amp;#34;the research&amp;#34; with respect to methods. I get it,
younger teachers are hit over the head with this type of edubabble
from their first education course through every department meeting,
PD, and observation.&lt;/p&gt;
&lt;p&gt;
The truth is that there are no &amp;#34;best practices,&amp;#34; there are practices
that under certain circumstances, based on a combination of students,
teacher, school, culture and more can be most effective for &lt;strong&gt;&lt;strong&gt;THAT
SPECIFIC TEACHER&lt;/strong&gt;&lt;/strong&gt; to use in &lt;strong&gt;&lt;strong&gt;that time at that place.&lt;/strong&gt;&lt;/strong&gt; Teachers
aren&amp;#39;t usually taught this, they get hammered with &amp;#34;best practice&amp;#34; and
&amp;#34;the research&amp;#34; but nobody ever tells them that while there are some
people doing great work in Ed research and CS Ed research, the field
is generally held in low regard, work is almost never replicated and
when you read most of it, there are tons of important variables that
the research leaves out.&lt;/p&gt;
&lt;p&gt;
On top of this, we can go down a long list of &amp;#34;best practices&amp;#34; which
were foisted upon teachers as the one true way only to be replaced a
few years later with the new &amp;#34;best practice.&amp;#34;&lt;/p&gt;
&lt;p&gt;
We believe in building a toolbox of content and techniques and we
trust teachers to know their own strengths and weaknesses as well as
their student needs and that they&amp;#39;ll use the right tool at the right
time.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-7&#34; class=&#34;outline-3&#34;&gt;
&lt;h3 id=&#34;headline-7&#34;&gt;
Writing plans from scratch 
&lt;/h3&gt;
&lt;div id=&#34;outline-text-headline-7&#34; class=&#34;outline-text-3&#34;&gt;
&lt;p&gt;
Another thing I noticed was that when we got to the lesson planning
unit, a lot of teachers really wanted to base their work off of a
canned lesson. They said they wanted to adapt it but they were really
reluctant to come up with something on their own, only using other
resources for examples, references, etc.&lt;/p&gt;
&lt;p&gt;
I was a little surprised about this reluctance but upon thinking, it
makes sense. Even if they adapt lessons, CS PD and training is all
about providing canned lessons to teachers so in many cases, it&amp;#39;s what
they&amp;#39;re used to. Add to that the fact that this was for an Education
class, and to be honest, the demands and rigor of education classes
vary greatly  and in many cases the default approach is path of least
resistance. I get it. I did many an Ed class where I threw together a
quick paper from prefabbed sources to get my A for the semester. I&amp;#39;d
like to think, though that our program is a bit better than that.&lt;/p&gt;
&lt;p&gt;
I think the cohort ended up doing it right and with the right attitude
but I think it&amp;#39;s interesting to see what teachers are normally
presented with and how that contrasts, good or bad, with what my team
is selling.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-8&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-8&#34;&gt;
What&amp;#39;s next
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-8&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
So, summer&amp;#39;s in the books. We&amp;#39;ll take this group through a few more
courses and in the Spring they&amp;#39;ll join the ranks of New York State
Certified CS Teachers. &lt;/p&gt;
&lt;p&gt;
Personally, I&amp;#39;m going to try to disengage from Hunter related stuff
for the next few weeks and try to recharge. There will be a few things
I have to deal with but I&amp;#39;ll try to keep them to a minimum. After a
few really hard years I&amp;#39;m hoping I&amp;#39;ll start up again at the end of the
month with some renewed energy.&lt;/p&gt;
&lt;p&gt;
I also have to give some serious thought to the long term both for
Hunter and me. Devorah turned 55 last November and I join her in
October so, as many of you know, we&amp;#39;ve got some potential big changes to
consider. More on that though once the year starts.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>The Big Four Four</title>
      <link>https://cestlaz.github.io/post/the-big-four-four/</link>
      <pubDate>Wed, 25 May 2022 13:17:57 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/the-big-four-four/</guid>
      <description>&lt;p&gt;
Nope, not 40 years old, I&amp;#39;m closer to pushing 55. I&amp;#39;m talking about
the number of New York&amp;#39;s certified computer science teacher.&lt;/p&gt;
&lt;p&gt;
Two years ago, there weren&amp;#39;t any. Last year we got 21 and now, with
the semester wrapping up we&amp;#39;ll get another 23. &lt;/p&gt;
&lt;p&gt;
That&amp;#39;s 44 state certified computer science teachers in a hurry and
what&amp;#39;s more, 44 teachers that I can comfortably say really know their
stuff both in terms of CS content and how to teach it.&lt;/p&gt;
&lt;p&gt;
Our first cohort were all working teachers coming back for their
advanced certificate and NY State Certification. This year, it was the
same for the majority of people in the program this past year. We did,
however, have two Masters students both graduating. They should be the
first Masters in CS Education students in the state and will be the
first two such teachers certified once they file the paperwork.&lt;/p&gt;
&lt;p&gt;
That&amp;#39;s really cool. Another box checked off.&lt;/p&gt;
&lt;p&gt;
I was also happy with the whole model we set up of having the Masters
students mix with the Advanced Cert teachers, at least for their
overlapping classes. I think this was great for the Masters
students. They got to be in classes and do fieldwork with experienced
NYC teachers so they learned the real deal. I pride my program as
being designed by teachers and taught by and for teachers but if we
give a standard &amp;#34;professor&amp;#34; answer that&amp;#39;s patently not workable in the
real world, you can be sure, when talking to a room of 20 pro teaches,
you&amp;#39;re going to get called on it. Those two masters students also get
the benefit of starting out in a network of CS teachers from across
the city. In fact, one of the Masters students got a job this past
year (you can do that in NY State by applying for intern
certification) at the school of one of our Cert student.&lt;/p&gt;
&lt;p&gt;
The Advanced Cert students on the other hand benefit from the new
teacher energy and fresh ideas that the Masters students bring to the
table and in general the Masters students come in with a stronger CS
background than many of the Cert teachers.&lt;/p&gt;
&lt;p&gt;
I thought it would work well when designing things and I&amp;#39;m happy with
how it&amp;#39;s been working out.&lt;/p&gt;
&lt;p&gt;
Back to the title - that&amp;#39;s 44 teachers in a hurry. This summer we&amp;#39;re
upping the ante. We&amp;#39;ll have around 5 Masters students joining in with
around 55 Cert teachers. Five of the cert teachers are from upstate
New York which I think is pretty awesome but almost all the rest are
from NY City.&lt;/p&gt;
&lt;p&gt;
That&amp;#39;s pretty huge going 0 - 44 in two years and we&amp;#39;ll be at 100 in
one more. That&amp;#39;s getting to the critical mass in the system that I&amp;#39;m
personally aiming for. Just like other subject areas have a small
subset of the teachers who go to the conferences, attend the optional
PDs and are, in fact the experts, we&amp;#39;ll have the same in NYC for CS.&lt;/p&gt;
&lt;p&gt;
After this? It&amp;#39;ll be time to change gears. Less emphasis on the
Advanced Certificate and time to start advertising the Masters
program.&lt;/p&gt;
&lt;p&gt;
Why? Besides having achieved the minimum critical mass, I don&amp;#39;t think
there will be as much demand for the certificate program moving
forward. There are a number of reasons why I believe this but I&amp;#39;m not
going to go down that rabbit hole right now.&lt;/p&gt;
&lt;p&gt;
There will still be interest and we&amp;#39;ll still run the program but I don&amp;#39;t
see another set of 50+ teachers banging down the door.&lt;/p&gt;
&lt;p&gt;
On the other hand, now is the time to start pushing the
pre-service. I&amp;#39;d like to get more students into my Masters
program. Now that we&amp;#39;ll have a critical mass of real CS teachers in
the system the newly minted Masters students won&amp;#39;t have to be the
&amp;#34;experts.&amp;#34; They get to be the &amp;#34;new teachers&amp;#34; which is as it should be.&lt;/p&gt;
&lt;p&gt;
Things can then settle in and CS teacher prep will become the same
more or less as other fields.&lt;/p&gt;
&lt;p&gt;
Of course, it&amp;#39;s not quite that simple. Right now, I&amp;#39;m the only game in
town but other programs are registered in the state and more should
register over time. Some of those programs will be good and others bad
but it will certainly complicate the landscape. As I&amp;#39;m sure you know,
I&amp;#39;m proud of my program and will put it up against anything out there
and would love other institutions to come up with similar programs but
you also know I fear that there will be many &amp;#34;you take it you teach
it&amp;#34; programs that&amp;#39;ll meet the state&amp;#39;s requirements but do little more
than the current PD based &amp;#34;teacher prep&amp;#34; that is all too common and
too commonly touted as successful. &lt;/p&gt;
&lt;p&gt;
In any event, time will tell and I can really just try to worry about
the parts I can control.&lt;/p&gt;
&lt;p&gt;
So, now that this past semester is in the books I&amp;#39;ll be spending the
next few weeks getting the team together and planning out how we&amp;#39;re
going to wrangle the group of 60 we&amp;#39;ll be working with this
summer. Should be fun.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Trends In Professional Development in CS - it&#39;s not all good</title>
      <link>https://cestlaz.github.io/post/trends-in-pd/</link>
      <pubDate>Tue, 25 Jan 2022 17:46:43 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/trends-in-pd/</guid>
      <description>&lt;p&gt;
My friend &lt;a href=&#34;https://twitter.com/mrtomocon/status/1486012499304587269&#34;&gt;Tom&lt;/a&gt; tweeted earlier which led me to &lt;a href=&#34;https://csforall.medium.com/virtual-professional-development-is-here-to-stay-d2a3888f2d1a &#34;&gt;this piece&lt;/a&gt; on trends in
CS professional development (PD). Tom&amp;#39;s tweet was talking about virtual vs
in person PD so I initially thought I&amp;#39;d write about that and PD in
general but the article actually led to some deeper issues with PD.&lt;/p&gt;
&lt;p&gt;
The article talks about PD being focussed on specific units or
modules, narrowing to more popular offerings and also becoming less
localized. This led me to think about a real issue with CS PD that a
few of us have been harping on for years. The &lt;strong&gt;VAST&lt;/strong&gt; majority of CS PD
is provided for by &amp;#34;content providers&amp;#34; - people with a product to
sell. That might be a curriculum, a technical platform, or both but
something to sell. It&amp;#39;s not just CS knowledge and how to teach
it. I include organizations like code.org in this bucket because while
they&amp;#39;re not selling in the same sense as a textbook publish, they are
selling or pitching their curriculum and platform.&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s easy to see how we got here. There are so few people out there
that actually know both the CS content and how to teach it that there
was a void so EdTech and a few others stepped in. The truth is, most
of the big PD providers also don&amp;#39;t have both deep CS and deep CS
pedagogical knowledge. What they do have is influence. This isn&amp;#39;t to
say that they&amp;#39;re all bad. There are some providers whom I like very
much and I think are doing a great job but that&amp;#39;s not the point here.&lt;/p&gt;
&lt;p&gt;
So, we&amp;#39;re left with a system where the majority of CS teachers have
very little CS or CS teaching experience and the providers are pushing
very specific training tied closely with their product, course, or
curriculum. I know I&amp;#39;ll get some hate for this but it&amp;#39;s just where we
are right now.&lt;/p&gt;
&lt;p&gt;
This might change over time as preservice teaching programs start to
emerge but I fear that many of them will just continue the trend of
pushing canned curricula. I&amp;#39;ve already seen proposed and existing
programs that essentially have a teacher candidate go through a
version of APCS-A, APCS-P, a computers in society class and something else
similar and voila, CS teacher.&lt;/p&gt;
&lt;p&gt;
Let&amp;#39;s contrast all of this with math PD or at least the math PD that I
was subject to for most of my high school teaching career. Most
department meetings I attended always had a PD piece and that was
usually something interesting, or at least supposed to be interesting
presented by a colleague. It might be one of their practices or it
might be something they got from a conference or an outside PD. We&amp;#39;d
also have larger PD sessions a couple of times a year. Topics would be
things like:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;How to use the graphing calculator to explore functions&lt;/li&gt;
&lt;li&gt;History and math&lt;/li&gt;
&lt;li&gt;Math in your student&amp;#39;s worlds&lt;/li&gt;
&lt;li&gt;Exploring math competition problems&lt;/li&gt;
&lt;li&gt;An introduction to some advanced or new math topic&lt;/li&gt;
&lt;li&gt;Motivating a lesson on something or other&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Few of these were tied to a specific course and none were tied to a
specific implementation or curriculum. There might be a special
section on something like Geometers Sketchpad or a vendor might run a
session but those were in the minority.&lt;/p&gt;
&lt;p&gt;
It was mostly about math and how to teach math and most offerings were
by teachers not content providers.&lt;/p&gt;
&lt;p&gt;
I don&amp;#39;t know what math education PD is like now but what a word of
difference.&lt;/p&gt;
&lt;p&gt;
Will CS PD get better, and I do think locally, teacher  generated PD
is better? I don&amp;#39;t know. I&amp;#39;ve been told that the sessions I ran
pre-covid were worthwhile but I don&amp;#39;t see those happening again until
we can do in person events and in any event that&amp;#39;s small scale.&lt;/p&gt;
&lt;p&gt;
All this said and I haven&amp;#39;t touched on what led me to the article to
begin with - the point that PD is going much more virtual. Is this a
good thing? Sometimes but it&amp;#39;s also, in my opinion a confirmation on
the sad state of PD in general.&lt;/p&gt;
&lt;p&gt;
The idea behind PD is ongoing professional growth but the truth is,
teachers don&amp;#39;t really have time for PD during the school year so what
they do is mostly mandated. In my own experience and in talking to
many teachers in many subject areas the majority of PD forced upon
teachers is garbage. Even if it is good, too often it&amp;#39;s not relevant
to the teachers day to day and by the time it matters, if it ever
does, it&amp;#39;s long forgotten. Unfortunately, many teachers are required
to accumulate PD hours. In NY they&amp;#39;re called CTLE hours (Continuing
Teacher and Leader Education).&lt;/p&gt;
&lt;p&gt;
Since teachers are being forced to accumulate these hours and they
don&amp;#39;t find them valuable they&amp;#39;re taking the path of least
resistance. That frequently means online offerings.&lt;/p&gt;
&lt;p&gt;
None of this is to say that online PD is bad or always bad. It can be
very effective for some things. Others really should be done in
person. I&amp;#39;m just saying that it&amp;#39;s not a surprise that we&amp;#39;re here and
that we have to look deeper to figure out how we got here and why.&lt;/p&gt;
&lt;p&gt;
Where do we go from here? I have no idea. I&amp;#39;ve long resigned myself to
try to just worry about my corner of the world. I&amp;#39;ll make the best
offerings I can be they in my pre/in service courses or in PD wether
they&amp;#39;re in person or online. I think that those that come will find
value so those are the ones I&amp;#39;ll worry about.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Finally got the class working - only took five years</title>
      <link>https://cestlaz.github.io/post/five-year-class/</link>
      <pubDate>Wed, 02 Jun 2021 08:36:53 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/five-year-class/</guid>
      <description>&lt;p&gt;
You don&amp;#39;t become a master teacher overnight. It takes years, perhaps
decades. Year one, you&amp;#39;re just trying to survive. Year two is
frequently a small step back. Year three on is slow improvement
provide the teacher works to improve. To me and eight to ten year
teacher is usually an advanced beginner, fifteen years?
Seasoned. Master teacher? You&amp;#39;re probably pushing close to 20 years or
more. Of course, there are exceptions but this is the pattern I&amp;#39;ve
most often observed (burnout notwithstanding).&lt;/p&gt;
&lt;p&gt;
Why such a long developmental timeline? Part of it is the feedback
loop. At best your cycle is one semester but more often than not it&amp;#39;s
a year. You do something once and then you don&amp;#39;t really know if it
worked until way later if ever. You also can&amp;#39;t try it again until
next year and even then, it&amp;#39;ll be with different students and possibly
with all sorts of different variables. &lt;/p&gt;
&lt;p&gt;
That&amp;#39;s why I was happy when this semester ended and I felt that I
finally got one of my classes to where I wanted it. It only took five
years. Actually five years but having taught it 8 times over those
five years.&lt;/p&gt;
&lt;p&gt;
The class in question is the lab/recitation for Hunter&amp;#39;s CSCI13500 -
essentially CS1. For the non-Daedalus sections, they basically do a
programming lab per week. For me, my students do those labs albeit
usually outside of class time and we do enrichment. One of the
challenges is that I have to follow the lead of the main course
instructor who designs the labs and controls the class sequence. I
have some leway but I can&amp;#39;t for instance decide to teach classes way
earlier.&lt;/p&gt;
&lt;p&gt;
Over the eight iterations I&amp;#39;ve tried different different things but I
think I&amp;#39;ve finally settled on what and how things happen in the
class.&lt;/p&gt;
&lt;p&gt;
While I still follow the thirteen labs given by the mane instructor in
sequence, they use Gradescope and I use GitHub Classroom. I also use
unit tests to grade the labs which gives me a platform to develop the
idea of testing both in general and as an industry practice. We go
from nothing to discussing testing and me providing test cases to them
designing their tests for later labs. Since we&amp;#39;re using GitHub
Classroom that allows us to leverage that as well. We&amp;#39;ll talk about SE
practices like using version control, build tools (make), code review,
etc.. This is all part of the enrichment which also includes students
working on projects started by other students.&lt;/p&gt;
&lt;p&gt;
We also do some direct CS enrichment by extending some of the
labs. Two labs that have been used recently have particularly lent
themselves to extensions. One was a lab based on rotational ciphers
which I extend by covering a decoder and there&amp;#39;s a 2D image lab based
on arrays that lends itself to all sorts of extensions - I like seam
carving.&lt;/p&gt;
&lt;p&gt;
This is what I landed on but I also tried other things that didn&amp;#39;t
work and some of this will change in the future. The point is that it
took years. I couldn&amp;#39;t do something one week and then immediately try
something else. Sure, you can do that with specific teaching
techniques but not with a class overall.&lt;/p&gt;
&lt;p&gt;
One of the other classes I&amp;#39;m still tweaking is CSC23500 - essentially
data structures. I taught it for decades as part of APCS-AB but
Hunter&amp;#39;s a new audience - different circumstances, different
constraints, and differnet advantages. First time through I wasn&amp;#39;t
super happy with my performance. Second year I made some positive
adjustments and was happier - Covid mid semester notwithstanding. This
year, I think I got the structure down. It was remote and during Covid
so there were other challenges so I won&amp;#39;t really know until the fourth
iteration but I think I&amp;#39;m getting there.&lt;/p&gt;
&lt;p&gt;
So, all this is to say that improvement in teaching and improvement in
classes doesn&amp;#39;t happen overnight. Education is the long game.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Hunter Launches CS Teacher Certification Programs</title>
      <link>https://cestlaz.github.io/post/cs-ed-programs/</link>
      <pubDate>Wed, 26 Feb 2020 18:50:11 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/cs-ed-programs/</guid>
      <description>&lt;p&gt;
It took a while but we&amp;#39;re finally here. Hunter College is launching
it&amp;#39;s &lt;a href=&#34;https://education.hunter.cuny.edu/admissions/graduate-programs/computer-science/&#34;&gt;Computer Science Teacher Certification&lt;/a&gt; programs. This was the
second big initiative I&amp;#39;ve been working on at Hunter. The first was
the Daedalus undergraduate CS scholars program. The Daedalus program
started my first year and is now providing the best value (and in my
opinion best) undergraduate CS opportunity in New York. &lt;/p&gt;
&lt;p&gt;
CS Certification took longer. I had to design the programs, they had to
make it through the whole CUNY governance process which even under
ideal circumstances takes around a year and then up through NYSED. Oh,
and we had to convince the state to create a certification area in the
meantime.&lt;/p&gt;
&lt;p&gt;
In any event, we&amp;#39;re live and will kick off our certificate program
this summer. That&amp;#39;s the program designed for teachers already
certified in another subject area seeking to add the CS credential.&lt;/p&gt;
&lt;p&gt;
So, what does the program look like? &lt;/p&gt;
&lt;p&gt;
It combines content and pedagogy. It was designed to give teachers the
CS they need and the knowledge of how to teach it. &lt;/p&gt;
&lt;p&gt;
In terms of content, you need some depth. In my opinion, that depth
should be at least a class beyond what you&amp;#39;d normally expect to
teach. For example a math teacher&amp;#39;s classes would max out with BC Calc
so I&amp;#39;d want a math teacher to have a math class beuond that. Since we
max out with APCS-A, my program takes teachers through data
structures - APCS-AB or CS2. &lt;/p&gt;
&lt;p&gt;
Teachers also need breadth. They don&amp;#39;t need to have a full course in
AI or a full class in Graphics etc. but a course that gives them
exposure to a number of fields. Enough to teach a unit, mentor a
precocious student, or learn more on their own to develop new
courses. We have a topics course for that.&lt;/p&gt;
&lt;p&gt;
To round out the CS part of the program we have a programming heavy
ethics course. While ethics are woven throughout all the courses - CS
and CS Ed we felt that this standalone course also adds great value to
our program.&lt;/p&gt;
&lt;p&gt;
This is a far cry from what I&amp;#39;ve seen in many other CS Ed programs
which follow the &amp;#34;you take it you teach it&amp;#34; philosophy. Basically
teachers take Exploring CS, APCS-P, and APCS-A and viola, you&amp;#39;ve got
CS teachers. Not in my book.&lt;/p&gt;
&lt;p&gt;
Then we mix in the CS Ed. Two methods course where we introduce
additional content and how to teach it and also a curriculum design
course. The methods courses are based on current best practices and on
what I&amp;#39;ve learned helping teachers develop over the years but I&amp;#39;m
particularly excited about the curriculum design course. Over the
years I had to take three curriculum design courses and didn&amp;#39;t learn a
thing about curriculum design in any of them. I swore that if I ever
created an education course it would be a curriculum design course
that was good. Over the years, I
developed units, classes and full programs and learned a few
tricks. That in turn developed into the course. Teachers will study
existing curricula and develop their own and since the course
integrates fieldwork, they&amp;#39;ll deliver it as well.&lt;/p&gt;
&lt;p&gt;
While I had internal help at Hunter, I want to send a special thanks
to JonAlf, Sam, and Topher - three of the best teachers I know who
provided feedback, assistance, and inspiration (sometimes without
knowing it) along with other friends in education, academia, and
industry throughout New York State who made sure I designed a program
that would work for teachers across New York State.&lt;/p&gt;
&lt;p&gt;
If you&amp;#39;re looking to become certified to teach CS in New York schools,
check us out. You can find more info &lt;a href=&#34;https://education.hunter.cuny.edu/admissions/graduate-programs/computer-science/&#34;&gt;here&lt;/a&gt;. &lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Presenting At CSTA 2020</title>
      <link>https://cestlaz.github.io/post/presenting-at-csta/</link>
      <pubDate>Tue, 26 Nov 2019 13:05:45 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/presenting-at-csta/</guid>
      <description>
&lt;div id=&#34;outline-container-headline-1&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-1&#34;&gt;
Presenting at CSTA 2020
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-1&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;I noticed a few tweets and posts from people announcing that they&amp;#39;d be
presenting at CSTA2020 - the big computer science teachers conference
held every July.&lt;/p&gt;
&lt;p&gt;
A common thread in a few of these were trepidation&amp;#39;s
presenters. Excited to be doing this but nervous.&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s interesting that teachers, myself included, sometimes get nervous
before presentations even though we present every day as part of our
jobs. I know it&amp;#39;s different as we have the same kids every day but
even day 1 jitters each semester aren&amp;#39;t the same as the presentation
anxiety that some of us face.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m certainly not a super master seasoned presenter. I&amp;#39;ve done it a
few times at CSTA and other venues and this year JonAlf and I will be
running a GitHub workshop but I thought I&amp;#39;d share some words of
encouragement anyway.&lt;/p&gt;
&lt;div id=&#34;outline-container-headline-2&#34; class=&#34;outline-3&#34;&gt;
&lt;h3 id=&#34;headline-2&#34;&gt;
You&amp;#39;re really just talking shop.
&lt;/h3&gt;
&lt;div id=&#34;outline-text-headline-2&#34; class=&#34;outline-text-3&#34;&gt;
&lt;p&gt;
Basically, you&amp;#39;re a teacher talking about teaching and I think we all
love to do that. &lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-3&#34; class=&#34;outline-3&#34;&gt;
&lt;h3 id=&#34;headline-3&#34;&gt;
It&amp;#39;s an audience of friends
&lt;/h3&gt;
&lt;div id=&#34;outline-text-headline-3&#34; class=&#34;outline-text-3&#34;&gt;
&lt;p&gt;
CSTA is a conference primarily of teachers - our colleague.s Everyone
coming to your session is already interested in your opinion and going
in as a supportive audience. They &lt;strong&gt;want&lt;/strong&gt; to hear from you.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ll go back to the previous point - you&amp;#39;re basically talking shop
with friends. &lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-4&#34; class=&#34;outline-3&#34;&gt;
&lt;h3 id=&#34;headline-4&#34;&gt;
CSTA still feels intimate
&lt;/h3&gt;
&lt;div id=&#34;outline-text-headline-4&#34; class=&#34;outline-text-3&#34;&gt;
&lt;p&gt;
In spite of its rapid growth, the CSTA conference still feels
intimate. It&amp;#39;s not a huge conference where you can attend a talk or
meet someone at breakfast and never find them again. It&amp;#39;s big enough
so that you &lt;strong&gt;can&lt;/strong&gt; avoid anyone you want to dodge but you can pretty
much find time to spend with anyone you want to as well. This can turn
your talk more into a starting point for a longer convesation - how
cool is that.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-5&#34; class=&#34;outline-3&#34;&gt;
&lt;h3 id=&#34;headline-5&#34;&gt;
Don&amp;#39;t forget to enjoy it
&lt;/h3&gt;
&lt;div id=&#34;outline-text-headline-5&#34; class=&#34;outline-text-3&#34;&gt;
&lt;p&gt;
I used  to get really nervous when giving LARGE talks - we&amp;#39;re talking
to an audience of one or two thousand. I&amp;#39;ve only done that a few
times. A couple of times at the New York Tech Meetup and once when I
was the faculty graduation speaker at Stuy when my best friend was the
guest speaker and my daughter was in the graduating class. &lt;/p&gt;
&lt;p&gt;
I was pretty nervous before I hit the stage at Stuy when a colleague
gave me some great advice - &amp;#34;take the time to enjoy the moment.&amp;#34; I
remembered that just as I said above - I was about to talk to
friends. Two thousand of them, but friends nonetheless. I was reminded
to slow down and take it in. Enjoy the moment. I&amp;#39;ve tried to do that
with any presentation I&amp;#39;ve given since. &lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-6&#34; class=&#34;outline-3&#34;&gt;
&lt;h3 id=&#34;headline-6&#34;&gt;
Final thoughts
&lt;/h3&gt;
&lt;div id=&#34;outline-text-headline-6&#34; class=&#34;outline-text-3&#34;&gt;
&lt;p&gt;
As  a final thought I&amp;#39;ll leave you by paraphrasing something that I
think was said by Pinchas Zuckerman - the world class violist and
violinist (who I think also used to wear a shirt proclaiming &amp;#34;I
vibrato when I play baroque - Deal with it!!!!!).&lt;/p&gt;
&lt;p&gt;
He said that you should always be smiling when you&amp;#39;re
performing. Either your performance is going well and you&amp;#39;re creating
beautiful music or it&amp;#39;s going horribly but it will be over soon. :-)&lt;/p&gt;
&lt;p&gt;
Already looking forward to July.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Communicating With Students - maybe GitHub to the rescue</title>
      <link>https://cestlaz.github.io/post/communicating-with_students/</link>
      <pubDate>Wed, 13 Nov 2019 10:17:18 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/communicating-with_students/</guid>
      <description>&lt;p&gt;
Out of class student communication is always a challenge. There are
plenty of options:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Piazza&lt;/li&gt;
&lt;li&gt;Facebook group&lt;/li&gt;
&lt;li&gt;Slack, Discord, or other chat system&lt;/li&gt;
&lt;li&gt;Discourse, Vanilla or other discussion forum system&lt;/li&gt;
&lt;li&gt;Mailing list&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;but all have warts. &lt;/p&gt;
&lt;p&gt;
I shared my thoughts on a number of these options &lt;a href=&#34;https://cestlaz.github.io/posts/class-communications/&#34;&gt;a while ago&lt;/a&gt; but
thought I&amp;#39;d update them now.&lt;/p&gt;
&lt;p&gt;
Most of my opinions hold form my earlier post. I was using and
continue to use a mailing list as I can be pretty sure that students
will get the email and they don&amp;#39;t have to go to any outside site or
application. Now, getting them to respond or just use it for general
class communication is another story.&lt;/p&gt;
&lt;p&gt;
I also tried Slack again but it fared no better than my last attempt
with it. A couple of students used it but mostly, Slack was left to
die. I could have forced some engagement by posting assignments on
Slack but there wasn&amp;#39;t any real upside. &lt;/p&gt;
&lt;p&gt;
Earlier this semester some students said we should set up Discord -
&amp;#34;all the students use it!&amp;#34; was the line. Discord can be used as a chat
server similar to Slack but was created for gaming and also does voice
communication and other things. Personally, I prefer Slack. Funny
thing was that as I discussed this with my students I pointed out &amp;#34;you
know, we have a Slack channel set up and you all already have accounts
on it.&amp;#34; Most of them didn&amp;#39;t even remember. &lt;/p&gt;
&lt;p&gt;
So, we tried Discord and there was the usual burst of activity when we
first set it up but now it&amp;#39;s again, mostly dormant. A few students who
use Discord for personal use are usually online but I&amp;#39;d chalk it up as
another failure.&lt;/p&gt;
&lt;p&gt;
So, what am I going to try next? GitHub. &lt;/p&gt;
&lt;p&gt;
GitHub doesn&amp;#39;t provide a general chat or email solution but it does
have what they call &amp;#34;issues.&amp;#34;  I got the idea from &lt;a href=&#34;https://twitter.com/ericdrosado&#34;&gt;Eric Rosado&lt;/a&gt; of
GitHub Education who clued me in on what issues can do.&lt;/p&gt;
&lt;p&gt;
When you create a GitHub repository - something I do for class web
pages as well as assignments, you can also open issues. Issues are
associated with the project but also act as a lightweight forum. You
can go to a page and see all the issues (topics) and each one can have
a chain of messages (thread). You can tag them, filter them, and when
you&amp;#39;re done, close them (and reopen them later if needs be). The big
plusses are that:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;People who are subscribed to the repo (assignment, web page, etc.)
automatically get email alerts on the issues.&lt;/li&gt;
&lt;li&gt;You can explicitly tag people to force them to get alerts.&lt;/li&gt;
&lt;li&gt;You can directly reply via email so you don&amp;#39;t need to go to
GitHub.&lt;/li&gt;
&lt;li&gt;Everything related to a given project or repo is self contained.&lt;/li&gt;
&lt;li&gt;If you&amp;#39;re using GitHub / GitHub classroom you can use issues to
create a logged communication with your students on specific assignments.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;
I haven&amp;#39;t used this class wide yet - just experimented a bit but I
plan to dive in much more deeply next semester.&lt;/p&gt;
&lt;p&gt;
This isn&amp;#39;t an overall communication solution. I&amp;#39;m sticking with a
mailing list for that until I can find a better solution but I think
using GitHub issues will be a win for project and assignment related
discussion.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>I Speak Jive</title>
      <link>https://cestlaz.github.io/post/i-speak-jive/</link>
      <pubDate>Fri, 08 Nov 2019 07:48:14 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/i-speak-jive/</guid>
      <description>&lt;p&gt;
When I wrote about the &lt;a href=&#34;https://cestlaz.github.io/post/highedweb2019/&#34;&gt;HighWebEd&lt;/a&gt; I mentioned &lt;a href=&#34;https://twitter.com/elfin_john&#34;&gt;John William&lt;/a&gt;&amp;#39;&amp;#39;s talk on
Agile. He spoke about how the movie Airplane! was filmed in an Agile
manner and gave as an example the development of the &amp;#34;jive&amp;#34; scenes. &lt;/p&gt;
&lt;p&gt;
&amp;lt;iframe width=&amp;#34;560&amp;#34; height=&amp;#34;315&amp;#34;
src=&amp;#34;&lt;a href=&#34;https://www.youtube.com/embed/zdCjbJ6NEfc&#34;&gt;https://www.youtube.com/embed/zdCjbJ6NEfc&lt;/a&gt;&amp;#34; frameborder=&amp;#34;0&amp;#34;
allow=&amp;#34;accelerometer; autoplay; encrypted-media; gyroscope;
picture-in-picture&amp;#34; allowfullscreen&amp;gt;&amp;lt;/iframe&amp;gt;&lt;/p&gt;
&lt;p&gt;
Apparently the creative team had a script but it wasn&amp;#39;t working. The
first pair that read for the role, Norman Gibbs and Al White had their
owned take. Not only dir the team cast them on the spot and follow
their creative lead (hence Agile) but they also apparently apologized
to the two actors as the original attempt was so bad compared t what
Gibbs and White brought to the table.&lt;/p&gt;
&lt;p&gt;
Of course, I would be negligent if I didn&amp;#39;t mention that the third
person to really make the jive sequence was Barbara Billingsley of
Leave it to Beaver fame.&lt;/p&gt;
&lt;p&gt;
So, coming home, I had the Airplane! and the jive scenes in the back
of my mind. The other day at home, somehow or other we were chatting
about that great American masterpiece, The Muppet Show and of course,
the Swedish Chef.&lt;/p&gt;
&lt;p&gt;
&amp;lt;iframe width=&amp;#34;560&amp;#34; height=&amp;#34;315&amp;#34;
src=&amp;#34;&lt;a href=&#34;https://www.youtube.com/embed/OUU6Rt6bi1U&#34;&gt;https://www.youtube.com/embed/OUU6Rt6bi1U&lt;/a&gt;&amp;#34; frameborder=&amp;#34;0&amp;#34;
allow=&amp;#34;accelerometer; autoplay; encrypted-media; gyroscope;
picture-in-picture&amp;#34; allowfullscreen&amp;gt;&amp;lt;/iframe&amp;gt;&lt;/p&gt;
&lt;p&gt;
This brought me back the the &lt;a href=&#34;https://muppet.fandom.com/wiki/Encheferizer\&#34;&gt;Encheferizer&lt;/a&gt; (live version &lt;a href=&#34;http://www.tuco.de/home/jschef.htm&#34;&gt;here&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;
So how is jive from Airplane! related to The Swedish Chef?&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Filters!!!!!!!!&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;
A filter, in this context, is a program that takes data as input, in
this case a stream of text. Does some transformation to it and then
spits out the transformed text.&lt;/p&gt;
&lt;p&gt;
Way back, Unix systems had a program called &lt;a href=&#34;https://en.wikipedia.org/wiki/Jive_filter&#34;&gt;jive&lt;/a&gt; that &amp;#34;translated&amp;#34;
text into Jive along with other filters including cockney and valspeak which
converted text to like, um, Valley Girl speak dontcha know. It was,
like, totally tubular. Of course one filter was named &lt;strong&gt;chef&lt;/strong&gt;, known as
the encheferizer which translated into Swedish Chef talk.&lt;/p&gt;
&lt;p&gt;
Over time, the list of filters grew. Some were silly, some fun, and,
yes, some were kind of offensive.&lt;/p&gt;
&lt;p&gt;
(side bar: as I write this bit of history, I just feel as though I&amp;#39;ve
been transported to Doug Peterson&amp;#39;s &lt;a href=&#34;https://dougpete.wordpress.com/2019/11/03/whatever-happened-to-183/&#34;&gt;Whatever happened to…&lt;/a&gt; posts and
feel as though I should write something like: Do you remember using
filters? Which ones did you use? etc.)&lt;/p&gt;
&lt;p&gt;
Anyway, somewhere in here there&amp;#39;s the making of some nice class
projects but the challenge was how to do the translation. Some things
are easy. One filter was the Fudd filter which translated to &lt;a href=&#34;https://en.m.wikipedia.org/wiki/Elmer_Fudd&#34;&gt;Elmer
Fudd&lt;/a&gt; speak. It&amp;#39;s easy enough to substitute &lt;strong&gt;w&lt;/strong&gt; for &lt;strong&gt;l&lt;/strong&gt; in a word as
Elmer says &amp;#34;Hew wow&amp;#34; instead of &amp;#34;Hello&amp;#34; but it&amp;#39;s hard to know if you&amp;#39;ve
got enough translation rules so that your students text will change
enough to be entertaining.&lt;/p&gt;
&lt;p&gt;
Fortunately, I found &lt;a href=&#34;- https://github.com/hyperrealm/talkfilters&#34;&gt;this&lt;/a&gt; repo. It&amp;#39;s an implementation of a whole
bunch of filters:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;austro (Think Ahhnolld), b1ff (a web newbie), brooklyn, butthead (as
in Beevis and), chef, cockney, drawl, dubya, fudd, funetak, jethro,
jive, kraut, newspeak, pansy, pirate, postmodern, redneck, valspeak, warez&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I couldn&amp;#39;t get the system to compile but was able to dive into the
source code to see the rules. They&amp;#39;re in the &lt;strong&gt;.l&lt;/strong&gt; files. All of those
files are source for the &lt;a href=&#34;https://en.wikipedia.org/wiki/Lex_%2528software%2529&#34;&gt;Lex&lt;/a&gt; parser generator but even if you aren&amp;#39;t
familiar with Lex you should be able to figure out most of the rules.&lt;/p&gt;
&lt;p&gt;
Some of the translators rely mostly on simple letter
substitutions. Fudd is such a filter:&lt;/p&gt;
&lt;p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-lex&#34; data-lang=&#34;lex&#34;&gt;&amp;#34;r&amp;#34;         gtf_printf(&amp;#34;w&amp;#34;);
&amp;#34;l&amp;#34;         gtf_printf(&amp;#34;w&amp;#34;);
&amp;#34;qu&amp;#34;        gtf_printf(&amp;#34;qw&amp;#34;);
&amp;#34;th &amp;#34;       gtf_printf(&amp;#34;f &amp;#34;);
&amp;#34;th&amp;#34;        gtf_printf(&amp;#34;d&amp;#34;);
&amp;#34;n.&amp;#34;        gtf_printf(&amp;#34;n, uh-hah-hah-hah. &amp;#34;);
&amp;#34;R&amp;#34;         gtf_printf(&amp;#34;W&amp;#34;);
&amp;#34;L&amp;#34;         gtf_printf(&amp;#34;W&amp;#34;);
&amp;#34;Qu&amp;#34;        gtf_printf(&amp;#34;Qw&amp;#34;);
&amp;#34;QU&amp;#34;        gtf_printf(&amp;#34;QW&amp;#34;);&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;
Dubya, on the other hand goes more with word substitutions:&lt;/p&gt;
&lt;p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-lex&#34; data-lang=&#34;lex&#34;&gt;[Tt]errorist		|
[Oo]sama		|
[Bb]in(-|{WB})[Ll]ad(e|i)n	{ switch(gtf_random(3))
				  {
				  case 0: gtf_puts_case(&amp;#34;bad guy&amp;#34;); break;
				  case 1: gtf_puts_case(&amp;#34;evildoer&amp;#34;); break;
				  case 2: gtf_puts_case(&amp;#34;terrier&amp;#34;); break;
				  }
				}
[Uu]njustified/{NW}	     gtf_puts_case(&amp;#34;pre-emptive&amp;#34;);
[Cc]ontra/{NW}		     gtf_puts_case(&amp;#34;freedom-fighter&amp;#34;);
[Un]nder		     gtf_puts_case(&amp;#34;misunder&amp;#34;); BEGIN(INW);
[Mm]isunderstand	     gtf_puts_case(&amp;#34;misunderestimate&amp;#34;); BEGIN(INW);
[Mm]isunderstood             gtf_puts_case(&amp;#34;misunderestimated&amp;#34;); BEGIN(INW);
[Kk]ill/{NW}		     gtf_puts_case(&amp;#34;oblitifry&amp;#34;);
[Kk]illed/{NW}		     gtf_puts_case(&amp;#34;oblitifried&amp;#34;);
[Dd]destroy/{NW}	     gtf_puts_case(&amp;#34;destructifry&amp;#34;);
[Dd]destroyed/{NW}	     gtf_puts_case(&amp;#34;destructifried&amp;#34;);
[Rr]esonat/{NW}		     gtf_puts_case(&amp;#34;resignat&amp;#34;);
[Ee]ven(-|{WB})[Hh]anded/{NW} gtf_puts_case(&amp;#34;foreign-handed&amp;#34;);
[Ee]mbitter		     gtf_puts_case(&amp;#34;embetter&amp;#34;); BEGIN(INW);
[Ff]allability/{NW}	     gtf_puts_case(&amp;#34;fallacy&amp;#34;);
[An]tidote/{NW}		     gtf_puts_case(&amp;#34;anecdote&amp;#34;);&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;
Some, like chef, pirate, and aust do some of both:&lt;/p&gt;
&lt;p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-lex&#34; data-lang=&#34;lex&#34;&gt;[Tt]h		gtf_puts_case(&amp;#34;z&amp;#34;);
w		gtf_puts(&amp;#34;v&amp;#34;);
ou		gtf_puts(&amp;#34;u&amp;#34;);
&amp;#34;de &amp;#34;		gtf_puts(&amp;#34;d &amp;#34;);
&amp;#34;le &amp;#34;		gtf_puts(&amp;#34;l &amp;#34;);
&amp;#34;me &amp;#34;		gtf_puts(&amp;#34;m &amp;#34;);
&amp;#34;ne &amp;#34;		gtf_puts(&amp;#34;n &amp;#34;);
&amp;#34;re &amp;#34;		gtf_puts(&amp;#34;r &amp;#34;);
&amp;#34;ve &amp;#34;		gtf_puts(&amp;#34;v &amp;#34;);
[Cc]		gtf_puts_case(&amp;#34;s&amp;#34;);
[Pp]ie		gtf_puts_case(&amp;#34;mozer&amp;#39;s pie&amp;#34;);
[Ss]teak        gtf_puts_case(&amp;#34;shnitzel&amp;#34;);
[Gg]overnor	gtf_puts_case(&amp;#34;govenator&amp;#34;);&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;
Some also deal with more complex situations such as only substituting
letters if they&amp;#39;re at the end of words and the like.&lt;/p&gt;
&lt;p&gt;
All of this is leading to a huge number lesson and project
possibilities from simple text replacements in an intro class to
something much more ambitious in a later class.&lt;/p&gt;
&lt;p&gt;
I was looking to vary some of the things we do in Hunter and I think
I&amp;#39;ll add some language filters to the mix.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Classes Or After school programs - which is more important for female retention in CS?</title>
      <link>https://cestlaz.github.io/post/classes-or-afterschool/</link>
      <pubDate>Mon, 14 Oct 2019 21:47:18 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/classes-or-afterschool/</guid>
      <description>&lt;p&gt;
This morning Mark Guzdial tweeted on his latest post:&lt;/p&gt;
&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Results from
Longitudinal Study of Female Persistence in CS: AP CS matters,
After-school programs and Internships do not &lt;a
href=&#34;https://t.co/GOzp3045Hp&#34;&gt;https://t.co/GOzp3045Hp&lt;/a&gt;&lt;/p&gt;&amp;mdash;
Mark Guzdial (@guzdial) &lt;a
href=&#34;https://twitter.com/guzdial/status/1183699009766121473?ref_src=twsrc%5Etfw&#34;&gt;October
14, 2019&lt;/a&gt;&lt;/blockquote&gt; &lt;script async
src=&#34;https://platform.twitter.com/widgets.js&#34;
charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;p&gt;
I&amp;#39;m glad Mark wrote about this as it&amp;#39;s something that&amp;#39;s important to
both research and publicize but it&amp;#39;s really not a surprise.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m going to start by dismissing the statement that &amp;#34;… participation in
the Aspirations awards program were teh best predictors of persistence
three years after the high school survey in both CS and other
technology-related majors.&amp;#34; To me, that&amp;#39;s a water is wet statement -
girls who apply for an award where they talk about their aspiriations
in computing are more likely to do more computing. &lt;/p&gt;
&lt;p&gt;
The other stuff merits more of a look. Classes and APCS-A in
particular vs after school programs. Since APCS-A is as far as I know
always an elective there&amp;#39;s probably some selection bias here. If a
girl elects to take a college level CS class, perhaps there&amp;#39;s already
some interest in pursuing CS in college. Further, and I really hate to
say this, given the male dominated aspects frequently present in our
CS classes, a girl who was interested in CS and survives APCS-A might
be more likely to continue on and succeed having weathered the storm. &lt;/p&gt;
&lt;p&gt;
Now let&amp;#39;s look at the out of school programs. There are a number of
issues here. Many don&amp;#39;t really cover CS or legit programming, many
allow one group member to basically carry the team, and many are
really entrepreneurship programs using the CS marketing hype. They
don&amp;#39;t really prepare students for what&amp;#39;s to come in CS. When a
student then takes a CS class in college they&amp;#39;re ill prepared and drop
the subject. I&amp;#39;ve seen it happen. Unfortunately, many of those after
school programs are masters of marketing and fundraising. Some get big
money from the Googles of the world but they&amp;#39;re never held accountable
for preparing kids to fail. Rather, they&amp;#39;re lauded and praised as
saviors of education. &lt;/p&gt;
&lt;p&gt;
Going further, after school programs are usually taught by volunteers,
not teachers. They don&amp;#39;t necessarily understand the nuances of
teaching and they don&amp;#39;t necessarily prepare you for your next CS
experience. You then end up in a college course of 300, are ill
prepared to succeed, fall through the cracks and drop out. Take APCS-A
in HS and you&amp;#39;re going to be in a class of 30 and in a much more
supportive, forgiving  environment. A much better place to prepare you
for what&amp;#39;s to come.&lt;/p&gt;
&lt;p&gt;
All in all the idea that girls are more likely to follow a CS path
with a solid high school experience than with an outside club or
activity is hardly a surprise. What is more of a surprise to me is the
fact that it&amp;#39;s taken so long to start getting the word out.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Cheating on CS projects</title>
      <link>https://cestlaz.github.io/post/cheating-on-projects/</link>
      <pubDate>Mon, 30 Sep 2019 17:33:02 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/cheating-on-projects/</guid>
      <description>&lt;p&gt;
Alfred Thompson posted today about &lt;a href=&#34;http://blog.acthompson.net/2019/09/the-problem-of-cheating-on-programming.html&#34;&gt;cheating on CS class projects&lt;/a&gt;. It
was in response to Garth Flint&amp;#39;s post on &lt;a href=&#34;https://gflint.wordpress.com/2019/09/26/finding-cool-projects-for-programming-classes/&#34;&gt;finding interesting projects&lt;/a&gt;
which in turn referenced earlier posts by Alfred and me.&lt;/p&gt;
&lt;p&gt;
Garth laments that it&amp;#39;s hard to find projects that are both
interesting and meaty but where solutions can&amp;#39;t easily be searched for
online. Alfred notes that cheating will happen and that it&amp;#39;s an ethics
issue. This is why I try to create a culture of sharing and
acknowledging credit (that is, citing sources) but I&amp;#39;m not naive
enough to believe there isn&amp;#39;t any cheating in my classes.&lt;/p&gt;
&lt;p&gt;
I don&amp;#39;t go nuts looking out for cheating but there are a number of
things I do to try to help keep the students honest.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Class time. More often than not students have some time in class to
work on any given project. This lets me get a handle on what they
actually know since I can interact with the student or team and
observe them interacting with each other. Even if a particular
project is all done out of class, over the course of the semester
you can get a pretty good idea as to what a student will produce on
their own.&lt;/li&gt;
&lt;li&gt;Project quizzes. For a big project, I&amp;#39;ll sometimes give a quiz on
the day it&amp;#39;s due. The quiz will be tied to the project - describe
a data structure or algorithm you used. If the student wrote the
project it&amp;#39;s free points, if not they&amp;#39;ll have problems. Of course,
this only requires that a student understands their project not
that they actually wrote it but at least that&amp;#39;s something.&lt;/li&gt;
&lt;li&gt;Git logs. I get my students on GitHub early and that lets me look
at the commit logs for any given project. This usually can&amp;#39;t be
used to find cheating but it lets me see what was committed when. &lt;/li&gt;
&lt;li&gt;Be reasonable in terms of workload and expectations. &lt;strong&gt;This is a
really important one&lt;/strong&gt;. Back at Stuy, it was made clear to me many
times that many students feel forced to cheat due to teachers
expecting far too much from them. If you&amp;#39;re take 6 classes a day
and each gives you two hours of homework somethings got to give.

I always try to give a fair amount of work and only if I think it&amp;#39;s
necessary and makes sense and as long a a student is up front about
any issues that arise I&amp;#39;ll try to work with them on deadlines and
requirements.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;
I could use a code plagiarism tester like &lt;a href=&#34;https://theory.stanford.edu/~aiken/moss/&#34;&gt;Moss&lt;/a&gt; but I usually don&amp;#39;t
bother.&lt;/p&gt;
&lt;p&gt;
I also try to keep things in perspective. Usually things come clean in
the end. Most classes have multiple measures - tests, homework,
projects, classwork and more. Even if a student copies a project and
gets away with it, it&amp;#39;s just one measure and it likely won&amp;#39;t move the
needle all that much. True, a kid who&amp;#39;s doing well might feel the need
to cheat on one assignment (see item 4 above) but that&amp;#39;s not a hill
I&amp;#39;m willing to die on.&lt;/p&gt;
&lt;p&gt;
Even if a kid in a 10th grade intro CS class cheats their way through
they&amp;#39;ll unlikely take any more CS as they&amp;#39;ll be woefully
unprepared. In that case, the one higher grade they got on their
transcript due to cheating on CS projects probably won&amp;#39;t make much of
an overall difference and it certainly won&amp;#39;t hurt the kids who take
all your school&amp;#39;s CS courses and apply to college to be CS majors.&lt;/p&gt;
&lt;p&gt;
None of this is to say that cheating doesn&amp;#39;t happen and I do believe
we should keep an eye out and address it if and when it rares its ugly
head. I&amp;#39;m just saying keep things in perspective. &lt;/p&gt;
&lt;p&gt;
When I pick projects I don&amp;#39;t pay much attention to if they can be
found online and I&amp;#39;m not the tightest screw when it comes to enforcing
the rules in my classes. I know that&amp;#39;s led to my being taken advantage
of over the years and yes, that does bother me but I&amp;#39;d rather put my
time and energy into the kids trying to do it right than those cutting
the corners.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Teaching techniques - industry to classroom and classroom to industry</title>
      <link>https://cestlaz.github.io/post/industry-techniques-in-class/</link>
      <pubDate>Fri, 27 Sep 2019 12:34:04 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/industry-techniques-in-class/</guid>
      <description>&lt;p&gt;
There are things we do in school and there are things we do in
industry and they&amp;#39;re not always the same. In school we might use a
learning language or an IDE which gives additional support and at
times even take away language features while at work you might you
might make heavy use of continuous integration tools. &lt;/p&gt;
&lt;p&gt;
On the other hand, sometimes we use the same things. Java is used in
schools and in industry, StackOverflow consulted in both and many
schools use professional IDEs like Eclipse.&lt;/p&gt;
&lt;p&gt;
While the things I mentioned above, whether the same or different are
on the tooling side, there are also things on the technique side that
are used both in school and in industry.&lt;/p&gt;
&lt;p&gt;
The most well publicized concept is probably &lt;a href=&#34;https://en.wikipedia.org/wiki/Pair_programming&#34;&gt;Pair Programming&lt;/a&gt; - the
idea of having two programmers develop using a shared
computer. There&amp;#39;s more to it than that and tons of variations but
that&amp;#39;s the crux of the idea. Proponents claim it increases programmer
efficiency and lowers error rates but others would rather not follow
the practice. Some feel that it&amp;#39;s great in certain environments like
when onboarding a new team member.&lt;/p&gt;
&lt;p&gt;
We hear CS Teachers talk about pairing in their classes all the time -
&amp;#34;It&amp;#39;s an industry technique&amp;#34; but to me the interesting thing is that I
think many teachers, particularly more senior ones came up with pair
programming independent of it as an industry technique. It came out of
not having enough computers. This invariably leads to kids pairing
up. Now, you&amp;#39;ll say &amp;#34;but pair programming isn&amp;#39;t just two kids sharing
a computer.&amp;#34; I agree but when good teachers do group work it isn&amp;#39;t
just kids left to their own devices working in a group. Over time,
teachers who &amp;#34;discover&amp;#34; pair programming come up with ways to make it
effective in their classrooms.&lt;/p&gt;
&lt;p&gt;
The other interesting thing is that pair programming serves different
purposes at work vs in schoo. At work it&amp;#39;s supposed to increase
programming efficiency and help them develop better code more
quickly. In the classroom, besides addressing the lack of computers,
it&amp;#39;s used as a tool to provide feedback to students, have them support
each other, and create a cooperative supportive environment.&lt;/p&gt;
&lt;p&gt;
Another technique CS teachers use is subgoal labeling. The gist here
is that you write down or label smaller goals within your
program. It&amp;#39;s an idea I used for years but only relatively recently
learned its name.&lt;/p&gt;
&lt;p&gt;
The interesting thing here is that I used this idea as a professional
programming well before I ever taught and I don&amp;#39;t recall it ever being
used in any of my classes. &lt;/p&gt;
&lt;p&gt;
The idea just made sense. I&amp;#39;d write a function and pepper it with
comments indicating the parts s or subgoals I&amp;#39;d need to write code for
to complete the function. I don&amp;#39;t know if subgoal labelling is or ever
was a prevelent technique in professional programming but the related
idea of writing function stubs is. The idea here is that as you
develop your program write out an empty placeholder function, a stub,
when you realize you need it and fill it in later. This is something
of a subgoal but at the function level.&lt;/p&gt;
&lt;p&gt;
So, here we have two practices. One that is certainly used in both
the classroom and in industry and one that likely is. The practices
seem to be examples of convergent evolution. Developed independently
but with similar albeit somewhat different benefits.&lt;/p&gt;
&lt;p&gt;
There have to me more practices like this. If you know any, please
share.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Pig Latin - a beginner lesson with some depth</title>
      <link>https://cestlaz.github.io/post/piglatin/</link>
      <pubDate>Wed, 25 Sep 2019 17:11:29 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/piglatin/</guid>
      <description>&lt;p&gt;
I recently did a unit where I had my students convert words into &lt;a href=&#34;https://en.wikipedia.org/wiki/Pig_Latin&#34;&gt;Pig
Latin&lt;/a&gt;. I like the problem because to start it only requires strings,
functions and if statements but there is some depth to the unit.&lt;/p&gt;
&lt;p&gt;
We start with simplified rules:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;If the word starts with a vowel, add &amp;#34;ay&amp;#34; to the end of the word&lt;/li&gt;
&lt;li&gt;If it starts with a consonant move the first latter to the end and
add &amp;#34;ay&amp;#34;&lt;/li&gt;
&lt;li&gt;don&amp;#39;t worry about anything else&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Students usually start with something like this:&lt;/p&gt;
&lt;div class=&#34;src src-python&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
as students realize it&amp;#39;s much easier to check for vowels rather than
consonants. &lt;/p&gt;
&lt;p&gt;
Some students discover that you can do any of the following instead of
the big compound &lt;strong&gt;or&lt;/strong&gt; :&lt;/p&gt;
&lt;div class=&#34;src src-python&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
This allows us to talk a little about lists (and tuples if you like)
as well as now strings are similar to them in certain ways.&lt;/p&gt;
&lt;p&gt;
By itself, this is a nice little beginner project but it gets better. &lt;/p&gt;
&lt;p&gt;
Since we talked a bit about lists and strings in the refinement, we
then talk about using python&amp;#39;s &lt;code&gt;split()&lt;/code&gt; method that parses a string
on whitespace. We also talk about the &lt;code&gt;for&lt;/code&gt; loop. Ultimately this
leads us to writing a function to convert a sentence into Pig Latin:&lt;/p&gt;
&lt;div class=&#34;src src-python&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
But this doesn&amp;#39;t work with real sentences. Let&amp;#39;s focus on two
problems. The first is that it won&amp;#39;t handle the period at the end of
the sentence properly. It would take that last word, let&amp;#39;s say &lt;strong&gt;dog.&lt;/strong&gt; 
and convert it to &lt;strong&gt;og,day&lt;/strong&gt; rather than &lt;strong&gt;ogday.&lt;/strong&gt;. It also doesn&amp;#39;t
handle capital letters. There are other issues but they have similar
solutions to the ones we&amp;#39;ll use for these two.&lt;/p&gt;
&lt;p&gt;
This is where things get fun. &lt;/p&gt;
&lt;p&gt;
To handle the period, students frequently jump to modifying the &lt;strong&gt;if&lt;/strong&gt; 
conditions in &lt;code&gt;piglatinify&lt;/code&gt; :&lt;/p&gt;
&lt;div class=&#34;src src-python&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
or something similar.&lt;/p&gt;
&lt;p&gt;
This is a straighforward working solution but it&amp;#39;s also a great place to introduce the idea of changing the data
instead of using complex conditionals to handle special cases (earlier
posts &lt;a href=&#34;https://cestlaz.github.io/posts/2014-02-26-change-the-data/&#34;&gt;here&lt;/a&gt; and &lt;a href=&#34;https://cestlaz.github.io/posts/advent-of-code-2016-2/&#34;&gt;here&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;
If we take out the period we can do our regular piglatinify and then
add it back in. This leads us to a solution like this:&lt;/p&gt;
&lt;div class=&#34;src src-python&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
We can do something similar to deal with words that start with upper
case letters:&lt;/p&gt;
&lt;div class=&#34;src src-python&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
You can approach other special cases similarly.&lt;/p&gt;
&lt;p&gt;
So, there you have it. A fun little problem that you can do with your students
early on in a CS0 with surprising depth.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Advanced CS Early - Are they learning it or just using it?</title>
      <link>https://cestlaz.github.io/post/are-they-learning-or-jus-using/</link>
      <pubDate>Sat, 21 Sep 2019 17:41:13 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/are-they-learning-or-jus-using/</guid>
      <description>&lt;p&gt;
I recently took a look at the &lt;a href=&#34;https://cryptopals.com/&#34;&gt;Cryptopals Crypto Challenges&lt;/a&gt;. It&amp;#39;s a
series of challenges through which you can learn all about crypto and
crypto attacks. They say they&amp;#39;ll eventually have solutions but since
the site appears to be at least a few years old, who knows it they&amp;#39;ll
ever publish them.&lt;/p&gt;
&lt;p&gt;
One interesting thing about the site is that it really doesn&amp;#39;t have a
lot of content to teach you the concepts around the challenges. At
least not for the first few, the only ones I&amp;#39;ve looked at. You get a
bit of sample input, the sample output, a short description and then
you&amp;#39;re off to the races.&lt;/p&gt;
&lt;p&gt;
This means that you&amp;#39;re going to do some web searching to figure out
what the terms they use mean and how to approach the problems.&lt;/p&gt;
&lt;p&gt;
The first challenge was to convert a string of hex digits into
base64.  I&amp;#39;d never done this so I figured I should look up what base64
was. I figured it was some encoding but exactly what was it?&lt;/p&gt;
&lt;p&gt;
A quick search yielded a bunch of online encoder/decoders and also the
Wikipedia page: &amp;#34;…Base64 is a &lt;strong&gt;group&lt;/strong&gt; of binary-to-text encoding
schemes…&amp;#34; - a &lt;strong&gt;group&lt;/strong&gt;? Uh oh. Which scheme am I to use? It turned
out that I was able to use the conversion table on the Wikipedia page
but I digress.&lt;/p&gt;
&lt;p&gt;
I decided to write the solution in Clojure and was about to do so but
decided to see if there was an idiomatic way to do this. I did a
search. Most if not all of the searches resulted in links either to a
Clojure library to encode and decode Base64 or example code that used
said library. &lt;/p&gt;
&lt;p&gt;
If I wanted to I could code up a complete solution and not really
learn anything about base64 encoding. I&amp;#39;m not talking about wholesale
copying a solution off of StackOverflow. I&amp;#39;m talking about using the
included Clojure (technically Java) Base64 conversion library. &lt;/p&gt;
&lt;p&gt;
This made me think about what I&amp;#39;m seeing some times in CS Ed and lots
of time in drop in / opt in programs. &lt;/p&gt;
&lt;p&gt;
I&amp;#39;d hear about classes where students are doing unbelievable
things. The kids made a neural network to do blah blah blah. I&amp;#39;d think
to myself &amp;#34;that&amp;#39;s upper level undergraduate work, how can they really
understand all the math and CS to build that stuff when they&amp;#39;re just
taking Algebra and their first CS class?&amp;#34;&lt;/p&gt;
&lt;p&gt;
It turns out, they weren&amp;#39;t. They&amp;#39;d basically glue together libraries
and use pre-existing tools. &lt;/p&gt;
&lt;p&gt;
This raises the question: &amp;#34;is this a good thing?&amp;#34;&lt;/p&gt;
&lt;p&gt;
Maybe and maybe not.&lt;/p&gt;
&lt;p&gt;
If those kids mentioned above aren&amp;#39;t really studying AI but rather
intro programming and they&amp;#39;re using AI as part of the motivation, it
can be terrific. It could inspire them to study AI later and that&amp;#39;s
great.&lt;/p&gt;
&lt;p&gt;
On the other hand, if they think they&amp;#39;re really learning AI, that&amp;#39;s not so good.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve met kids who were in either classes or programs on
cybersecurity. They were every confident in their knowledge and skills
but it turned out that they didn&amp;#39;t really learn anything in their
classes. It was just a curated canned experience. In these cases the
programs and classes weren&amp;#39;t really helping the kids. I&amp;#39;ve met
teachers who&amp;#39;ve told me about classes like these where the kids ended
up getting jobs but then promptly got fired because they didn&amp;#39;t really
know anything more than a superficial view of the subject.&lt;/p&gt;
&lt;p&gt;
In this day and age students can&amp;#39;t write everything from scratch but
I&amp;#39;ve always believed that they should have some idea as to what&amp;#39;s
going on under the hood. A friend would always say &amp;#34;never use a tool
that you couldn&amp;#39;t&amp;#39; write yourself&amp;#34; I concur. He didn&amp;#39;t mean you have
to write every line yourself but you should have a basic idea as to
the underpinnings. &lt;/p&gt;
&lt;p&gt;
There are cool and interesting things at all levels of CS and CS
education. I know we live in a day and age where teachers brag about
how early they can cover some advanced topic with their kids but it&amp;#39;s
not a race. Let&amp;#39;s teach the kids what they need when they need
it. They don&amp;#39;t need to think they can write a deep learning platform
in year one. Right now I&amp;#39;m teaching college first year students. We
don&amp;#39;t cover the same things these kids will study in their 400 level
electives. I&amp;#39;m fine with that. I cover some topics that allude to
what&amp;#39;s to come and I set the stage for their futures.  Let&amp;#39;s design
and implement CS experiences that make sense for our kids rather than
giving them false experiences so that we can say that they&amp;#39;re doing
graduate level work in third grade.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Outside Evaluators</title>
      <link>https://cestlaz.github.io/post/outside-evaluators/</link>
      <pubDate>Fri, 26 Jul 2019 19:23:32 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/outside-evaluators/</guid>
      <description>&lt;p&gt;
I was planning on writing up all the exciting CS Education work I got
to be involved in these past two days but I saw a post on one of the
CS discussion forums that got me riled. &lt;/p&gt;
&lt;p&gt;
There&amp;#39;s a teacher (name withheld to protect the innocent) who wants to
create an advanced course for his students but his administration is
requesting an outside measure of accountability. This sounds
reasonable on the surface but I found it really insulting. &lt;/p&gt;
&lt;p&gt;
As teachers we&amp;#39;re hired as the professional - the specialists with the
responsibility to teach our students. Parents leave their children with us
all day every day with the understanding that we&amp;#39;ll do our best to do
right by our charges. &lt;/p&gt;
&lt;p&gt;
Yet here we are being told &amp;#34;you can&amp;#39;t be trusted to design a course
for you students and assess them. You need an outsider for that.&amp;#34; Now,
I&amp;#39;m not advocating that teachers operate without supervision - it is
indeed part of a school&amp;#39;s administration&amp;#39;s job to evaluate, support,
and improve its faculty. What I am saying is that teachers should be
trusted to teach and to assess. &lt;/p&gt;
&lt;p&gt;
Actually, we still do trust teachers in some areas. How many English
classes are free not only of standardized tests but tests
altogether. My kids were in band and chorus. The assessments were all
performance based and all designed and administered by their
teachers. Same with many art classes. It&amp;#39;s funny how students in
instrumental music and hands on art classes learn to love and
appreciate the arts. At the same time, at least at Stuy, students who
instead went through the paper and test based art and music
appreciation classes left, let us say, less enthusiastic about the
subject matter. &lt;/p&gt;
&lt;p&gt;
Even in more test based subjects - precalc is a great example here we
trust the teachers to assess. There&amp;#39;s no precalc regents or AP exam -
everything&amp;#39;s designed, implemented, and assessed in house.&lt;/p&gt;
&lt;p&gt;
Just because CS is the new kid on the block doesn&amp;#39;t mean that CS
classes all need some external evaluator. If you don&amp;#39;t trust your
teachers to assess you shouldn&amp;#39;t teach them to teach. &lt;/p&gt;
&lt;p&gt;
Now, this is not to say that there aren&amp;#39;t time for external
assessments or engaging outside parties to help us design, deliver,
and assess educational experiences. High School CS teachers can use
higher Ed CS people and tech industry players to great effect but it&amp;#39;s
the teacher that should drive these relationships and partnerships.&lt;/p&gt;
&lt;p&gt;
The bottom line question is &amp;#34;do you trust your teachers or not.&amp;#34; If
you do, you should empower them and support them to do their
thing. It&amp;#39;s like a former teacher of mine always said: &amp;#34;to solve the
education problem, hire great teachers and get the F out of the way!&amp;#34;
On the other hand, if you don&amp;#39;t trust your teachers, something&amp;#39;s
fundamentally wrong in your school.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Big Code And Case Studies</title>
      <link>https://cestlaz.github.io/post/big-code-and-case-studies/</link>
      <pubDate>Wed, 24 Jul 2019 11:22:12 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/big-code-and-case-studies/</guid>
      <description>&lt;p&gt;
I&amp;#39;m enjoying reading about Ria Galanos&amp;#39; new chapter on her blog. In
her &lt;a href=&#34;https://cscheerleader.com/putting-it-all-together&#34;&gt;most recent post&lt;/a&gt; Ria briefly talks about the fact that very few
professional developers start from scratch and most work in existing
large code bases. She wonders why the College Board got rid of the
APCS-A case study and talked about how it gave students an opportunity
to work on a multi-file complex system. Over the past few years others
have wondered if the College Board should bring it back.&lt;/p&gt;
&lt;p&gt;
While I agree that students should learn to work in a large code base
at some point in time and there are a whole bunch of software
engineering skills that would better serve the vast majority of CS
students than what is taught in full undergraduate programs I have to
disagree that bringing back the APCS-A case study is the way to go.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m not against case studies and large complex CS projects in APCS-A
per se but rather that tying a specific large project to the AP exam
forces teachers to teach in a way that might not suit them or their
students. The case study never worked for me. It never fit in with the
way I liked to develop my classes. As a result it was merely a time
sink. To be honest, most of the time I just paid it lip service with
minimal coverage. It never seemed to affect my student&amp;#39;s scores so it
wasn&amp;#39;t something I had to worry about. I also used to use a few texts
over the years that integrated a large project throughout their
chapters and since those also didn&amp;#39;t mesh with the class it made large
swaths of the books more difficult to work through when trying to use
them to understand core concepts.&lt;/p&gt;
&lt;p&gt;
I haven&amp;#39;t looked at all the newly released materials yet but I did
like the recent trend of making labs available that you could use to
cover core concepts but you didn&amp;#39;t have to. The same could be done for
case studies. Nothing stops the College Board or independent providers
from releasing things like Grid World or other case studies. Make them
available for teachers who&amp;#39;s classes are structured in ways that those
case studies support the class rather than are a forced add on.&lt;/p&gt;
&lt;p&gt;
Beyond this, we also have the issue with exposing kids to larger
sometimes partially opaque code bases. This is pretty important but
many students don&amp;#39;t learn this until their on the job. &lt;/p&gt;
&lt;p&gt;
At Hunter, we do have a capstone project course where students do
indeed create some large team application using multiple technologies
but they do it largely on their own having not formally been prepared
in their earlier classes for development in the large. In my
experience, huge numbers of students from a wide array of well
respected institutions do little better at this. Many students do have
to work in a professors framework - write a &amp;#34;player&amp;#34; for the game and
such but that&amp;#39;s much more limited.&lt;/p&gt;
&lt;p&gt;
So, we should be doing a better job at this but I&amp;#39;m also not sure if
APCS-A is the place. While it might work well at a TJ, where Ria
taught or Stuy where I spent most of my career, my gut tells me that
this is something for a course later in the undergraduate sequence.&lt;/p&gt;
&lt;p&gt;
Regardless of when this is covered (if it&amp;#39;s covered at all) it&amp;#39;s
certainly worth teaching kids the common tooling to help them
along. Back in the day I used &lt;a href=&#34;https://en.wikipedia.org/wiki/Ctags&#34;&gt;Ctags&lt;/a&gt; to navigate large complex C code
bases. Ctags still exists in more modern forms and it and similar
tools work for a variety of languages. Coding standards like those
published by &lt;a href=&#34;https://google.github.io/styleguide/javaguide.html&#34;&gt;Google&lt;/a&gt; can make for an easier code based to understand
and tools like &lt;a href=&#34;https://www.oracle.com/technetwork/java/javase/documentation/index-jsp-135444.html&#34;&gt;Javadoc&lt;/a&gt; and similar for other languages can create web
based documentation where students can click through complex
hierarchies and relationships. Tools like &lt;a href=&#34;https://github.com/BurntSushi/ripgrep&#34;&gt;Ripgrep&lt;/a&gt; and &lt;a href=&#34;https://github.com/ggreer/the_silver_searcher&#34;&gt;Silver Searcher&lt;/a&gt;
can also be lifesavers in finding code across complex directory
structures. Most if not all of these tools are directly supported in
many editors and ides.&lt;/p&gt;
&lt;p&gt;
So, where am I at on this. Let&amp;#39;s not require any specific case study
in APCS-A but let&amp;#39;s make things like them available. On the other
hand, it would be great if our students did indeed all have the
opportunity to learn how to work in large complex pre-existing code
bases but that&amp;#39;s an issue well beyond just APCS-A and high school.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>CSTA 2019</title>
      <link>https://cestlaz.github.io/post/csta-2019/</link>
      <pubDate>Sun, 14 Jul 2019 11:23:27 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/csta-2019/</guid>
      <description>&lt;p&gt;
So, I got back from CSTA2019 and promptly got a summer cold which laid
me up for the past couple of days.&lt;/p&gt;
&lt;p&gt;
Phoenix was beautiful even with it being unbearably hot at times and
it&amp;#39;s a place I think I&amp;#39;d like to visit again when it&amp;#39;s a bit cooler. &lt;/p&gt;
&lt;p&gt;
I said in an earlier post that for me, CSTA is typically more of a
person conference and less of a session conference and that held true
again. I missed a few sessions that I originally wanted to attend
because I was involved in really good conversations in the exhibit
hall and before I knew it, the session was over and done. I can&amp;#39;t say
that I regret sticking with the conversations.&lt;/p&gt;
&lt;p&gt;
So, for the sessions, I don&amp;#39;t have much to say. I do wish it was easier
to glean information from the session descriptions. Even sessions with
lengthy descriptions left me with some question and given that
sessions were an hour long I wish some had more clarity. Specifically,
there were a good number of sessions on AI and ML but often was left
wondering if the sessions were more about doing cool problems with
some AI engine or api and real world data or if it was really about
learning about AI and ML and how to teach them.&lt;/p&gt;
&lt;p&gt;
The last session I attended was &amp;#34;Nifty Assignments&amp;#34; and that was an
interesting contrast to the SIGCSE session of the same name. Most notably at SIGCSE
the assignments are generally for a college level CS1 or CS2 but these
spanned K12. You can check out all of the assignments &lt;a href=&#34;https://sites.google.com/site/cstaniftyassignments/&#34;&gt;here&lt;/a&gt;. The one
that I found particularly interesting was Dale Reed and Joe Hummel&amp;#39;s
&lt;a href=&#34;https://sites.google.com/site/cstaniftyassignments/home/2019/reed-hummel-letter-frequency&#34;&gt;lesson&lt;/a&gt; which, from a CS point of view is similar to a set of lessons
I&amp;#39;ve been doing for a few years (&lt;a href=&#34;https://cestlaz.github.io/posts/2014-01-07-rot13-gateway/&#34;&gt;post&lt;/a&gt;). I think it&amp;#39;s worth looking at
both assignments to contrast how you can have very different
approaches and emphases with similar core material.&lt;/p&gt;
&lt;p&gt;
I did a session with my partner in crime, JonAlf on using GitHub as a
web presence. I think this approach could be a good way to introduce
students and teachers to Git and GitHub in a low friction manner. It&amp;#39;s
a good first step to using GitHub for program development. You
can use the GitHub web page to update a web page time and again and
each time leave a little comment about what you&amp;#39;ve done. It turns out
this is just a commit message - just like &amp;#34;real&amp;#34; programming with git.
I can&amp;#39;t speak to how good the session was - you&amp;#39;ll have to ask the
attendees. &lt;/p&gt;
&lt;p&gt;
I&amp;#39;m thinking of proposing a full blown workshop for next year&amp;#39;s CSTA
conference that goes through both how I use GitHub and also models the
process I use to bring my students from novice to comfortable user.&lt;/p&gt;
&lt;p&gt;
Moving from the sessions, this year CSTA added a poster
session. Unfortunately, the posters went up shortly before the session and came
down right after and since I couldn&amp;#39;t get to the posters during the
official session I couldn&amp;#39;t really take them in beyond a passing
glance. I&amp;#39;m hoping that next year the posters go up early and stay up
for the duration.&lt;/p&gt;
&lt;p&gt;
Some notes on the vendors area - wow - it was a far cry from two years
ago where there were just a handful in a hall. I think I heard that
there were around 60. There were the usual suspects - Google and
Microsoft, curriculum providers like CodeHS, BJC,  and PLTW, lots of robotics
stuff and organizations like NCWIT and the College Board. I was there
with the GitHub contingent so I spent most of my time at the
booth. The nice thing is that while I was there to talk to people
about GitHub I was free to give the real deal - my experience - the
good parts and the pain points. Also had plenty of time to talk CS and
CS Education in general.  &lt;/p&gt;
&lt;p&gt;
I&amp;#39;d also like to mention Devorah&amp;#39;s &lt;a href=&#34;http://blanketstatementproject.com/&#34;&gt;Blanket Statement&lt;/a&gt;
project. Crowdsourcing knitting a blanket for a child in need. &lt;/p&gt;
&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;And the total is ... 44 blocks crafted during &lt;a href=&#34;https://twitter.com/hashtag/CSTA2019?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#CSTA2019&lt;/a&gt; . 3 are not pictured as I still have to finish them off. Look for the final, finished product early next week. If anyone still has blocks, message me for my snail mail. Thank you all! &lt;a href=&#34;https://t.co/ZLDcEEK9ig&#34;&gt;pic.twitter.com/ZLDcEEK9ig&lt;/a&gt;&lt;/p&gt;&amp;mdash; BlanketStatement (@BlanketStmtProj) &lt;a href=&#34;https://twitter.com/BlanketStmtProj/status/1149798258002280448?ref_src=twsrc%5Etfw&#34;&gt;July 12, 2019&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;p&gt;
Somewhere between 20 and 40 attendees spent time with
Devorah at the GitHub booth putting idle hands to good use. Devorah
and I are greatful to GitHub for hosting us and for the CSTA
conference organizers for allowing this added activity. We&amp;#39;re hoping
it can become a regular activity at the CSTA conference.&lt;/p&gt;
&lt;p&gt;
So, that&amp;#39;s my conference summary. I&amp;#39;m already looking forward to next
year in Arlington Virginia.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Planning For CSTA 2019</title>
      <link>https://cestlaz.github.io/post/planning-for-csta-2019/</link>
      <pubDate>Thu, 04 Jul 2019 17:26:57 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/planning-for-csta-2019/</guid>
      <description>&lt;p&gt;
Looking forward to flying out to Phoenix for CSTA-2019 Saturday
morning. The conference doesn&amp;#39;t officially start until Sunday, Monday
for me since I&amp;#39;m not doing any of the pre-conference workshops. We&amp;#39;ll
have most of Saturday as long as we&amp;#39;re up to it, Sunday, and Monday
morning. Actually, there is the GitHub reception on &lt;a href=&#34;https://csta-github-meetup.confetti.events/&#34;&gt;Sunday evening&lt;/a&gt; so
that&amp;#39;s kind of official conference stuff.&lt;/p&gt;
&lt;p&gt;
As to the conference, I&amp;#39;m super looking forward to it. To me CSTA is
 a people conference. SIGCSE by contrast is more of a sessions
conference. SIGCSE is bigger and less intimate. I have a great time
there catching up with friends from across the country and when my asocial
self manages, making new ones but for me it&amp;#39;s more content/session
driven. There are always a bunch of sessions where I say to myself &amp;#34;I
really should go to that.&amp;#34;&lt;/p&gt;
&lt;p&gt;
CSTA is more intimate so it seems easier to meet and talk to new
people, even for asocial me. On the other hand, I find fewer &amp;#34;must
see&amp;#34; sessions. This makes sense though. I no longer
teach K12 and I had already designed and taught complete course
sequences going from beginner through college level before the first
CSTA conference.&lt;/p&gt;
&lt;p&gt;
Don&amp;#39;t get me wrong. There are lots of great sessions. It&amp;#39;s more that
many of the sessions I&amp;#39;m interested in are more &amp;#34;that looks cool&amp;#34; or
&amp;#34;interesting&amp;#34; rather than, &amp;#34;I really need to see that for what I&amp;#39;m
doing or where I&amp;#39;m at in my career.&amp;#34;  Maybe it&amp;#39;s just that it&amp;#39;s really
hard for the sessions to match the value added from CSTA&amp;#39;s &amp;#34;hallway
track&amp;#34; which I think is through the roof.&lt;/p&gt;
&lt;p&gt;
Here are the sessions I&amp;#39;m zeroing in on:&lt;/p&gt;
&lt;p&gt;
On Monday, the &amp;#34;Creativity in the K-12 Computing Classroom&amp;#34; BOF looks
interesting so I&amp;#39;ll probably try to hit it. On Saturday, I&amp;#39;m curious
about the &amp;#34;Advanced CS Concepts in High School: One Tool to Rule Them
All&amp;#34; session. Based on the description, I&amp;#39;m curious how much is about
advanced concepts and how much about tooling and resources that let
you get to interesting data and applications. The &amp;#34;How to teach AI
across K-12&amp;#34; session could also be interesting.&lt;/p&gt;
&lt;p&gt;
JonAlf and I will be doing our session on using GitHub in the next
block so I pretty much have to be there :-).  In the afternoon, I&amp;#39;m
looking at the &amp;#34;You can teach Machine Learning to HS students&amp;#34; mostly
because I&amp;#39;m curious as to how the presenter&amp;#39;s thoughts on the subject
can add to what I&amp;#39;ve done in my classes. Actually, that&amp;#39;s also why I&amp;#39;m
interested in the earlier AI session. I&amp;#39;m also intrigued by Ed Campos&amp;#39;
Bootstrap Data talk but I won&amp;#39;t directly be going down that road in
any classes soon so have to prioritize. &lt;/p&gt;
&lt;p&gt;
For the last block, I&amp;#39;m intrigued by the Embroidery talk but Nifty
Assignments will probably win out.&lt;/p&gt;
&lt;p&gt;
I haven&amp;#39;t looked over Wednesday&amp;#39;s schedule yet - I&amp;#39;ll leave that for
Tuesday evening. &lt;/p&gt;
&lt;p&gt;
I don&amp;#39;t think I&amp;#39;ll be going to most of these sessions, I&amp;#39;ll probably
spend a good amount of time at the GitHub booth hopefully talking shop
with my fellow educators. &lt;/p&gt;
&lt;p&gt;
Besides, when I&amp;#39;m at the GitHub booth I also get to hang out with
Devorah (my wife). Did I mention, she&amp;#39;s doing a very cool
&lt;a href=&#34;http://blanketstatementproject.com/&#34;&gt;knitting/crocheting for charity&lt;/a&gt; project that you all should check out?&lt;/p&gt;
&lt;p&gt;
Hope to see all my old friends and meet many new ones in a few
days!!!!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Proof By Authority</title>
      <link>https://cestlaz.github.io/post/proof-by-authority/</link>
      <pubDate>Tue, 25 Jun 2019 07:00:12 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/proof-by-authority/</guid>
      <description>&lt;p&gt;
No,I&amp;#39;m not talking about&lt;a href=&#34;https://en.wikipedia.org/wiki/Argument_from_authority&#34;&gt;Argument from Authority&lt;/a&gt; - something that very
much plagues CS Education and education in general where an annointed
few who may, or may not really know what they&amp;#39;re talking about are
given creedence because they&amp;#39;ve been there the longest, work for the
companies with the biggest names, have the economic backing  or
otherwise have been given the stage. &lt;/p&gt;
&lt;p&gt;
I&amp;#39;m talking about Proof by Authority which I fondly remember from
those silly &lt;a href=&#34;https://www.cs.hmc.edu/~fleck/proof.html&#34;&gt;Proof techniques&lt;/a&gt; lists that went around in the
day. Techniques like:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Technique&lt;/th&gt;
&lt;th&gt;Example&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Proof by Intimidation&lt;/td&gt;
&lt;td&gt;Trivial&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Proof by example&lt;/td&gt;
&lt;td&gt;The author solves for n - 2…&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Proof by funding&lt;/td&gt;
&lt;td&gt;How the Bill Gates Foundation be wrong&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;
and many many more.&lt;/p&gt;
&lt;p&gt;
Proof by authority was basically &amp;#34;I saw Dr. Gershon in the elevator
and she said….&amp;#34;&lt;/p&gt;
&lt;p&gt;
What made me think og this was this Tweet by &lt;a href=&#34;https://twitter.com/b0rk&#34;&gt;Julia Evans&lt;/a&gt;:&lt;/p&gt;
  &lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;i&amp;#39;m not
sure if this advice is too obvious/basic but I really like to approach
confusing debugging situations by first looking at where my
understanding of the system is fuzzy, not by immediately trying to
tackle the bug&lt;/p&gt;&amp;mdash; 🔎Julia Evans🔍 (@b0rk) &lt;a
href=&#34;https://twitter.com/b0rk/status/1143313949640810498?ref_src=twsrc%5Etfw&#34;&gt;June
25, 2019&lt;/a&gt;&lt;/blockquote&gt; &lt;script async
src=&#34;https://platform.twitter.com/widgets.js&#34;
charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;p&gt;
I don&amp;#39;t know Julia personally, but we have mutual friends and I&amp;#39;ve been following
her online for a while. She makes cool &amp;#34;zines&amp;#34; and interesting blog
posts about a variety of tech type topics leaning towards the systems
side. Her latest post on &lt;a href=&#34;https://jvns.ca/blog/2019/06/23/a-few-debugging-resources/&#34;&gt;debugging&lt;/a&gt; is well worth a read.&lt;/p&gt;
&lt;p&gt;
What caught my eye was &amp;#34;I&amp;#39;m not sure if this advice is too
obvious/basic…&amp;#34; It isn&amp;#39;t. As an educator I&amp;#39;ve found that to others,
what&amp;#39;s obvious to us is not always obvious or clear to others. What I
also got to thinking about was the fact that if a student follows Julia,
they&amp;#39;re, in many cases, more likely to listen to her rather than her
teacher because Julia&amp;#39;s a known and respected expert in the field and
a teacher is well, just a teacher. &lt;/p&gt;
&lt;p&gt;
This further reminded me of something that happened early on in my
career. I was a reasonably popular teacher but I didn&amp;#39;t have that much
of a reputation being fairly new. I would try to add real world  best practices to
my classes but I could tell that many of the students weren&amp;#39;t really
buying it. Mid semester, a friend came to town. He was a long time
Microsoft employee. He started right after college in the late 80&amp;#39;s
and had been there ever since. He gave a guest talk in my classes. &lt;/p&gt;
&lt;p&gt;
One of the things I remember Danny saying in the class was that &amp;#34;Stuy
wasn&amp;#39;t special because of the teachers, but rather because of the
students.&amp;#34; He was right, but I, um &amp;#34;Thanks, Danny, you know, I&amp;#39;m a
teacher and right here in the room :-)&amp;#34; On the other hand, in later
talks he always did say to listen to what I had to say. I guess during
the first talk he didn&amp;#39;t really know what I brought to the table as a
teahcer.&lt;/p&gt;
&lt;p&gt;
The other thing is that Danny talked about a number of best practices
both in his talk and during Q&amp;amp;A. In all cases, what he said mirrored
what I had been telling my students all year and none of it was
planned.&lt;/p&gt;
&lt;p&gt;
Not only did the kids pay more attention to what Danny had to say than
what I had previously tried to say but from that point on, they paid
more attention to my asides on what is done in the &amp;#34;real world.&amp;#34; I had
been authenticated by a top level Microsoft engineer. Proof by
Authority.&lt;/p&gt;
&lt;p&gt;
Since those early days, I&amp;#39;ve developed my own reputation. My students
graduated and went on to success both in and outside of CS. They
both provided the information I needed to know how best to prepare my
students and also verified that I was doing it. Over time I needed
outside verification less and less but was able to get and rely on
outside information more and more.&lt;/p&gt;
&lt;p&gt;
When I saw Julia&amp;#39;s tweet it made me think that having respected
industry people share their thoughts on what works for them in clear
concise ways is not only valuable directly but can also be of value
indirectly when used wisely by teachers.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Year in Review - the classes</title>
      <link>https://cestlaz.github.io/post/semester-review/</link>
      <pubDate>Wed, 12 Jun 2019 09:02:19 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/semester-review/</guid>
      <description>&lt;p&gt;
Now that the semester&amp;#39;s over I&amp;#39;ve had a chance to reflect a bit on my
teaching over the past year. &lt;/p&gt;
&lt;p&gt;
This year I taught two classes each semester so the load was a little
higher. First semester was one class of our CS0 and one of the
lab/enrichment component that goes with CS1. Nothing big to report
there as I&amp;#39;ve done them both before.&lt;/p&gt;
&lt;p&gt;
The biggest difference was that I had to deal with two separate
classes even though they&amp;#39;re one cohort. I can&amp;#39;t say I did a
particularly good job with that - something to keep working on next
year.&lt;/p&gt;
&lt;p&gt;
In the second semester the CS0 became the CS1 lab/enrichment and that
went pretty well overall. I was unhappy with some of the scheduling.
The students work on labs in class for a number of sessions and due to
circumstances beyond my control I had to finish out the class with a
number of consecutive lab classes whereas I would have much rather
spread those out with the enrichment lessons. Not happy about it but
there wasn&amp;#39;t much I could do.&lt;/p&gt;
&lt;p&gt;
The other class was data structures. This was the first time I was
teaching it at Hunter, first time in C++ in well over a decade and
first time in around five years. I think the class went alright but
there was a lot of room for improvement. For one thing, C++ is not
Java. In Java things are pretty restricted - there&amp;#39;s pretty much one
way to deal with linked list and dynamic structures. C++ is a little
more complex. Do you do structs or classes? When do you introduce
smart pointers (if at all)? Separate compilation and if so when? What
about templates/generics - they&amp;#39;re much more cumbersome and complex in
C++. Also, don&amp;#39;t get me started on exceptions. Lots of decisions to be
made and once you make them it&amp;#39;s hard to change directions.&lt;/p&gt;
&lt;p&gt;
I decided to go with all classes, separate compilation, did
templates/generics early but then constrained our data structures to a
fixed type. Did regular pointers and then smart pointers a ways in.&lt;/p&gt;
&lt;p&gt;
Because of all of the changes, I also missed the chance to use a
number of my class motivations and tricks that I&amp;#39;ve used in the
past. I should be able to mix those in next time around. Things like
building  a linked list or studetns in class prior to studying them or
playing out a mergesort with a deck of cards.&lt;/p&gt;
&lt;p&gt;
Another thing I had to deal with that was new was the range of student
backgrounds. I have a number of students in my program from NYCS&amp;#39;s
specialized schools and Stuy in particular. No surprise but the Stuy
students have much more experience than the rest both in terms of time
they&amp;#39;ve spent programming and in terms of what they&amp;#39;ve studied. All of
the Stuy students had done most if not all of the data structures in
Java and most had taken 3 years of CS and have completed many major
projects. There were other students who did APCS-A plus another year but
not the data structures and finally those who had just done
APCS-A. They&amp;#39;re all great kids and more experience doesn&amp;#39;t equate to
more ability but there&amp;#39;s a big difference in terms of what you can do
and how quickly you can do it after a year of APCS-A and a course or
three beyond it.&lt;/p&gt;
&lt;p&gt;
That was a tricky juggling and balancing act adn I think I&amp;#39;ll handle
it better next year.&lt;/p&gt;
&lt;p&gt;
I didn&amp;#39;t get to cover quite as much as I wanted in the Data Structures
class and I certainly didn&amp;#39;t cover it as well as I would have liked
but I don&amp;#39;t think I did a bad job. I&amp;#39;ve been in this racket long
enough to know the ebbs and flows.&lt;/p&gt;
&lt;p&gt;
Overall I was happy with the year teaching wise but see a lot of
places where I want to do better and do more. &lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Grokking Algorithms</title>
      <link>https://cestlaz.github.io/post/grokking-algorithms/</link>
      <pubDate>Tue, 11 Jun 2019 07:29:30 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/grokking-algorithms/</guid>
      <description>&lt;p&gt;
Someone mentioned &lt;a href=&#34;https://www.manning.com/books/grokking-algorithms&#34;&gt;Grokking Algorithms&lt;/a&gt; by Aditya Y. Bhargava in one of
the CS educator Facbeook groups. It looked interesting so I thought
I&amp;#39;d give it a once over.&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s certainly an accessible book. Text mixed with cute line drawings,
&amp;#34;hand written&amp;#34; text, diagrams and picture.s It reminded me of one of
my favorite, most accessible  Calculus books &lt;a href=&#34;https://www.goodreads.com/book/show/706622.Who_Is_Fourier_a_Mathematical_Adventure&#34;&gt;Who Was Fourier&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;
Overall I enjoyed the book but I&amp;#39;m not sure what its best audience
is. If you look at the selection of topics, it&amp;#39;s a little
haphazard. It introduces Big-O notation, sescrion sort, and intro
recursion all of which are covered prior to an algorithms course. It
also introduces linked lists in what I felt was an early and arbitrary
place but then neither gave any more than a theoretical overview nor
came back to them later. On the other hand, when the author covers
QuickSort he at one point compares it to a MergeSort as if that were
covered as well. On the more advanced side, there are Hash Tables,
Dijkstra&amp;#39;s Aalgorithm, Dyanmic Programming, and a few teasers at the
end.&lt;/p&gt;
&lt;p&gt;
The biggest downside of the book, to me, is that some of the topics
seem to be great explanations of things as long as you already know
them. The Linked List coverage is a great example of this. The author
does a nice job relating Linked Lists to memory and how they are
theoretically implemented under the hood. That said, unless you&amp;#39;ve
already studied linked lists it probably isn&amp;#39;t enough to go
anywhere. This might be fine if you are to assume that the reader has
already taken data structures but if that&amp;#39;s the case, the linked list
section is probably superflous.&lt;/p&gt;
&lt;p&gt;
Another point I noted was that some of the coverage is pretty standard
but some is great. I wasn&amp;#39;t very impressed by the recursion chapter
nor the coverage of Dijkstra&amp;#39;s algorithm. They were fine but nothing
special. On the other hand, I very much liked the way Bhargava laid
out and discussed Dynamic Programming. To me, that section alone is probably
worth the book. I don&amp;#39;t think it&amp;#39;s enough for you to build a unit on
Dyanamic Programming but the author provides a great way of developing
and talking about the subject and gives some nice examples. I also
like the way it builds from Greedy Algorithms.&lt;/p&gt;
&lt;p&gt;
To be fair, I read a couple of Amazon Reviews of the book and one
reviewer loved the coverage of  Dijkstra&amp;#39;s algorithm so there is a lot
of subjectivity here. &lt;/p&gt;
&lt;p&gt;
A couple of other minor points worth thinking about are math and
rigor. One of the quotes on the back of the book states:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;This book does the impossible: it makes math fun and easy!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I&amp;#39;ve got to disagree with this. The book doesn&amp;#39;t take any
traditionally difficult math and magically make it trivial. Rather the
book has some examples where basic math can be used to great
effect. In one section, Bhargava talks about classifiers and
similarity scores using the Distance Formula. It&amp;#39;s somewhat similar to
what I do &lt;a href=&#34;https://cestlaz.github.io/posts/2014-01-07-rot13-gateway/&#34;&gt;here&lt;/a&gt;. He&amp;#39;s not making hard math easy but rather he&amp;#39;s showing
that basic math can be amazingly useful and you can do cool and
powerful things with it. Nothing wrong with that. It&amp;#39;s a great thing
to do but it&amp;#39;s not making hard math easy. The author also refers the
reader to external references for more.&lt;/p&gt;
&lt;p&gt;
The other point I want to mention is rigor - this is bound to come up
whenever a book tries to be accessible. While it&amp;#39;s true that the author
seems to fudge or simplify a definition here and there I didn&amp;#39;t find
any major problems and think that his choices in terms of langauge,
rigor, and fudge factor  are generally appropriate.&lt;/p&gt;
&lt;p&gt;
So bottom line - who is this book for and should you get it?&lt;/p&gt;
&lt;p&gt;
This is not a standalone algorithms book. You couldn&amp;#39;t use it for a
class by that name. The book mentions that it could be useful to a
code school graduate and given the lack of consistency in what&amp;#39;s
covered in code schools that&amp;#39;s probably a good recommendation. It
gives some feel and flavor on a number of subjects, does nothing
poorly and while it omits things that might be necessary, it does many
things well.&lt;/p&gt;
&lt;p&gt;
To me, this is an ideal book as resource for a teacher looking to
stretch their APCS-A or APCS-AB class or possibly for an advanced
student.&lt;/p&gt;
&lt;p&gt;
I enjoyed the book. You probably will too.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Do It First</title>
      <link>https://cestlaz.github.io/post/do-it-first/</link>
      <pubDate>Mon, 10 Jun 2019 08:00:08 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/do-it-first/</guid>
      <description>&lt;p&gt;
Reading Garth Flint&amp;#39;s end of year &lt;a href=&#34;https://gflint.wordpress.com/2019/06/07/last-day-of-school-and-done-with-java/&#34;&gt;post&lt;/a&gt; and Alfred Thompson&amp;#39;s &lt;a href=&#34;http://blog.acthompson.net/2019/06/how-well-can-you-code-projects-you.html&#34;&gt;follow up&lt;/a&gt;
had me thinking about a couple of things. &lt;/p&gt;
&lt;p&gt;
One was spurred when Garth
wrote &amp;#34;They also have to figure out the math before they code.&amp;#34; This
made me think about all the details we sometimes &lt;a href=&#34;https://cestlaz.github.io/posts/2014-11-21-little-details.html/&#34;&gt;take for for
granted&lt;/a&gt;. Things that are hard for our students that we just know. It&amp;#39;s
frequently math that we might find trivial but it could also be much
simpler things.&lt;/p&gt;
&lt;p&gt;
When I write Java code I have a snippet that provides most of my main
boilerplate. For a beginner, just typing in all the details and
getting them right might be a chore. Heck, even typing is something we
take for granted. Beginners who can type have a distinct
advantage. They can focus on the code rather than on the keys. That
boilerplate code might take ten minutes of typing alone and that&amp;#39;s not
adding in any typos or understanding errors. &lt;/p&gt;
&lt;p&gt;
I don&amp;#39;t have anything to add here that I didn&amp;#39;t address in earlier
posts and Garth&amp;#39;s post has some great points so if you haven&amp;#39;t read it
yet, I recommend you take the few minutes to do so.&lt;/p&gt;
&lt;p&gt;
The other thoughts were spurred from this part of Garth&amp;#39;s post:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;did only two of the six assignments myself.  With the others I saw
 the solution so did not code them up.  I should have coded them up
 just so I could answer questions better for the students.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Alfred expounded on this in his post and there was a good twitter
conversation around it as well.&lt;/p&gt;
&lt;p&gt;
As a general rule as teachers we should have solved the problems
before we assign them and not just theoretically be able to solve
them. Actually writing up the solutions can also clue us in on some of
the difficulties that our students might face. Particularly if we
really try to look at the assignment using our student&amp;#39;s eyes. &lt;/p&gt;
&lt;p&gt;
Neal Plotnick tweeted: &lt;/p&gt;
  &lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;The lack of
experience with coding for Ts combined with canned, cloud based
curricula has allowed classrooms to be created with Ts pushing
assignments out and relying on automated grades. I don’t have a CS
degree but I made sure to code my python assignments first.&lt;/p&gt;&amp;mdash;
neil plotnick (@NeilPlotnick) &lt;a
href=&#34;https://twitter.com/NeilPlotnick/status/1137340790554996736?ref_src=twsrc%5Etfw&#34;&gt;June
8, 2019&lt;/a&gt;&lt;/blockquote&gt; &lt;script async
src=&#34;https://platform.twitter.com/widgets.js&#34;
charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;p&gt;
And this is a real concern for me. I get it - we&amp;#39;re building a plane
while flying it and that places teachers in situations where they have
to learn on the fly and at times they&amp;#39;ll  have to assign problems
before they have  solutions. Long term, however, this is a big problem
and I suspect it&amp;#39;s not going to go away. &lt;/p&gt;
&lt;p&gt;
On the other side of the coin though are times when it&amp;#39;s best not to
have a solution before the class. Sure, if you&amp;#39;re teaching a merge
sort or doing a unit on inheritance you probably should have your
ownb written solutions but there are a whole bunch of topics which
lend themselves to doing things on the fly:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;debugging&lt;/li&gt;
&lt;li&gt;software engineering practices&lt;/li&gt;
&lt;li&gt;how to approach &amp;#34;random&amp;#34; problems&lt;/li&gt;
&lt;li&gt;practical &amp;#34;programming&amp;#34; techniques&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;can all benefit from an on the fly lesson. &lt;/p&gt;
&lt;p&gt;
Coding or teaching on the fly, when used appropriately allows the
teacher to model best practices in real situations. Of course this is
difficult to truly replicate if you teach the same class again later
in the day or if you revisit the class next year but it can be a
valuable tool. When you get a bug - a real bug not a planted one in
your code, you can really model techniques to solve the problem and
you can involve the class in finding that solution.&lt;/p&gt;
&lt;p&gt;
This can all be pretty scary. You can end up going down the wrong path
and never finish building whatever you&amp;#39;re building but overall it can
be a very valuable experience for the students. &lt;/p&gt;
&lt;p&gt;
The other consideration is that you can teach a great lesson this way
but it would probably get a low rating on Danielson or whateve
nonsense rubric your district uses for teacher evaluation.&lt;/p&gt;
&lt;p&gt;
None of this is to say that you don&amp;#39;t want to prepare. Most of the
time I&amp;#39;ll have solutions worked out or if not, I&amp;#39;ll have written
similar solutions countless times before but that said, there&amp;#39;s
sometimes value in exploring in the wild or as one of my early
supervisors put it &amp;#34;calling an audible.&amp;#34;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>AP Classes, Placing Students, and First Topic Exposures</title>
      <link>https://cestlaz.github.io/post/placing-students/</link>
      <pubDate>Mon, 03 Jun 2019 13:27:22 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/placing-students/</guid>
      <description>&lt;p&gt;
Just like last year, I&amp;#39;m taking in two classes worth of students in to
my honors program. The challenge is that I can only teach two classes
and I&amp;#39;ve got to figure out what to teach  and then which students
belong in which class.&lt;/p&gt;
&lt;p&gt;
It basically comes down to one of two courses, our CS0 (CSCI127) and
our CS1 (CSCI135). &lt;/p&gt;
&lt;p&gt;
CSCI127 is a first programming experience. The normal class is taught
as a large lecture with small recitation/labs. It&amp;#39;s Python based and
the kids do a bunch of small programs in a variety of domains. They
also cover a few &amp;#34;miscellaneous&amp;#34; topics including base conversions,
truth tables, simple circuits, a baby look at an Assembly language
and an intro to C++ at the end. My version also uses
Python but is much more of a deep dive and also brings in a few
Softwae Engineering practices. I don&amp;#39;t do the extras other than the
C++ intro.&lt;/p&gt;
&lt;p&gt;
CSCI135 is most analogous to APCS-A with the biggest difference being
our core language is C++. That means memory management, references and
all that good stuff. We also sequence things a little differently than
AP. For instance, we don&amp;#39;t do sorting at all until the second semester
but do deal with pointers. I don&amp;#39;t actually teach CSCI135 at all. Most
Hunter students take a 1 credit programming lab (CSCI136) to go along
with CSCI135. I teach a 3 credit version of that where we do a bunch
of enrichment.&lt;/p&gt;
&lt;p&gt;
On the student side, they come in with a range of CS experiences. Some
are 100% new to the subject, some are self taught, a few have taken
after school or summer programs like GWC, Technovation, or others and
a bunch have taken some CS in school with the largest numbers being
either APCS-A or APCS-Principles. &lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve found the quality of the outside experiences to be uneven at
best. More often than not kids who come from them and think they&amp;#39;re
experienced programmers and really haven&amp;#39;t learned anything. I&amp;#39;ve
got to be careful with them but placement is easy. They  go to
CSCI127. The same is true for kids coming in from APCS-P. APCS-P is
also very uneven in terms of what the kids come out with and it&amp;#39;s not
a direct replacement for our CSCI127.&lt;/p&gt;
&lt;p&gt;
The big question is what to do with the APCS-A kids. APCS-A does give
students a decent programming background but it&amp;#39;s in a different
language. There&amp;#39;s also the memory management and reordering of
subjects. It&amp;#39;s clear that for most students, even with APCS-A, our
CSCI135 is the right place. That said, we do offer an in house exam to
place out of it. A few of my students have done that but still do my
enrichment/lab class so I can be confident that the student is up to
speed on C++ and related issues.&lt;/p&gt;
&lt;p&gt;
All of this has led to some discussion in our department recently -
should APCS-A exempt students from our CS0? My argument is that it
should. While I&amp;#39;m no fan of AP or of the AP Exam, kids having finished
the class will have solved problems and built programs more complex
than those we require in our CS0 course. The counter argument relates
to those few non programming topics that are covered in CSCI12700,
specifically, number bases, truth tables, simple circuits, assembly,
and into C++. The argument against placing the kids out of CS0 is that
early exposure to those topics is valuable in preparing the students
for later courses such as those in our required  systems/architecture
track. &lt;/p&gt;
&lt;p&gt;
Does that early exposure really make a difference? In this case, I
don&amp;#39;t think it does. For some topics, specifically recursion, I&amp;#39;ve
found that early lightweight exposure does help later on. We introduced
recursion through Racket (nee Scheme) in Stuy&amp;#39;s intro course and then
later revisited it in ACPS-AB. While I never formally collected data,
the early introduction seemed to help. On the other hand, I never
found early exposure to truth tables, base conversions and circuits to
make a difference even though we did do some of that in some
experimental sections of Stuy&amp;#39;s intro course and then revisted them in
the senior systems course. &lt;/p&gt;
&lt;p&gt;
Why did it seem to make a difference for recursion and not for the
other topics? Probably because the other topics are mechanical and
don&amp;#39;t require new thinking or deep thinking. You see it, you got
it. Recursion on the other hand is a problem solving technique so
there&amp;#39;s more to understand so the early exposure seems to help.&lt;/p&gt;
&lt;p&gt;
This also seems to be born out  at Hunter where my early cohorts
didn&amp;#39;t get those small extra topics but all did very well in the
courses that &amp;#34;required&amp;#34; that knowledge.&lt;/p&gt;
&lt;p&gt;
In the Fall this discussion will continue.  I&amp;#39;m not concerned about my
kids as I have a fair amount of leeway in getting them into the
classes they need. The trick is how to make sure that we&amp;#39;re not
forcing other kids to take classes they don&amp;#39;t need. We need to get these
kids to where they can start to interview for internships sooner
rather than later. At the same time, we have to make sure we&amp;#39;re not
placing kids to far up the track and setting them up for failure. &lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Blog For Self Professional Devleopment</title>
      <link>https://cestlaz.github.io/post/blog-for-pd/</link>
      <pubDate>Thu, 16 May 2019 07:12:44 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/blog-for-pd/</guid>
      <description>&lt;p&gt;
Lat day of the 2019 &lt;a href=&#34;https://www.ncwit.org/summit/2019-ncwit-summit-women-and-it&#34;&gt;NCWIT Summmit&lt;/a&gt;. Got up crazy early, got back from
my run and saw this when I checked Twitter:&lt;/p&gt;
  &lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;A1: CSTA,
Twitter chats like this one, &lt;a
href=&#34;https://twitter.com/guzdial?ref_src=twsrc%5Etfw&#34;&gt;@guzdial&lt;/a&gt;
and &lt;a
href=&#34;https://twitter.com/alfredtwo?ref_src=twsrc%5Etfw&#34;&gt;@alfredtwo&lt;/a&gt;&amp;#39;s
blogs among others. In all cases because those places start from
assuming I&amp;#39;m a CS teacher, rather than starting from assuming
I&amp;#39;m a teacher who is better at teaching something else. &lt;a
href=&#34;https://twitter.com/hashtag/csk8?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#csk8&lt;/a&gt;
&lt;a
href=&#34;https://t.co/6DO77fzq0j&#34;&gt;https://t.co/6DO77fzq0j&lt;/a&gt;&lt;/p&gt;&amp;mdash;
Sarah Judd (@SarahEJudd) &lt;a
href=&#34;https://twitter.com/SarahEJudd/status/1128829652145979392?ref_src=twsrc%5Etfw&#34;&gt;May
16, 2019&lt;/a&gt;&lt;/blockquote&gt; &lt;script async
src=&#34;https://platform.twitter.com/widgets.js&#34;
charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;p&gt;
I don&amp;#39;t usually participate in Twitter chats. The format doesn&amp;#39;t
really work for me. I do frequently lurk though and while I didn&amp;#39;t see
this tweet until the morning after, another &lt;a href=&#34;https://twitter.com/Todd_Lash/status/1128816582048673793&#34;&gt;one&lt;/a&gt; by my &lt;a href=&#34;https://twitter.com/Todd_Lash&#34;&gt;Todd Lash&lt;/a&gt; caught
my eye and I&amp;#39;ll probably comment on that at some point in the near
future.&lt;/p&gt;
&lt;p&gt;
On Sarah&amp;#39;s tweet I&amp;#39;ll say that CS teachers should certainly frequent
Alfred and Mark&amp;#39;s blogs. I subscribe to and enjoy both. I&amp;#39;ll add
something that I&amp;#39;ve said before and that is if you&amp;#39;re a CS teacher you
should also blog.&lt;/p&gt;
&lt;p&gt;
I get it - it takes time, it&amp;#39;s hard to put yourself out there and if you&amp;#39;re a
relatively young teacher you might feel like you don&amp;#39;t have much to
say but I say so what.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve been blogging on and off for nine years now. I have no reason to
believe I have anything more than a small readership but I do
periodically get surprised at a conference with a &amp;#34;hey, I love your
blog.&amp;#34; Comments are few and far between and from &amp;#34;the usual
suspects&amp;#34; but as I sad above, so what.&lt;/p&gt;
&lt;p&gt;
Pick a lesson you just did and describe it. That&amp;#39;s all it takes. Try
something different a week later? Write it up. Rinse and repeat.&lt;/p&gt;
&lt;p&gt;
Why have I found writing a blog to be good self-PD?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Writing the experience or the lesson makes me think through it
again. What worked, what didn&amp;#39;t.&lt;/li&gt;
&lt;li&gt;When I do a similar lesson in the future, I can look back on what I
did. It helps in iterating towards becoming a better teacher.&lt;/li&gt;
&lt;li&gt;I get to see how I&amp;#39;ve evolved as a teacher over time. You don&amp;#39;t get
this immediately but blog for a few years and then reread some early
posts. &lt;/li&gt;
&lt;li&gt;You could get some comments. I don&amp;#39;t get a lot but the ones people
have left have proven useful to me. Some of the ones from people who
disagree have been the most useful.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;On top of this, some other new teacher might discover something you
wrote up and find inspiration from it. &lt;/p&gt;
&lt;p&gt;
So, jump in and try it. Blogging for self-PD. &lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>The Hunter Daedalus Fall 2019 recruiting class</title>
      <link>https://cestlaz.github.io/post/daedalus-class-2019/</link>
      <pubDate>Wed, 08 May 2019 08:25:12 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/daedalus-class-2019/</guid>
      <description>&lt;p&gt;
Now that high school seniors have all committed to their respective
colleges I though I&amp;#39;d share some information on Hunter&amp;#39;s incoming
Daedalus (honors CS) cohort.&lt;/p&gt;
&lt;p&gt;
I joke about the first cohort saying that nobody applied to the
program. That&amp;#39;s kind of true. I jointed Hunter a little over three
years ago in late January. That was after high school seniors had
already applied to college and at that time the program didn&amp;#39;t
exist. We found the first cohort by looking at students who had
already applied to Hunter not expecting Daedalus to exist.&lt;/p&gt;
&lt;p&gt;
It was 12 kids and we&amp;#39;ve lost a few since then. &lt;/p&gt;
&lt;p&gt;
The second cohort consisted of 24 students. We started adding
&lt;a href=&#34;https://en.wikipedia.org/wiki/William_E._Macaulay_Honors_College&#34;&gt;Macaulay&lt;/a&gt; students into the mix. Macaulay is a CUNY wide honors
scholarship program. Each campus has a cohort and it was part of an
effort to bring CUNY back to it&amp;#39;s &amp;#34;glory days&amp;#34; before open
enrollment. The Macaulay kids saw that Daedalus was the place to be
for CS in NYC and Hunter and wanted in. &lt;/p&gt;
&lt;p&gt;
Third year, we were up to 44 students. &lt;/p&gt;
&lt;p&gt;
Now, in our fourth year we&amp;#39;re up to 50 which is a little over
capacity - at least until I can find and hire a partner in crime  (and
I am looking).&lt;/p&gt;
&lt;p&gt;
Some other stats:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Year:&lt;/th&gt;
&lt;th&gt;2016&lt;/th&gt;
&lt;th&gt;2017&lt;/th&gt;
&lt;th&gt;2018&lt;/th&gt;
&lt;th class=&#34;align-right&#34;&gt;2019&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Size:&lt;/td&gt;
&lt;td&gt;12&lt;/td&gt;
&lt;td&gt;24&lt;/td&gt;
&lt;td&gt;44&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;50&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Daedalus / Macaulay:&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;75% / 25%&lt;/td&gt;
&lt;td&gt;75%/ 20%&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;80% / 20%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Approximate Applicants&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;~150&lt;/td&gt;
&lt;td&gt;~200&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;Over 320&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Gender M/F %&lt;/td&gt;
&lt;td&gt;80/20&lt;/td&gt;
&lt;td&gt;75/25&lt;/td&gt;
&lt;td&gt;50/50&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;75/25&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Taken APCS / Beginner&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;50/50&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;50/50&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Number of high schools&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;21&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;# students from beyond NYC&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;
I also have stats on grades and test scores as well as the number of
offers an the percent of acceptances. &lt;/p&gt;
&lt;p&gt;
Some thoughts on the stats:&lt;/p&gt;
&lt;p&gt;
I try to spend as much time as I can doing outreach. This is horribly
inefficient but it&amp;#39;s slowly getting the word out. I might spend most
of a day trekking out into the boroughs to &lt;a href=&#34;https://cestlaz.github.io/post/fall-2018-tour-revisited/&#34;&gt;talk to a class&lt;/a&gt; or a few
classes at some school knowing that there will probably be very few
fits for my program. I think I&amp;#39;m bringing important information to all
of the kids but it&amp;#39;s a low yield activity. Right now our biggest
feeder schools are Stuyvesant, Brooklyn Tech, and Bronx Science. Next
is Midwood. This makes sense as they&amp;#39;re all &lt;strong&gt;large&lt;/strong&gt; schools and they
all have established CS classes. They&amp;#39;ll probably continue to be the
biggest feeders but I&amp;#39;m delighted by the fact that I&amp;#39;m getting
students from 17 other schools including a couple from outside of
NYC. &lt;/p&gt;
&lt;p&gt;
I&amp;#39;m less happy with the gender distribution. Twenty five percent isn&amp;#39;t
bad compared to the national numbers but we should be doing
better. It&amp;#39;s a tough nut to crack. When I visit to schools I&amp;#39;m
normally sent to the CS classes so I&amp;#39;m already getting a gender skewed
audience. Not sure the best approach to work on this. &lt;/p&gt;
&lt;p&gt;
On the other hand, I&amp;#39;m getting to enough of a general audience to have
roughly a 50/50 split of students with APCS-A or beyond or what I
would call a beginner. &lt;/p&gt;
&lt;p&gt;
As I get to know this new group and find out why they applied to
Hunter Daedalus and ultimately decided to attend I&amp;#39;m hoping to be able
to better fine tune my recruiting approach and outreach.&lt;/p&gt;
&lt;p&gt;
As a bottom line I&amp;#39;m going to continue to work to make Hunter&amp;#39;s
Daedalus program the place to be for CS education in NY so that kids
can get a top flight experience without paying a quarter of a million
dollars.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>A Community Curated List of CS Education Resources</title>
      <link>https://cestlaz.github.io/posts/awesome-cs/</link>
      <pubDate>Fri, 16 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/awesome-cs/</guid>
      <description>&lt;p&gt;
One of the things I mentioned in my post on the &lt;a href=&#34;http://cestlaz.github.io/posts/cs-educators-stackexchange/&#34;&gt;CS Educators
StackExchange&lt;/a&gt; was the fragmentation of resources for CS Educators. My
friend and fellow CS teacher Ben pointed out that this is appropriate
as we&amp;#39;re so young as a community. He&amp;#39;s absolutely right but until we
mature, discover-ability can be a problem. We all have our resources
and I for one am frequently surprised when talking to a friend and
discovering that they don&amp;#39;t know about a site or a mailing list that
I&amp;#39;ve known about for years. Likewise, I&amp;#39;m appreciative when others
share resources with me.&lt;/p&gt;
&lt;p&gt;
There are some collections of information, for instance, &lt;a href=&#34;https://twitter.com/alfredtwo&#34;&gt;Alfred
Thompson&lt;/a&gt; has a list of CS Education bloggers but it&amp;#39;s not so easy to
discover and it certainly shouldn&amp;#39;t fall on Alfred to maintain such
a list making sure the links are all active and always being
responsible for adding new ones.&lt;/p&gt;
&lt;p&gt;
Recently I&amp;#39;ve noticed a proliferation of &lt;strong&gt;&lt;strong&gt;awesome&lt;/strong&gt;&lt;/strong&gt;
lists. These are community curated lists hosted up on GitHub for a
variety of projects. I find myself using &lt;a href=&#34;https://github.com/emacs-tw/awesome-emacs&#34;&gt;awesome-emacs&lt;/a&gt; and
&lt;a href=&#34;https://github.com/vinta/awesome-python&#34;&gt;awesome-python&lt;/a&gt; more and more and there are tons of other such lists.&lt;/p&gt;
&lt;p&gt;
I thought we, as a community could benefit from such a list.&lt;/p&gt;
&lt;p&gt;
I started one off. It&amp;#39;s over at
&lt;a href=&#34;https://github.com/zamansky/awesome-cs-education&#34;&gt;&lt;a href=&#34;https://github.com/zamansky/awesome-cs-education&#34;&gt;https://github.com/zamansky/awesome-cs-education&lt;/a&gt;&lt;/a&gt; with instructions on
contributing at
&lt;a href=&#34;https://github.com/zamansky/awesome-cs-education/blob/master/contributing.org&#34;&gt;&lt;a href=&#34;https://github.com/zamansky/awesome-cs-education/blob/master/contributing.org&#34;&gt;https://github.com/zamansky/awesome-cs-education/blob/master/contributing.org&lt;/a&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;
I seeded it with a few items but I&amp;#39;d love everyone to get involved. I
also started it with a few categories and a specific format but I&amp;#39;d
love to see that evolve into something most useful for the community
as well.&lt;/p&gt;
&lt;p&gt;
If you agree that this could be something useful, please contribute to
it and help spread the word.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>CS Educators StackExchange</title>
      <link>https://cestlaz.github.io/posts/cs-educators-stackexchange/</link>
      <pubDate>Thu, 15 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/cs-educators-stackexchange/</guid>
      <description>&lt;p&gt;
The &lt;a href=&#34;https://cseducators.stackexchange.com/&#34;&gt;CS Educators StackExchange&lt;/a&gt; is now in public beta. For those of you
who are not in tech, &lt;a href=&#34;https://en.wikipedia.org/wiki/Stack_Exchange&#34;&gt;StackExchange&lt;/a&gt; is a network of question answering
sites. &lt;a href=&#34;http://stackoverflow.com&#34;&gt;StackOverflow&lt;/a&gt; is probably the most famous - many peoples go to
site for computer science and programming questions and answers.&lt;/p&gt;
&lt;p&gt;
During this period of public beta the site will be working on defining
itself and also on developing a critical mass of users. I hope the
site succeeds and I encourage everyone to &lt;a href=&#34;https://cseducators.stackexchange.com/&#34;&gt;check it out&lt;/a&gt;, ask questions,
answer some and let&amp;#39;s all see where this goes.&lt;/p&gt;
&lt;p&gt;
An interesting difference between StackExchanges and most other
communities is that it&amp;#39;s a question answering site not a discussion
board or shared resource collection. This works well for programming
questions where you can share a code snippet, algorithm, or derivation
which can be shown to be correct. We&amp;#39;ll see how it works for something
more nebulous like education. The voting system should help but the CS
education community is already awash with anointed thought leaders
with little or no teaching or CS experience. It will also be
interesting to see how things develop given that, by and large, K12
educators know a whole lot more about teaching than those in higher ed
while the on the flip side, the professors are generally much
more knowledgeable about the subject matter and then you have the
education researcher which is another beast altogether.&lt;/p&gt;
&lt;p&gt;
Part of me thinks that discussion could be more valuable than answers
and in fact, I&amp;#39;m finding the comments which are more discussion like
to be more interesting, but that&amp;#39;s just me.&lt;/p&gt;
&lt;p&gt;
A side thing I noticed was that the moderators have taken to asking
contributors not to link to other sites but to either write self
contained answers. I understand this desire to have everything under
your roof but it strikes me as wanting to use their silo instead of
someone else&amp;#39;s silo. This happened to me on an answer because I had
already written a series of blog posts on the subject. Admittedly, I
just put up four links and could have (and will) provide more context
but I also had no desire to rewrite my content just to share info that
was already out there. Likewise there was a question that was posed on
A* which led to &lt;a href=&#34;http://cestlaz.github.io/posts/a-star-is-born/&#34;&gt;this post&lt;/a&gt;. I wanted to share my thoughts with &amp;#34;my&amp;#34;
community as well as on the stackexchange and didn&amp;#39;t want to have to
do the same thing twice.&lt;/p&gt;
&lt;p&gt;
One of the moderators claims is that a link might not be
permanent. This is true. My blog might not be around in 5 years but
then the CS Educators StackExchange might not as well. I hope both are
around and thriving but time will tell.&lt;/p&gt;
&lt;p&gt;
This also got me thinking about the  mish mash of
CS Educator communities floating around. I&amp;#39;m familiar with and a
member of:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A few Facebook groups (CS Education, CS Education Discussion, AP&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Comp Sci, APCSP)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The CS Education subreddit&lt;/li&gt;
&lt;li&gt;A couple of mailing lists (the College Board AP Community, SIGCSE)&lt;/li&gt;
&lt;li&gt;A few blogs are kind of communities in that there&amp;#39;s a core group of&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;readers but discussion is pretty sparse.&lt;/p&gt;
&lt;p&gt;
Are there others I&amp;#39;m not aware of?&lt;/p&gt;
&lt;p&gt;
This has led to a lot of duplication and some fragmentation and there
is a concern about silos. The Facebook groups are very much a silo and
to a certain extent so are the mailing lists. I guess the SIGCSE list
is more community run than the College Board one, but still. Blogs are
our own personal islands so while I wish more people would both blog
and comment about CS Ed they&amp;#39;re not necessarily open and permanent
either. At least with some blogs and with the subreddit and
stackexchange we can, if we want, download all of the data if we want
and preserve it for posterity.&lt;/p&gt;
&lt;p&gt;
I don&amp;#39;t know if there&amp;#39;s a solution - maybe we should set up a &lt;a href=&#34;https://github.com/discourse/discourse&#34;&gt;discourse&lt;/a&gt;
instance - something really open and accessible.&lt;/p&gt;
&lt;p&gt;
In any event, please do check out the &lt;a href=&#34;https://cseducators.stackexchange.com/&#34;&gt;CS Educators StackExchange&lt;/a&gt; and
let&amp;#39;s all help it become the best question answering resource it can
be for our community.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>