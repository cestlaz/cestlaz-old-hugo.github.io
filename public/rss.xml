<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>C&#39;est la Z</title>
    <link>https://cestlaz.github.io/</link>
    <description>C&#39;est la Z</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 23 Mar 2024 22:34:50 -0400</lastBuildDate>
    
    <atom:link href="https://cestlaz.github.io/rss.xml" rel="self" type="application/rss" />
    
    
    <item>
      <title>SIGCSE 2024 - Opening Day</title>
      <link>https://cestlaz.github.io/post/sigcse-2024-1/</link>
      <pubDate>Sat, 23 Mar 2024 22:34:50 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/sigcse-2024-1/</guid>
      <description>&lt;p&gt;
Last time I was in Portland Oregon was March 2020. Came in for SIGCSE - the
big CS Education conference. Got in a couple of days early, played
tourist, and then morning of, everything was canceled. Flew back to
NYC on a near empty jet and Covid became very, very real.&lt;/p&gt;
&lt;p&gt;
March 2024 and I&amp;#39;m back in Portland and SIGCSE&amp;#39;s giving it another
go. This time I came out with my daughter Batya who&amp;#39;s developed an
interest in CS education and my wife Devorah who&amp;#39;s been playing
tourist while we&amp;#39;ve been conferencing. &lt;/p&gt;
&lt;p&gt;
The conference kicked off with a keynote by &lt;a href=&#34;https://www.linkedin.com/in/todd-zakrajsek-4b3654/&#34;&gt;Todd Zakrajsek&lt;/a&gt; of UNC. I
was ready to be disappointed. A researcher, that is, not a teacher
who&amp;#39;s spent decades all day every day in the classroom, who&amp;#39;s
published lots of books about how to teach and he&amp;#39;s going to tell me
how to teach.&lt;/p&gt;
&lt;p&gt;
I couldn&amp;#39;t have been more wrong. Content wise, he was spot on. Maybe
the bet SIGCSE keynote I&amp;#39;ve attended. Delivery? He was great there as
well.&lt;/p&gt;
&lt;p&gt;
He gave some backstory - first in family to go to college. Almost
flunked out, wanted to be a cop - never thought of becoming an
educator and over the talk also kept hitting a few key points.&lt;/p&gt;
&lt;p&gt;
One of the overarching themes was that there is no single true
way. Right from the start, he emphasized, for instance that lecturing
wasn&amp;#39;t necessarily bad and that active learning wasn&amp;#39;t always
necessarily the best. Lecturing can be effective but good lecturing
with some good active learning smatterred in can be even more
effective. He later said &amp;#34;I love constructivism &lt;strong&gt;when I have the time&lt;/strong&gt;.&amp;#34;
I loved that. I spent five or six years around a decade ago hearing
from the &amp;#34;experts&amp;#34; that constructivism was the one true way ignoring
the fact that it was neither practical for most public school CS
teachers nor was it optimal due to a variety of constraints. It was
refreshing to hear this expert say what my team and I have been saying
for years. There are lots of ways to teach and what&amp;#39;s best at any
given time depends on a lot of factors and the most effective teachers
figure out what tool to use when and where.&lt;/p&gt;
&lt;p&gt;
Related to this, Zakrajsek emphasized that failure was a combination
of student and teacher. It&amp;#39;s not solely the student&amp;#39;s fault nor solely
the teacher&amp;#39;s. This is related to another pedagogical thought I&amp;#39;ve
long pitched - the best technique to use at any given time is best
determined by evaluating a combination of student needs and situation,
teacher&amp;#39;s strengths, and contextual circumstances.&lt;/p&gt;
&lt;p&gt;
Even though this first theme considered both teacher and student, it
came across to me as a teacher issue - ultimately, it was how to
teach. Another theme I felt was much more student centered.&lt;/p&gt;
&lt;p&gt;
The focus was introvert and extrovert.&lt;/p&gt;
&lt;p&gt;
Group work? Another &amp;#34;one true way&amp;#34; to teach that has been foisted upon
teachers on and off for decades. Zakrajsek claimed, and I agreed, that
while some students love and thrive under it, some hate it. Similarly
some like and do much better with lectures.&lt;/p&gt;
&lt;p&gt;
He also spoke of the extrovert who would raise their hand before the
question was even finished vs the introvert who took their time and
pondered before even considering responding and that as teachers we
must work to accommodate both.&lt;/p&gt;
&lt;p&gt;
I chuckled when he told a story of when he was a guest speaker in a
class and when a student kept raising his hand before the question was
even finished, he&amp;#39;d call on him and ask him to answer. I chuckled
because what he did was very similar to how I handled a similar
student in my class.&lt;/p&gt;
&lt;p&gt;
Back to the group work, another theme was that students don&amp;#39;t know how
to do it unless you teach them - the hidden curriculum and that&amp;#39;s
frequently ignored.&lt;/p&gt;
&lt;p&gt;
This led Zakrajsek to another theme - that when he started he thought
teaching was about content but later he realized it was about learning
to learn.&lt;/p&gt;
&lt;p&gt;
This resonated with me. Zakrajsek was 100% right but it&amp;#39;s 100% &lt;strong&gt;not&lt;/strong&gt; how
teachers are prepared today. Too often teachers are &lt;strong&gt;not&lt;/strong&gt; given the
toolbox of methods and the deep content knowledge to develop
educational experiences appropriate for their populations. Rather
their given canned curricula, scripts, and instructions - what to
teach and how to teach it. Far too many of today&amp;#39;s teachers are
trained to deliver specific content in a specific way and far too few
are prepared to teach students how to learn how to learn.&lt;/p&gt;
&lt;p&gt;
Todd Zakrajsek&amp;#39;s keynote was really amazing. Maybe I&amp;#39;m just saying it
because it echoed so many of my thoughts about teaching and teacher
preparation and he was really entertaining but I&amp;#39;ll stand by that
statement.&lt;/p&gt;
&lt;p&gt;
It was a great way to kick off the conference. There was a lot more to
come on day 1. A great session on teaching, some papers on software
engineering, lightening talks, and then a god BOF and a really bad
one.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ll save those for my next couple of posts.&lt;/p&gt;
&lt;p&gt;
For now, I&amp;#39;ll just say, if and when Todd Zakrajsek&amp;#39;s keynote is made
available online, watch it.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>The SAT - should it be required</title>
      <link>https://cestlaz.github.io/post/sat-required/</link>
      <pubDate>Mon, 11 Mar 2024 15:15:57 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/sat-required/</guid>
      <description>&lt;p&gt;
I saw a few days ago that Yale was reinstating the SAT. They&amp;#39;re
joining Dartmouth and Brown of the Ivies as well as MIT. I have no
idea what percent of applicants, let alone percent those receiving
offers, took the exam anyway for other school applications.&lt;/p&gt;
&lt;p&gt;
Some of my friends thought this was great - a return to standards!!!!
Others felt it was a regressive move and it will hurt diversity and equity.&lt;/p&gt;
&lt;p&gt;
For me, I think it&amp;#39;s all about branding.&lt;/p&gt;
&lt;p&gt;
As my friends know, I&amp;#39;m no fan of the college board. They make
standardized tests and do their best to both make money and to influence
education through programs like the SAT/PSAT and the AP
program. Many have noted that a high SAT score is &lt;strong&gt;not&lt;/strong&gt; a reflection of
intelligence but rather of income. This makes sense. Children from
well to do backgrounds will have better educational opportunities,
more support at home, and be better prepared for a standardized
test. It also makes sense that these students will be better prepared
to face college where life is less forgiving than high school. It&amp;#39;s
not fair and it&amp;#39;s not right, but well to do kids are better set up for
college success.&lt;/p&gt;
&lt;p&gt;
If I had my druthers, both the SAT and the College Board would just go
away.&lt;/p&gt;
&lt;p&gt;
That said, let&amp;#39;s dive in to why I believe that the whole SAT required vs SAT
optional isn&amp;#39;t really about building an incoming class, equitable or
otherwise, but rather about image and branding.&lt;/p&gt;
&lt;p&gt;
For &amp;#34;elite&amp;#34; institutions, image and branding is huge. The truth is,
you can get a class for class equivalent education from a second or
third tier school as you can from Harvard at a fraction of the
cost. You can&amp;#39;t get the resources that Harvard provides due to its
immense wealth nor can you get the old boys club connections nor the
name that opens doors even if you&amp;#39;re less than competent. I&amp;#39;ve seen
this time and time again in industry where a candidate from an Ivy or
similar will get offers, opportunities and promotions while just not
being that good whereas someone from a no-name school has to actually
be good (yes, I know plenty of Ivy students are actually quite good
but I&amp;#39;ve met plenty of dopes).&lt;/p&gt;
&lt;p&gt;
Go SAT optional and you appease your more liberal fans. SAT required?
The elitists and &amp;#34;meritocracy&amp;#34; crowd will cheer.&lt;/p&gt;
&lt;p&gt;
Image and PR win the day.&lt;/p&gt;
&lt;p&gt;
Take CS50 for example. It&amp;#39;s the golden CS0 course with all the hype
but if you look more closely it&amp;#39;s a flawed implementation of a flawed
course. Not horrible but nothing special. It wins because it&amp;#39;s from
Harvard&amp;#39;s rep and ballyhoo - a charismatic barker at the helm and a
class filled with students preculled to succeed by Harvard&amp;#39;s admission
process. Nevermind the huge waits for TAs when projects are due or all
that cheating we heard about a couple of years ago. It&amp;#39;s Harvard and
it has hype so it&amp;#39;s good.&lt;/p&gt;
&lt;p&gt;
Same for the SAT. You&amp;#39;ve got a high SAT cut off? You must be elite!!!&lt;/p&gt;
&lt;p&gt;
Elite institutions can shape their incoming classes however they
want. A few years ago Harvey Mudd proudly achieved gender parity in
CS. Now, Harvey Mudd could have and probably did make some changes in
what they did once students were in their walls, but let&amp;#39;s look at
shaping the incoming class.&lt;/p&gt;
&lt;p&gt;
I found data for  accepted students for Harvey Mudd online. I didn&amp;#39;t check the
year - it doesn&amp;#39;t matter. Here are the raw numbers:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th class=&#34;align-right&#34;&gt;Applied&lt;/th&gt;
&lt;th class=&#34;align-right&#34;&gt;Offered&lt;/th&gt;
&lt;th class=&#34;align-right&#34;&gt;Enrolled&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Men&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;2931&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;271&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;116&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Women&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;1509&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;322&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;121&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;
That&amp;#39;s  13% acceptance rate and a 40% yield.&lt;/p&gt;
&lt;p&gt;
They also boasted a 3.96 GPA and an average SAT score of 1520.&lt;/p&gt;
&lt;p&gt;
Note that more women were both offered and accepted in spite of only roughly
half the number applying. I don&amp;#39;t have older stats but I guess 10
years ago the offers skewed more male.&lt;/p&gt;
&lt;p&gt;
With just a 13% acceptance rate and Harvey Mudd&amp;#39;s reputation it&amp;#39;s easy
to imagine that a HUGE number of qualified applicants were rejected. I&amp;#39;ve never
looked at the numbers for Harvey Mudd applicants from Stuy but
typically, for elite schools, far more qualified applicants are
rejected from Stuy than are accepted. In any year, I might have five
students accepted to say MIT, another 20 or more  that were clearly qualified
and capable of doing great and a handful that probably were right to
be rejected. What&amp;#39;s more, each year there were some rejected and the
teachers all wondered, how did person &lt;strong&gt;A&lt;/strong&gt; get accepted when person &lt;strong&gt;B&lt;/strong&gt; didn&amp;#39;t.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m betting it&amp;#39;s the same in general for the application pools for all
&amp;#34;elite&amp;#34; institutions. All Harvey Mudd had to do was skew their offers
more female noting that the applicants they offer should have an
inclination to go the CS route. They could do the same for minority
applicants. None of this really changes the big picture. They&amp;#39;re just
rearranging the deck chairs on the titanic - grabbing the high
performing CS inclined women who might otherwise go to, let&amp;#39;s say
Stanford or Berkeley.&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s like a friend who once lamented to me that even though the FANG
companies (yes, old acronym - old conversation) made all sorts of
claims about equity and diversity, their equity hiring program though
consisted of out battling the other FANG companies for the handful of
black CS students at &amp;#34;elite&amp;#34; universities.&lt;/p&gt;
&lt;p&gt;
Harvey Mudd or any of these institutions could probably keep the
handful of &amp;#34;superachievers&amp;#34; - Westinghouse winners, IOI and IMO team
members etc. from their class offers, throw everyone else out take the
next &lt;code&gt;n&lt;/code&gt; students in and the class would probably be remarkably similar
and perform just as well. They could probably even do this a second
and maybe a third time.&lt;/p&gt;
&lt;p&gt;
They can shape the classes however they want to achieve whatever look
or result they want.&lt;/p&gt;
&lt;p&gt;
They can even let in students that require more academic support and
still end up fine. All those division one athletes that didn&amp;#39;t &amp;#34;come
here to play school&amp;#34; are prime examples (of course, there are plenty of
D1 athletes that &lt;strong&gt;did&lt;/strong&gt; come to play school and are terrific students) -
they&amp;#39;re shunted to easier majors and receive &lt;strong&gt;huge&lt;/strong&gt; amounts of support
that regular students can&amp;#39;t dream of.&lt;/p&gt;
&lt;p&gt;
Malcom Gladwell once wrote that the only fair way to form Harvard&amp;#39;s
incoming class would be for them to take &lt;strong&gt;all&lt;/strong&gt; the qualified applicants,
put them in a hat, and randomly select the offers. He was right and
given the way colleges run their processes they can do what they want
and come up with whatever they want, SAT or not.&lt;/p&gt;
&lt;p&gt;
Okay, so given this, it should be clear that requiring the SAT or not
is really a nothingburger but I&amp;#39;ll go further and say all requiring it
does is that it puts stress on high school students and money into the coffers
of the college board. It doesn&amp;#39;t really give you a &amp;#34;stronger&amp;#34; incoming
class, at least not if your admissions office is actually doing its
job.&lt;/p&gt;
&lt;p&gt;
I spent my years at Hunter reading applications for my undergraduate
CS honors program. I also spent a few years reading applications for
the Macaulay Honors College - CUNY&amp;#39;s elite branch.&lt;/p&gt;
&lt;p&gt;
For the first few years, we looked at SAT scores. For me, they were
only useful for one thing - a very coarse math cull. My students were
all coming in as intended CS majors. That meant they would have to
take calc 1, calc 2, discrete, linear and a couple more math
classes. If a student had a very low SAT math score, it was a red
flag. SAT score didn&amp;#39;t really tell me more than that.&lt;/p&gt;
&lt;p&gt;
Even then, I had to match this against transcript data. If a kid was
struggling with geometry in 11th grade, they&amp;#39;ll probably struggle with
calc as a freshman so maybe not a good fit for my program. In fact,
the transcript information - what class, what grade, and what year was
&lt;strong&gt;far&lt;/strong&gt; more valuable than SAT score in determining if a student was
prepared for my program.&lt;/p&gt;
&lt;p&gt;
Now you might argue that high school grades are inconsistent and not
every state has course level standardized testing like the New York
State Regents Exams. I&amp;#39;ll tell you what, it doesn&amp;#39;t matter.&lt;/p&gt;
&lt;p&gt;
In very short order, I got to know schools and classes. I also got to
know recommendation writers. By year three I knew what a grade in a
given class meant for most schools in my applicant pool and how to
read the recs. Sure, I&amp;#39;d have to merge in students from unknown
schools but after a while you get a feel. The SAT was a nice little
crutch but wholly unnecessary.&lt;/p&gt;
&lt;p&gt;
But, you say - you only had a few hundred applications and they were
mostly local. Harvard and MIT have applicants from all over the world.&lt;/p&gt;
&lt;p&gt;
Yeah, they also have big admission offices with full staffs. I know
that the &amp;#34;elite&amp;#34; colleges have specific people who read applications
for sets of schools. Over the years, I&amp;#39;ve met the people who read
Stuyvesant&amp;#39;s applications from a few of these institutions. Like me,
they knew what the courses meant at Stuy and their other schools and
they also knew the recommenders - who were straight shooters, who
dialed it in etc…. As they say &amp;#34;you gotta know the territory&amp;#34; and they
did. I won&amp;#39;t name  names or schools but I bet if you honestly asked
these readers that I&amp;#39;ve met if they really needed SAT scores to make a
decision, they&amp;#39;d say no.&lt;/p&gt;
&lt;p&gt;
So, there you have it. SAT or no SAT? I&amp;#39;d be happy to get rid of it
but everyone should recognize that it&amp;#39;s really about image and not
about forming an equitable and/or diverse incoming class. Colleges can do that
already it&amp;#39;s just that many don&amp;#39;t really care to.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Charleston days 3 and 4 - Plantation visits and more food</title>
      <link>https://cestlaz.github.io/post/charleston34/</link>
      <pubDate>Sun, 10 Mar 2024 15:11:50 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/charleston34/</guid>
      <description>&lt;p&gt;
As I mentioned in my &lt;a href=&#34;https://cestlaz.github.io/post/csed-podcast-teaching-with-masters/&#34;&gt;CS-Ed Podcast&lt;/a&gt; post, yesterday was a
washout. Seriously scary storms. We ended up spending the entire day
in the hotel but was able to get to &lt;a href=&#34;https://www.middletonplace.org/&#34;&gt;Middleton Place&lt;/a&gt; for dinner. The
original plan was to do the entire plantation during the afternoon but
that was a no go. Instead we got there a little before our reservation
time which did let us wander the grounds a little before heading in to
the restaurant.&lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/charleston/day34/middleton.jpg&#34; alt=&#34;/img/charleston/day34/middleton.jpg&#34; title=&#34;/img/charleston/day34/middleton.jpg&#34; width=&#34;300px&#34;/&gt;
&lt;p&gt;
We did this based on advise of friends and I highly recommend it. We
weren&amp;#39;t able to explore everything they have to offer but we got the
flavor of the gardens and landscaping and didn&amp;#39;t have to pay any
entrance fee. The meal was also extraordinary. &lt;/p&gt;
&lt;p&gt;
Today was much better. We headed off to the &lt;a href=&#34;https://www.magnoliaplantation.com/&#34;&gt;Magnolia Plantation&lt;/a&gt;. It&amp;#39;s
on most of the &amp;#34;must see&amp;#34; in Charleston lists kown for beautiful
gardens. It was nice and there was some history thrown in,
particularly when taking their included tour of the slave cabins but,
maybe since the flowers aren&amp;#39;t in full bloom yet, I wasn&amp;#39;t
overwhelmed.&lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/charleston/day34/magnolia1.jpg&#34; alt=&#34;/img/charleston/day34/magnolia1.jpg&#34; title=&#34;/img/charleston/day34/magnolia1.jpg&#34; width=&#34;300px&#34;/&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/charleston/day34/magnolia2.jpg&#34; alt=&#34;/img/charleston/day34/magnolia2.jpg&#34; title=&#34;/img/charleston/day34/magnolia2.jpg&#34; width=&#34;300px&#34;/&gt;
&lt;p&gt;
The limited parts of Middleton Place that we saw made a stronger
visual impact probably due to the greater amount of terracing and
landscaping.&lt;/p&gt;
&lt;p&gt;
That said, Magnolia boasts a host of gardens incuding a bamboo garden
and a swamp garden.&lt;/p&gt;
&lt;p&gt;
Speaking of which, we did end up seeing a plethora of gators. So many
that I started to feel like Mick Dundee (gotta stay with  older
generation references rather than the slightly more contemporary Steve
Irwin).&lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/charleston/day34/gator4.jpg&#34; alt=&#34;/img/charleston/day34/gator4.jpg&#34; title=&#34;/img/charleston/day34/gator4.jpg&#34; width=&#34;200px&#34;/&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/charleston/day34/gator3.jpg&#34; alt=&#34;/img/charleston/day34/gator3.jpg&#34; title=&#34;/img/charleston/day34/gator3.jpg&#34; width=&#34;200px&#34;/&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/charleston/day34/gator2.jpg&#34; alt=&#34;/img/charleston/day34/gator2.jpg&#34; title=&#34;/img/charleston/day34/gator2.jpg&#34; width=&#34;200px&#34;/&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/charleston/day34/gator1.jpg&#34; alt=&#34;/img/charleston/day34/gator1.jpg&#34; title=&#34;/img/charleston/day34/gator1.jpg&#34; width=&#34;200px&#34;/&gt;
&lt;p&gt;
Next up was a late lunch at the Mason Jar by Fatboys, Finally got our
fried chicken fix.&lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/charleston/day34/chicken.jpg&#34; alt=&#34;/img/charleston/day34/chicken.jpg&#34; title=&#34;/img/charleston/day34/chicken.jpg&#34; width=&#34;300px&#34;/&gt;
&lt;p&gt;
One of the big reasons we chose Charleston was for the food. Food,
history, and culture are our big three for vacations. Walk-ability also
comes into play. We ended up at least trying pretty much all the local
food that we wanted to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Hush puppies&lt;/li&gt;
&lt;li&gt;She crab soup&lt;/li&gt;
&lt;li&gt;Shrimp and grits&lt;/li&gt;
&lt;li&gt;Cheese grits&lt;/li&gt;
&lt;li&gt;Fried chicken&lt;/li&gt;
&lt;li&gt;Perloo&lt;/li&gt;
&lt;li&gt;Biscuits&lt;/li&gt;
&lt;li&gt;BBQ&lt;/li&gt;
&lt;li&gt;Fried green tomatos&lt;/li&gt;
&lt;li&gt;Shrimp&lt;/li&gt;
&lt;li&gt;Benne wafers&lt;/li&gt;
&lt;li&gt;Pimiento cheese&lt;/li&gt;
&lt;li&gt;Pickled okra&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Going to get dinner at a seafood place shortly and then home tomorrow.&lt;/p&gt;
&lt;p&gt;
Overall a solid first post-retirement trip.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>The CS-Ed podcast - teaching college without a PhD</title>
      <link>https://cestlaz.github.io/post/csed-podcast-teaching-with-masters/</link>
      <pubDate>Sat, 09 Mar 2024 09:20:03 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/csed-podcast-teaching-with-masters/</guid>
      <description>&lt;p&gt;
It&amp;#39;s our third day in Charleston and we&amp;#39;re stuck in our hotel. Stormy
rains and strong winds and a coastal flood alert telling everyone to
stay home. Our car is in the parking lot with water halfway up the
wheels.&lt;/p&gt;
&lt;p&gt;
We had tickets to go to the &lt;a href=&#34;https://iaamuseum.org/&#34;&gt;International African American Museum&lt;/a&gt; this
morning but got an email saying they won&amp;#39;t be open until the afternoon
and that our tickets would automatically be refunded.&lt;/p&gt;
&lt;p&gt;
So while waiting and hoping that the rain subsides and the parking lot
drains I decided to listen to the latest episode of the &lt;a href=&#34;https://csedpodcast.org/ &#34;&gt;CS-Ed podcast&lt;/a&gt;
hosted by Kristin Stephens-Martinez with guest Adam Blank. The title
was &amp;#34;What is in a Teaching Faculty Job Title?&amp;#34; but it was really about
teaching at the college level without a PhD. Adam, the guest, has been
teaching full time at the college level with &amp;#34;only&amp;#34; a Masters. I say
&amp;#34;only&amp;#34; because faculty without a PhD isn&amp;#39;t the norm. I in no way mean to belittle his
degree or situation. I too &amp;#34;only&amp;#34; have a Masters in CS but, to be
honest, as soon as I joined Hunter College&amp;#39;s faculty, I was the
strongest teacher in the department and likely one of the strongest in
the whole faculty. Maybe not the nicest, most popular, or charismatic
but the strongest. Yeah, that maybe sounds a bit arrogant and
egotistical but after my 26 years of self reflection and work to
improve at my craft at the high school leve, I can say I&amp;#39;m one of the
better teachers overall out there and K12 teachers, by and large are
much better teachers than college faculty.&lt;/p&gt;
&lt;p&gt;
Anyway, you should give the podcast a listen, here&amp;#39;s a direct link to
the episode (&lt;a href=&#34;https://csedpodcast.org/blog/s4e3_teaching_faculty_job_title/&#34;&gt;link&lt;/a&gt;) and here are some of my thoughts.&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Disclaimer:&lt;/strong&gt; Some of the things said on the podcast were given as the
opinions of the host or the guest and at other times they were stating
things that others have said. I&amp;#39;m doing my best not to mix those
things up but apologize in advance if I do.&lt;/p&gt;
&lt;p&gt;
Both Kristin and Adam seem to believe that having a PhD doesn&amp;#39;t make
you a better prepared teacher than just having a Masters. I
wholeheartedly agree.&lt;/p&gt;
&lt;p&gt;
I agree with the sentiment but Kristin pushed back saying that one
could get a PhD in CS Education.&lt;/p&gt;
&lt;p&gt;
I disagree with that push back on a number of fronts. First off,
there&amp;#39;s still limited opportunities to do a PhD in CS Education,
second, education degrees, at least in the circles I&amp;#39;ve been exposed
to are sometimes not treated with the same respect as straight old
hardcore CS degrees and that brings us back to the whole point of the
podcast that a college instructor without a PhD shouldn&amp;#39;t be a second
class citizen. Finally, there&amp;#39;s the whole problem with education
education and education research.&lt;/p&gt;
&lt;p&gt;
Both Adam and Kristin felt that you can&amp;#39;t understand the
research on education if you haven&amp;#39;t done any research and this
understanding leads to one being a better teacher.&lt;/p&gt;
&lt;p&gt;
I guess it can, but much better is actually teaching and reflecting
and acting on those reflections.&lt;/p&gt;
&lt;p&gt;
In general, education research is held in very low regard. It&amp;#39;s
rarely reproduced and hardly ever accounts for the myriad variables
that influence a class. An education researcher looks in from the
outside and says &amp;#34;oh, this seems to work.&amp;#34; A teacher lives it and
either adapts or dies (1/3 of teachers leave the profession within 3 years).&lt;/p&gt;
&lt;p&gt;
To put it another way. I like classic movies. I watch many of
them. I&amp;#39;ve read analyses and taken classes. I&amp;#39;ve criticized
performances and directorial choices. None of this will make me a good
or even bettor actor, director, or cinematographer.&lt;/p&gt;
&lt;p&gt;
Even closer to home for me is that I was a competitive fencer. I
watched other people train and bout and even studied film. None of
that improved me. At best, it would inform me as to what to work on
when I took lessons, practiced and competed but only with that
practice and competition did I really improve.&lt;/p&gt;
&lt;p&gt;
Want to become a better teacher? Teach, get feedback, reflect, improve.&lt;/p&gt;
&lt;p&gt;
Something else that got me thinking along these lines was a comment
Kristin made asking if teachers really needed to be up on the latest
research or if it were enough for them to wait until that research
were distilled into a teaching handbook.&lt;/p&gt;
&lt;p&gt;
It got me thinking on how many times I was given a different &amp;#34;true
way&amp;#34; to teach based on the research.&amp;#39;&lt;/p&gt;
&lt;p&gt;
It also got me thinking about the typical teacher career
path. Teachers are most &amp;#34;up&amp;#34; on the research when the graduate from
their teacher education programs. When they&amp;#39;re new. It&amp;#39;s also when
they&amp;#39;re at their worst as teachers. They quickly learn that their best
instructors were the ones that said &amp;#34;this is what the research says,
this is what your supervisor wants to see, and now we&amp;#39;ll talk about
the reality of what you need in the classroom.&amp;#34;&lt;/p&gt;
&lt;p&gt;
The teachers that get better might read the current research but more
likely they work on their craft, self reflect, and work with other,
frequently more experienced teachers. Teaching is very much a craft
and most of the master teachers you&amp;#39;ll find won&amp;#39;t be quoting the
research but developed in this way.&lt;/p&gt;
&lt;p&gt;
This brings me back to the subject of the podcast. Our entire higher
ed system has evolved into a hierarchical system focused on
research. Even if you&amp;#39;re &amp;#34;teaching faculty&amp;#34; and don&amp;#39;t have many or any
research obligations, there exists this caste system and there&amp;#39;s
rarely anything in an institutions organizational structure to support
faculty members becoming better teachers. Sure, some faculty members
are great teachers and many work on their craft but it seems that
teacher development is normally something that an instructor is left
to do or not to do on their own.&lt;/p&gt;
&lt;p&gt;
With this system, there&amp;#39;s absolutely no reason not to have a teaching
career path with the entry point being sufficient CS knowledge. I&amp;#39;d
prefer that plus some background in how to teach it but that&amp;#39;s likely
a bridge too far for now.&lt;/p&gt;
&lt;p&gt;
Even had I not been an experienced teacher, the biggest difference
between me with my Masters in CS and the PhD&amp;#39;s I worked with is that
they had super deep knowledge in some very narrow area of CS. This
meant that maybe I couldn&amp;#39;t teach a small handful of super specialized
400 level electives but in practice I could teach many of them and as
my education and experience was more of a generalist, I could
generally teach a wider swath of classes at the entry to mid level
than many super specialized researchers.&lt;/p&gt;
&lt;p&gt;
The PhD is nothing special, or maybe it is special but no more so than
someone who dedicated an equivalent number of years towards being a
great teacher, a great software engineer, or a great a lot of other
things.&lt;/p&gt;
&lt;p&gt;
Hopefully one day higher education will realize this.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Charleston day 2 - Wrought Iron and Religion</title>
      <link>https://cestlaz.github.io/post/charleston2/</link>
      <pubDate>Fri, 08 Mar 2024 19:04:54 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/charleston2/</guid>
      <description>&lt;p&gt;
We started day 2 with a walking tour. We&amp;#39;ve been using &lt;a href=&#34;https://freetoursbyfoot.com/&#34;&gt;Free Tours by
Foot&lt;/a&gt; or similar services. No fee or a small reservation fee up front
and then pay what you want at the end. We generally haven&amp;#39;t been
disappointed and also generally end up tipping voluntarily about the
same amount as what we&amp;#39;d pay for a pay up front tour.&lt;/p&gt;
&lt;p&gt;
We walked around downtown getting more local and US history and
learning about the city. During one stop at the &lt;a href=&#34;https://charlestonstage.com/about-us/dock-street-theatre&#34;&gt;Dock Street Theater&lt;/a&gt; we
learned about Charleston&amp;#39;s preservation and architectural restoration
efforts.&lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/charleston/day2/theater.jpg&#34; alt=&#34;/img/charleston/day2/theater.jpg&#34; title=&#34;/img/charleston/day2/theater.jpg&#34; width=&#34;300px&#34;/&gt;
&lt;p&gt;
We also discussed Charleston&amp;#39;s history of religious tolerance, being
known as the Holy City due to the preponderance of churches and
acceptance of all religions. &lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/charleston/day2/church.jpg&#34; alt=&#34;/img/charleston/day2/church.jpg&#34; title=&#34;/img/charleston/day2/church.jpg&#34; width=&#34;300px&#34;/&gt;
&lt;p&gt;
We also got to see a whole lot of wrought iron created by &lt;a href=&#34;https://en.wikipedia.org/wiki/Philip_Simmons&#34;&gt;Philip
Simmons&lt;/a&gt;.&lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/charleston/day2/iron1.jpg&#34; alt=&#34;/img/charleston/day2/iron1.jpg&#34; title=&#34;/img/charleston/day2/iron1.jpg&#34; width=&#34;100px&#34;/&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/charleston/day2/iron2.jpg&#34; alt=&#34;/img/charleston/day2/iron2.jpg&#34; title=&#34;/img/charleston/day2/iron2.jpg&#34; width=&#34;100px&#34;/&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/charleston/day2/iron3.jpg&#34; alt=&#34;/img/charleston/day2/iron3.jpg&#34; title=&#34;/img/charleston/day2/iron3.jpg&#34; width=&#34;100px&#34;/&gt;
&lt;p&gt;
After lunch, Devorah and I visited &lt;a href=&#34;https://www.kkbe.org/&#34;&gt;KKBE&lt;/a&gt; - America&amp;#39;s first reform
Jewish congregation. They give an interesting tour. Jews started
appearing in Charleston in the late sixteen, early seventeen
hundreds. They were of Sephardic descent. This was similar to the
first Jews in New Amsterdam who came for religious tolerance (but as a
New Yorker, I have to say that they got to us first :-) ). The first
reformers from Germany came to Charleston in the 1820s and KKBE, the
first Reform Congreation in America was formed in 1841.&lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/charleston/day2/synagogue.jpg&#34; alt=&#34;/img/charleston/day2/synagogue.jpg&#34; title=&#34;/img/charleston/day2/synagogue.jpg&#34; width=&#34;300px&#34;/&gt;
&lt;p&gt;
This is interesting for two reasons. First, this congregation,
according to our docent didn&amp;#39;t specifically follow the lead of the
reform movement in Germany. Second, Isaac Mayer Wise is normally
credited with starting the Reform Judaism movement in America when he
settled in Albany in 1846, some five years later.&lt;/p&gt;
&lt;p&gt;
After the tour, we walked around, saw this storefront:&lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/charleston/day2/scribnered.jpg&#34; alt=&#34;/img/charleston/day2/scribnered.jpg&#34; title=&#34;/img/charleston/day2/scribnered.jpg&#34; width=&#34;500px&#34;/&gt;
&lt;p&gt;
Neither of us knew what the old Kress building was, now housing an H&amp;amp;M
but Devorah and I both thought &amp;#34;Damn, they were Scribnered&amp;#34; (if you
know, you know).&lt;/p&gt;
&lt;p&gt;
It turns out that S.H Kress owned a series of &amp;#34;five and dime&amp;#34; stores
and one was in this building. The store there was the cite of a noted
civil rights protest. &lt;/p&gt;
&lt;p&gt;
We also saw some fountains in public parks including of course, the
Pineapple Fountain.&lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/charleston/day2/fountain.jpg&#34; alt=&#34;/img/charleston/day2/fountain.jpg&#34; title=&#34;/img/charleston/day2/fountain.jpg&#34; width=&#34;500px&#34;/&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/charleston/day2/selfie.jpg&#34; alt=&#34;/img/charleston/day2/selfie.jpg&#34; title=&#34;/img/charleston/day2/selfie.jpg&#34; width=&#34;500px&#34;/&gt;
&lt;p&gt;
We ended the day passing the historic marker commemorating &lt;a href=&#34;https://en.wikipedia.org/wiki/Robert_Smalls&#34;&gt;Robert
Smalls&lt;/a&gt;. How is there not a movie about this guy? I won&amp;#39;t tell the
story here but if you don&amp;#39;t know who he was go read the &lt;a href=&#34;https://en.wikipedia.org/wiki/Robert_Smalls&#34;&gt;Wikipedia article&lt;/a&gt;.&lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/charleston/day2/smalls.jpg&#34; alt=&#34;/img/charleston/day2/smalls.jpg&#34; title=&#34;/img/charleston/day2/smalls.jpg&#34; width=&#34;500px&#34;/&gt;
&lt;p&gt;
Finished off with dinner back at the Glass Onion which was again
superb. If you get down to Charleston, defiantly have a meal or two
there. &lt;/p&gt;
&lt;p&gt;
Tomorrow was supposed to be plantation day but there are supposed to
be nonstop thunder storms so it looks like we&amp;#39;ll probably go museum
hopping instead.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Visiting Charleston</title>
      <link>https://cestlaz.github.io/post/charleston/</link>
      <pubDate>Thu, 07 Mar 2024 19:48:46 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/charleston/</guid>
      <description>&lt;p&gt;
Depending how you looked at things, I started my retirement this past
Fall. Part of the plan was for Devorah and I to travel a bit more -
something we rarely got to do when we were younger. I did have a great
trip with Batya to Holland and Belgium but Devorah and I, other than a
couple of weekend getaways, weren&amp;#39;t able to go anywhere. We planned to
finally have a trip in January but I broke a toe. Then there were a
few other niggling things that prevented getting away.&lt;/p&gt;
&lt;p&gt;
Finally, this week, we made it - our first retirement trip, and
spanning our anniversary no less!!!&lt;/p&gt;
&lt;p&gt;
We decided on Charleston South Carolina. Why? Well, why not. We wanted
to hit it in January since it would be somewhat warmer than NYC. We
figured that it wouldn&amp;#39;t be too hot visiting now in early March - it
would be alike an early Spring for us. Besides, at least on paper,
Charleston checks a lot of our travel buttons - history, food, culture.&lt;/p&gt;
&lt;p&gt;
Our first stop after flying in and lunch was &lt;a href=&#34;https://southcarolinaparks.com/charles-towne-landing&#34;&gt;Charles Towne Landing&lt;/a&gt; - Charleston&amp;#39;s
birthplace. Beautiful day, beautiful ground to walk around and our
first taste of Charleston history.&lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/charleston/ctlanding.jpg&#34; alt=&#34;/img/charleston/ctlanding.jpg&#34; title=&#34;/img/charleston/ctlanding.jpg&#34; width=&#34;300px&#34;/&gt;
&lt;p&gt;
From there to our hotel. Dinner was at a local place - &lt;a href=&#34;https://www.ilovetheglassonion.com/&#34;&gt;The Glass
Onion&lt;/a&gt;. Really exceptional. We started with boudin balls then I had the
shrimp and grits and bread pudding for dessert. &lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/charleston/boudin.jpg&#34; alt=&#34;/img/charleston/boudin.jpg&#34; title=&#34;/img/charleston/boudin.jpg&#34; width=&#34;300px&#34;/&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/charleston/shrimp.jpg&#34; alt=&#34;/img/charleston/shrimp.jpg&#34; title=&#34;/img/charleston/shrimp.jpg&#34; width=&#34;300px&#34;/&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/charleston/bread-pudding.jpg&#34; alt=&#34;/img/charleston/bread-pudding.jpg&#34; title=&#34;/img/charleston/bread-pudding.jpg&#34; width=&#34;300px&#34;/&gt;
&lt;p&gt;
Devorah had the gumbo dinner. Super highly recommend. We might go back
tomorrow.&lt;/p&gt;
&lt;p&gt;
We started today at &lt;a href=&#34;https://en.wikipedia.org/wiki/Fort_Sumter&#34;&gt;Fort Sumter&lt;/a&gt;. Obviously a lot of American Civil War
history but also earlier stuff and later. &lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/charleston/sumter.jpg&#34; alt=&#34;/img/charleston/sumter.jpg&#34; title=&#34;/img/charleston/sumter.jpg&#34; width=&#34;300px&#34;/&gt;
&lt;p&gt;
In the afternoon we went to the &lt;a href=&#34;https://www.charlestonmuseum.org/&#34;&gt;Charleson Museum&lt;/a&gt; for lots of local
history. They also have a natural history exhibit with a giant sloth
that I&amp;#39;m pretty sure is bigger than ours in Natural History:&lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/charleston/sloth.jpg&#34; alt=&#34;/img/charleston/sloth.jpg&#34; title=&#34;/img/charleston/sloth.jpg&#34; width=&#34;300px&#34;/&gt;
&lt;p&gt;
and also a quilting and abstract art exhibit.&lt;/p&gt;
&lt;p&gt;
Then on the way to the City Market, we stopped at Peace Pie for a
snack.&lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/charleston/peace-pie.jpg&#34; alt=&#34;/img/charleston/peace-pie.jpg&#34; title=&#34;/img/charleston/peace-pie.jpg&#34; width=&#34;300px&#34;/&gt;
&lt;p&gt;
Nice place - custom ice cream / cookie sandwiches. Like Glass Onion,
also highly recommended.&lt;/p&gt;
&lt;p&gt;
The City Market was pretty cool - lots of crafts&lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/charleston/seder.jpg&#34; alt=&#34;/img/charleston/seder.jpg&#34; title=&#34;/img/charleston/seder.jpg&#34; width=&#34;300px&#34;/&gt;
&lt;p&gt;
Finally, before heading home, we checked out their U.S. Customs House. Nice
to contrast it to our Customs House on Bowling Green and it&amp;#39;s
predecessor - Federal Hall. &lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/charleston/customs.jpg&#34; alt=&#34;/img/charleston/customs.jpg&#34; title=&#34;/img/charleston/customs.jpg&#34; width=&#34;300px&#34;/&gt;
&lt;p&gt;
Overall a great day.&lt;/p&gt;
&lt;p&gt;
The only two downers were when we passed a store with lots of anti
Biden T-shirts and also when we found out that the Civil War museum on
top of the City Market is run the Daughters of the &lt;a href=&#34;https://en.wikipedia.org/wiki/United_Daughters_of_the_Confederacy&#34;&gt;United Daughters of
the Confederacy&lt;/a&gt;, fortunately, we decided to pass.&lt;/p&gt;
&lt;p&gt;
For dinner, we got our South Carolina Barbecue at Swig and Swine:&lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/charleston/bbq.jpg&#34; alt=&#34;/img/charleston/bbq.jpg&#34; title=&#34;/img/charleston/bbq.jpg&#34; width=&#34;300px&#34;/&gt;
&lt;p&gt;
Tomorrow, a walking tour and Kahal Kadosh Beth Elohim&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Teachers want to teach AI but how will we teach the teachers?</title>
      <link>https://cestlaz.github.io/post/teach-ai-teachers/</link>
      <pubDate>Tue, 05 Mar 2024 09:58:42 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/teach-ai-teachers/</guid>
      <description>&lt;p&gt;
Saw &lt;a href=&#34;https://www.edweek.org/technology/how-young-is-too-young-to-teach-students-about-ai-survey-reveals-differing-opinions/2024/02&#34;&gt;this&lt;/a&gt; earlier as posted on Linkedin by Pat Yongpradit of
code.org. According to the article, nine out of ten educators think
that students should be taught how AI works prior to graduating from
high school. How it works, not just how to use it. This is a good
thing. Sure, opinions vary as to when to teach it - elementary, high
school, or across the board but still, a good thing.&lt;/p&gt;
&lt;p&gt;
It did make me think though about a few things.&lt;/p&gt;
&lt;p&gt;
First, in a way this is really just saying &amp;#34;kids should learn computer
science.&amp;#34; This too is a good thing but the bad thing is that a lot of
people talking about learning about AI don&amp;#39;t get this.&lt;/p&gt;
&lt;p&gt;
AI isn&amp;#39;t some new magic mystically appearing. It&amp;#39;s algorithms applied
on data on computers with a user interface. Sounds like CS to me, more
specifically a subset of CS. Sure the data sets are HUGE and the
algorithms, more complex than the bubble sort but at a technical
level, it&amp;#39;s a next step.&lt;/p&gt;
&lt;p&gt;
AI applications can do some really impressive things but then so could
earlier computer solutions.&lt;/p&gt;
&lt;p&gt;
AI can be filled with bias but computer systems have always been
infused with our societal biases (and we have to do better).&lt;/p&gt;
&lt;p&gt;
AI can either take away jobs or enhance productivity but the same can
be said with earlier computer innovations.&lt;/p&gt;
&lt;p&gt;
So, the call to teach how AI works is a good one but there&amp;#39;s a level
of concern that people don&amp;#39;t see that in a lot of ways this isn&amp;#39;t a
revolution but a next step and as my readers know, I fell we&amp;#39;ve gotten
some serious things wrong in the roll out of teaching CS, without
acknowledging that this comes from CS begs the question, what will we
do differently, or more specifically better. &lt;/p&gt;
&lt;p&gt;
This brings me to my next thought, and this is the bigger one - if
teachers are going to teach all our students how AI works, how are we
going to teach all those teachers?&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s clear, at least to me, that the professional development, short
form training model favored by so many for CSforAll efforts is far
from ideal. It sets up content providers and politicians to be able to
say &amp;#34;we&amp;#39;ve trained all our teachers in just &lt;code&gt;n&lt;/code&gt; years&amp;#34; with &lt;code&gt;n&lt;/code&gt; being
some small number but the truth is, those teachers don&amp;#39;t really know
what they&amp;#39;re teaching and are doing a disservice to their students in
the long run &lt;sup class=&#34;footnote-reference&#34;&gt;&lt;a id=&#34;footnote-reference-1&#34; href=&#34;#footnote-1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;. We also see Computational Thinking efforts where
elementary school teachers relabel things they already do with CT
labels - debugging for error fixing, for example. This can be a
stepping stone to true CT and CS concepts but I&amp;#39;ve seen
implementations where just the labeling is considered good
enough. Worse, at times the teachers delivering these CT enhanced
lessons aren&amp;#39;t using the CT definitions correctly.&lt;/p&gt;
&lt;p&gt;
CSforAll in New York City has been going on for nine years. Some
states are further along in bringing CS to their schools and some
started later. Still, after a decade, we have an extremely &lt;strong&gt;long&lt;/strong&gt; way to
go. The number of high school teachers that have a deep knowledge of
CS and how to teach it still pales in comparison to other subject
areas and while elementary school teachers don&amp;#39;t require the same
depth of knowledge, they, in my opinion, as a group are also far
behind where they should be when CS is a subject equal to all the
others.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m not blaming anyone for this (other than what I already said about
the acceptance and in fact enthusiasm of the short term PD model) but
rather noting that creating a new subject area from whole cloth where
those you intend to teach it never studied the subject themselves is a
multi decade process.&lt;/p&gt;
&lt;p&gt;
What&amp;#39;s worth thinking about now though, is what are we going to do
with AI? Are we going to double down on short form PD and pay lip
service to this emerging technology? Are we going to make some serious
decisions and decide that some meaty material has to be included in
per service programs?&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m a skeptic. In a country where public school teaching is regularly
derided and even in New York there&amp;#39;s talk about removing the Masters
degree requirements I&amp;#39;m not hopeful. Will we, as a society, decide to
do what&amp;#39;s right for all of our students or will we pay lip service
while those who are well resources continue to get further ahead.&lt;/p&gt;
&lt;p&gt;
Time will tell.&lt;/p&gt;
&lt;div class=&#34;footnotes&#34;&gt;
&lt;hr class=&#34;footnotes-separatator&#34;&gt;
&lt;div class=&#34;footnote-definitions&#34;&gt;
&lt;div class=&#34;footnote-definition&#34;&gt;
&lt;sup id=&#34;footnote-1&#34;&gt;&lt;a href=&#34;#footnote-reference-1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;
&lt;div class=&#34;footnote-body&#34;&gt;
&lt;p&gt;PD as a first step is often necessary and can be a good start
but without meaningful long form preparation as a follow up it&amp;#39;s pure style over substance] &lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Real world projects or made up ones?</title>
      <link>https://cestlaz.github.io/post/real-world-projects/</link>
      <pubDate>Thu, 29 Feb 2024 12:48:54 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/real-world-projects/</guid>
      <description>&lt;p&gt;
There was a discussion to day on a the Facebook CS Educators group
about project based learning. This was initiated based on the College
Board&amp;#39;s desire to more more project work in some classes including
APCS-A.&lt;/p&gt;
&lt;p&gt;
Most, actually I think all of the  educators on the forum agreed that
students creating projects are a good idea but the bone of contention
was over real world projects vs what I&amp;#39;ll call practice projects.&lt;/p&gt;
&lt;p&gt;
The thought is that a real world project would be a program that they
might do if they were at a business - a complete web app for instance
or a game, soup to nuts. A made up project might be implementing a
sort or a data structure.&lt;/p&gt;
&lt;p&gt;
In the discussion some felt that all projects should be real world
arguing that students will be more engaged. Others felt that while real
world projects should be a goal, made up projects were more
appropriate at times - like how you&amp;#39;ll practice etudes on a musical
instrument when developing your chops rather than only ever working on
a piece.&lt;/p&gt;
&lt;p&gt;
I don&amp;#39;t agree with the stance that real world projects are more
engaging. Let&amp;#39;s take games - something always paraded out as real
world and engaging. Sure, to kids who like computer gaming. Not so
much for everyone else. Personally, I&amp;#39;m not huge on gaming and neither
were many of my students. That said, enough were so that it made sense
to explore game projects in some classes and to certainly allow them
on appropriate open ended projects.&lt;/p&gt;
&lt;p&gt;
Let&amp;#39;s contrast that to made up projects. I&amp;#39;ve done assorted graphics
projects and many had zero real world ramifications but many (not
all) students found them super engaging. I&amp;#39;ve also frequently done a
computer Caesar Cipher decoder. Many students found it very
engaging. It wasn&amp;#39;t real world but it gave a level appropriate
foreshadowing of a lot to come - proto-AI, proto-math, proto-stats.&lt;/p&gt;
&lt;p&gt;
Not real world but very engaging and I&amp;#39;d argue, more valuable than
forcing a real world project that was less appropriate for what we
were learning.&lt;/p&gt;
&lt;p&gt;
Besides, let&amp;#39;s look at some real, real world projects. Here are some
projects that software engineers I know have worked on:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;make a round button that launches an already built feature of our
platform.&lt;/li&gt;
&lt;li&gt;I changed my mind, make it more of a rectangle with rounded
courners.&lt;/li&gt;
&lt;li&gt;Move that UI component down 3 pixels and over 5.&lt;/li&gt;
&lt;li&gt;Change all the calls in our code base to function f so that it no
longer passes null as the final parameter so that it matches the
new API spec.&lt;/li&gt;
&lt;li&gt;Write a function to check a string to make sure it conforms to our
input specification.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The list goes on. The truth is more real world programmers work on
small bits of a larger system. They&amp;#39;re working in teams (something I
think our students have to learn about, but not exclusively) on large
systems. Very rarely does someone in the real world go from concept to
completion all by themselves, although I think CS programs would
better serve their students if they did teach this manner of &amp;#34;software
architecting.&amp;#34;&lt;/p&gt;
&lt;p&gt;
So, really, real world can be fine but it&amp;#39;s not the be all and end
all.&lt;/p&gt;
&lt;p&gt;
Some might mean &amp;#34;uses real world data&amp;#34; for real world and this can
certainly work. I frequently assign data based projects - find a data
source, collect it, clean it, and do something with it. If the
students can find data they like that can be super motivating but
again, it&amp;#39;s not a be all and end all. I&amp;#39;ve had students go nuts over
writing a Mandelbrot set explorer - no data there and not real world
but super exciting for some.&lt;/p&gt;
&lt;p&gt;
I haven&amp;#39;t even really addressed group work or solo but I think this
post is long enough as it is.&lt;/p&gt;
&lt;p&gt;
The truth is, authentic assignments come in all shapes and sizes and
can be inspired by all sorts of things. Real world, whatever that
means can be great but are not always appropriate. In K12, most
schools top out with CS0 (APCS-P or similar) or CS1 (APCS-A or
similar) not much in the real world is CS0 level - real world data,
real world ideas, yes but not real, real world. Made up assignments
can be as good or better and freed from the constraints of real world
can be much more appropriate for a students development and just as if
not more motivating.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>AI in the classroom - it really isn&#39;t that simple</title>
      <link>https://cestlaz.github.io/post/ai-in-class-not-simple/</link>
      <pubDate>Tue, 20 Feb 2024 15:49:24 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/ai-in-class-not-simple/</guid>
      <description>&lt;p&gt;
Earlier today, I saw a linkedin post by Code.org&amp;#39;s &lt;a href=&#34;https://www.linkedin.com/in/patyongpradit/&#34;&gt;Pat Yongpradit&lt;/a&gt;
summarizing a series of articles on AI in K12 classrooms in Ed Week. I
couldn&amp;#39;t get far into the articles due to paywall restrictions but
Pat&amp;#39;s summary and the ensuing comments and discussion let me to
writing this.&lt;/p&gt;
&lt;p&gt;
One thing that stuck out in the comments, and this has been a
recurring theme in AI in K12 classroom discussions is that a teacher
who allows students to use AI, teaches AI, etc. will be more effective
than one who doesn&amp;#39;t.&lt;/p&gt;
&lt;p&gt;
While I&amp;#39;m against an AI ban and if I were still in the classroom I
don&amp;#39;t doubt that I&amp;#39;d be exploring the tools, it&amp;#39;s not that simple.&lt;/p&gt;
&lt;p&gt;
Let&amp;#39;s look at elementary math education. When I was in grade school in
the 70s, we learned our math facts, long division, and all sorts of
things that were positively uncool when my kids were in school in the
early 2000s. They didn&amp;#39;t learn there math facts and teachers had very
different ways of approaching most of the topics. This struck me as,
well, not good, so I started to talking to my students who had gone
through this &amp;#34;new math&amp;#34; education as well as to parents.&lt;/p&gt;
&lt;p&gt;
While this wasn&amp;#39;t an official study, it certainly appeared that by the
time kids who were educated in this newfangled way using all the new
tools and tech were by and large more poorly prepared than students
who either had an old school teacher who bucked the trend and did
things the old way or had parents who supplemented on their own.&lt;/p&gt;
&lt;p&gt;
How does this relate to AI in the classroom? Well, a teacher only has
so much time with their students and way more to teach than can
realistically be done in the time allotted. So, teacher A focuses on
the new hotness. Goes all in on AI - well, that&amp;#39;s great but
something&amp;#39;s got to give. At the same time, teacher B doesn&amp;#39;t do the AI
but goes old school - pen and paper and really focuses on teaching the
kids to write - that is - communicate effectively.&lt;/p&gt;
&lt;p&gt;
Fast forward a few years and teacher A&amp;#39;s kids are proficient in what
was modern AI a few years ago. Maybe this will be a tremendous boon
but maybe we&amp;#39;ve moved on to the next thing. Teacher B&amp;#39;s kids, on the
other hand are stronger communicators regardless of medium.&lt;/p&gt;
&lt;p&gt;
Who&amp;#39;s better off? Maybe A&amp;#39;s kids, Maybe B&amp;#39;s.&lt;/p&gt;
&lt;p&gt;
To make things more complicated, teachers have not been educated in AT
and neither have administrators and just adding more and more to
teachers plates is both unjust and not sustainable. &lt;/p&gt;
&lt;p&gt;
This hypothetical has played out before - with elementary math,
calculators, writing across the curriculum, CS4All and more. Over and
over again. There&amp;#39;s no simple answer. I wasn&amp;#39;t sure that calculators
were the way to go back when they came in. I&amp;#39;m still not and even if
they were the right move, why are kids and schools still forking money
over to TI when there are free and better alternatives on phones and
computers? Writing across the curriculum? Great idea but nobody carved
out anything from my required curricula to make room for it and while
I&amp;#39;d like to think I could do it, I&amp;#39;ve got nothing to show in my work
history or education to say that I was qualified to teach effective
writing.&lt;/p&gt;
&lt;p&gt;
Yes - let&amp;#39;s work on AI policies - hopefully informed by people who
know both the tech an the teaching but let&amp;#39;s not be so fast to say
that a teacher who embraces AI is good while one who does not is bad.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Neighbors, Community and David Bouley</title>
      <link>https://cestlaz.github.io/post/neighbors-community-bouley/</link>
      <pubDate>Wed, 14 Feb 2024 12:57:19 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/neighbors-community-bouley/</guid>
      <description>&lt;p&gt;
I read this morning that &lt;a href=&#34;https://ny.eater.com/2024/2/14/24072381/david-bouley-death-bouley-montrachet-brushstroke&#34;&gt;David Bouley&lt;/a&gt; has passed away at
age 70. Bouley was an influential chef in New York city. A huge
influence on the fine dining scene that has developed in the last few
decades.&lt;/p&gt;
&lt;p&gt;
Why am I, a retired computer science teacher writing about a decorated
chef? As fate had it, there are some connections between David Bouley
and Stuyvesant High School, specifically the new building, where I
spent most of my career. I started teaching during a teacher shortage,
particularly in math. Actually, had there not been a shortage, I never
would have been given an emergency license and who knows what career
path I would have gone down. This meant that I was younger than most
of the other teachers my departments. Somewhat at Seward and clearly
at Stuy. There was me and Bill in our twenties and most of the rest of
the department were in their upper forties or older. At some point that
switched, and Bill and I were the old farts towards the later stages
of my career.&lt;/p&gt;
&lt;p&gt;
I was always a foodie but was never exposed to fine dining. This was
where &lt;a href=&#34;https://cestlaz.github.io/posts/2014-11-07-rich-rich/&#34;&gt;Rich Geller&lt;/a&gt; came in. Rich taught calc and ran the math team. He
was also big into fine dining. Bruce Winokur, another much more
experienced math teacher had similar tastes. I don&amp;#39;t remember when but
we ended up going to Bouley&amp;#39;s restaurant &amp;#34;Bouley&amp;#34; - just a couple of
blocks form Stuy for a meal. It was a revelation.&lt;/p&gt;
&lt;p&gt;
It turned out that Rich was friends with David Bouley - I think it
just started with him frequenting the restaurant and asking to speak
to the chef and that turned into something of a Stuy math department
connection. We had a biannual tradition - once during the January
regents week and again in June of taking a long lunch at Bouley. Me,
Rich, Bruce, Dawn and a rotating cast of others. And of course going
with Rich meant we always got a few bonus deserts or maybe an extra
course. It was a highlight of the week.&lt;/p&gt;
&lt;p&gt;
The Stuy/Bouley connection went further. Rich, as I mentioned ran
Stuy&amp;#39;s math team. In Spring &amp;#39;95 he arranged a special luncheon -
Stuy&amp;#39;s math team at Bouley. If I recall, the entire team was too large
so it was only the seniors. Unfortunately I couldn&amp;#39;t crash the party
but now, many years later, I&amp;#39;m friends with a number of those team
members and it was quite a memorable experience.&lt;/p&gt;
&lt;p&gt;
Fast forward to post 9/11. We had been displaced due to the attacks
and had spent a month as guests at Brooklyn Tech. About a month
afterwards, certainly before Halloween, we were back at Stuy. It was
the evening of parent teacher conferences. Usually that evening, the
parents association hosts a dinner for the teachers. It&amp;#39;s cafeteria
style and teachers come and go at various times as long as they make
it to their room by the start of conferences. Usually it&amp;#39;s mostly pot
luck from the parents. Usually pretty tasty and certainly
appreciated. This time, as I went down the line, I said to myself
&amp;#34;Hey, I recognize that beef dish…&amp;#34; Yep, that meal was catered by
David Bouley and we got many of his on the menu dishes - at least
those that lent themselves to prior preparation and transport to the
school. I don&amp;#39;t know if this was part of his general recovery work (he
did a lot to prepare food for the rescue/recovery workers), if this
was a special arrangement made by Rich or something else but it was
exceptional.&lt;/p&gt;
&lt;p&gt;
The years continued as did the regents week lunches. Unfortunately, we
lost Rich to Cancer in the fall of 2011 (tribute post &lt;a href=&#34;https://cestlaz.github.io/posts/2014-11-07-rich-rich/&#34;&gt;here&lt;/a&gt;). Shortly before his passing,
David Bouley hosted a reception at Bouley for Rich, his wife Barbara,
his friends, and former students. A touching tribute for a master
teacher.&lt;/p&gt;
&lt;p&gt;
Why am I spending all this time about my friend Rich and David Bouley?
Well, it&amp;#39;s about community. Stuy isn&amp;#39;t a neighborhood school. In a
neighborhood or community school, teachers and students see each other
in passing. Not so at Stuy. Only a handful of teachers live in
Manhattan or even the five boroughs. The kids? Many have commutes well
over an hour each way. Yet still, here we had this little foodie math
community at Stuy. Mostly teachers, but students were touched as
well. While we lost Rich over a decade ago, reading about David
Bouley&amp;#39;s death really brought me back.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve had many fine dining experiences since Rich introduced me to
Bouley&amp;#39;s restaurants. I&amp;#39;ve had great food at Jean George, Daniel, and
Park Avenue Cafe and many others but my meals at Bouley have been
special - the best overall dining experiences. I also remember some
particularly special meals - Rich&amp;#39;s reception. The surprise lunch
for a special graduating senior, when Devorah and I took Jim and Helen
there to thank them for writing the kids college recs and a handful of
others.&lt;/p&gt;
&lt;p&gt;
I think that in a lot of cultures there&amp;#39;s a strong tie between food
and community and in this weird little circle community was created
between some CS people, Math people, a specialized high school, and a
great chef.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Using Emacs 82 - Conda and Direnv</title>
      <link>https://cestlaz.github.io/post/using-emacs-82-conda-direnv/</link>
      <pubDate>Tue, 13 Feb 2024 11:31:06 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/using-emacs-82-conda-direnv/</guid>
      <description>&lt;p&gt;
One of the things I want to do now that I have some time is get my
head around all the modern AI stuff. I&amp;#39;m starting with a review or
things I&amp;#39;ve already done  by going through Andrew Ng&amp;#39;s Coursera ML
class. I&amp;#39;ll probably continue with his courses but I&amp;#39;m certainly open
to any suggestions (specifically for a CS guy who&amp;#39;s not so strong on
the math side).&lt;/p&gt;
&lt;p&gt;
This means diving back into Python even though Clojure is usually my
weapon of choice. I thought I&amp;#39;d see how the platform has changed.&lt;/p&gt;
&lt;p&gt;
First up &lt;a href=&#34;https://www.anaconda.com/&#34;&gt;Anaconda&lt;/a&gt; which is a platform and package manager for
Python. I opted for &lt;a href=&#34;https://docs.anaconda.com/free/miniconda/index.html&#34;&gt;Miniconda&lt;/a&gt; which just gives the basics and I can
always add anything missing later.&lt;/p&gt;
&lt;p&gt;
See the previous two links to install Anaconda or Miniconda. The video
goes over basic use. It&amp;#39;s a lot like virtualenv. You can set up an
Python environment with specific packages and then activate or
deactivate whichever environment you wish to work under.&lt;/p&gt;
&lt;p&gt;
On the Emacs side, I installed the package conda as follows:&lt;/p&gt;
&lt;div class=&#34;src src-emacs-lisp&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      (use-package conda :straight &lt;span style=&#34;color:#66d9ef&#34;&gt;t&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        :config
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        (conda-env-initialize-interactive-shells)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        (conda-env-initialize-eshell))&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
And that was pretty much it. To activate an particular environment we
just use &lt;code&gt;conda-env-actiate&lt;/code&gt;. Again, this is covered in the video.&lt;/p&gt;
&lt;p&gt;
Next up is &lt;a href=&#34;https://direnv.net/&#34;&gt;direnv&lt;/a&gt;. This lets you customize your environment per
directory. You can do things like set specific environment variables
or even, in our case, activate a conda environment just by going into
a project directory. Basic installation instructions can be found on
the home page.&lt;/p&gt;
&lt;p&gt;
To set up direnv to work with Anaconda/Miniconda though took a bit of
work. Between a few web sites and videos, I found that this worked.&lt;/p&gt;
&lt;p&gt;
First, I had to create a file named &lt;code&gt;.direnvrc&lt;/code&gt; in my home directory
with these contents:&lt;/p&gt;
&lt;div class=&#34;src src-emacs-lisp&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  layout_conda() {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;#&lt;/span&gt; Ref Url: https://github.com/direnv/direnv/wiki/Python
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;#&lt;/span&gt; local ANACONDA_HOME=&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;”&lt;/span&gt;${HOME}/anaconda3&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    # PATH_add “$ANACONDA_HOME”/bin1
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    if [ -n &amp;#34;&lt;/span&gt;$1&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; ]; then
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    # Explicit environment name from layout command.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    local env_name=&amp;#34;&lt;/span&gt;$1&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    source activate ${env_name}
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    elif (grep -q name: environment.yml); then
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    # Detect environment name from `environment.yml` file in `.envrc` directory
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    source activate `grep name: environment.yml | sed -e ‘s/name: //’ | cut -d
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;‘&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; -f 2 | cut -d ‘&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;‘&lt;/span&gt; -f &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    else
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    (&amp;gt;&amp;amp;2 echo No environment specified)&lt;span style=&#34;color:#75715e&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    exit &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    fi&lt;span style=&#34;color:#75715e&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
You might have to play with it if you&amp;#39;re not using the miniconda
installation defaults.&lt;/p&gt;
&lt;p&gt;
Next, I had to edit my .zshrc:&lt;/p&gt;
&lt;div class=&#34;src src-sh&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    export iam&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;whoami&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    export CONDA_HOME&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/home/&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;iam&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/miniconda3&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;[[&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;:&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;PATH&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;:&amp;#34;&lt;/span&gt; !&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; *&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;:&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;CONDA_HOME&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/bin:&amp;#34;&lt;/span&gt;* &lt;span style=&#34;color:#f92672&#34;&gt;]]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; export PATH&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;CONDA_HOME&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/bin:&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;PATH&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# &amp;lt;&amp;lt;&amp;lt; my export init &amp;lt;&amp;lt;&amp;lt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# &amp;gt;&amp;gt;&amp;gt; conda initialize &amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# !! Contents within this block are managed by &amp;#39;conda init&amp;#39; !!&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    __conda_setup&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/home/zamansky/miniconda3/bin/conda&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;shell.zsh&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;hook&amp;#39;&lt;/span&gt; 2&amp;gt; /dev/null&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; $? -eq &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        eval &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$__conda_setup&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; -f &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/home/zamansky/miniconda3/etc/profile.d/conda.sh&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            . &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/home/zamansky/miniconda3/etc/profile.d/conda.sh&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            export PATH&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/home/zamansky/miniconda3/bin:&lt;/span&gt;$PATH&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    unset __conda_setup
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# &amp;lt;&amp;lt;&amp;lt; conda initialize &amp;lt;&amp;lt;&amp;lt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    export LANG&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;en_US.UTF-8
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    eval &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;direnv hook zsh&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
Some of that was added when I installed direnv and followed those
directions. I think for the direnv Anaconda support I added the first
two lines and the last one.&lt;/p&gt;
&lt;p&gt;
Finally, in your project&amp;#39;s root directory create a file named &lt;code&gt;.envrc&lt;/code&gt;
which contains the line &lt;code&gt;layout conda name&lt;/code&gt; where &lt;strong&gt;name&lt;/strong&gt; is replaced with
the name of the conda environment you want.&lt;/p&gt;
&lt;p&gt;
The first time you go into the directory it will tell you that you
haven&amp;#39;t allowed direnv to work there yet and you have to enter &lt;code&gt;direnv
allow&lt;/code&gt;. After you do that, every time you enter that directory it will
activate your conda environment, leave it, it will deactivate it.&lt;/p&gt;
&lt;p&gt;
In Emacs, I found two packages that worked pretty much the same. One
named &lt;code&gt;direnv&lt;/code&gt; and the other &lt;code&gt;envrc&lt;/code&gt;. I opted for envrc.&lt;/p&gt;
&lt;p&gt;
You simply add:&lt;/p&gt;
&lt;div class=&#34;src src-emacs-lisp&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  (use-package envrc :straight &lt;span style=&#34;color:#66d9ef&#34;&gt;t&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    :config (envrc-global-mode))&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
to your config and when you open a file in that directory, it will
use direnv.&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Important note:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;
That&amp;#39;s pretty much it. This all worked on my desktop but it&amp;#39;s giving
me problems on my laptop. It appears that conda mode isn&amp;#39;t working. It
allows me to select the environment but it doesn&amp;#39;t actually activate
it. I think it&amp;#39;s a path issue even though I think both my desktop and
laptop are the same. I&amp;#39;ll update this once I figure out what&amp;#39;s up on
the laptop side.&lt;/p&gt;
&lt;p&gt;
All in all, I&amp;#39;m pretty happy with this. I love that I can
automatically start an environment just by accessing a file in the
directory. Too many times, I forget and mess things up.&lt;/p&gt;
&lt;p&gt;
The video steps through everything and demos both packages:&lt;/p&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/UrJoBaJv5kA?si=_W-OU3RG7o3K5LQ4&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;
Enjoy!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Hosting an AI panel at Stuy</title>
      <link>https://cestlaz.github.io/post/ai-panel/</link>
      <pubDate>Fri, 09 Feb 2024 11:15:47 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/ai-panel/</guid>
      <description>&lt;p&gt;
Went back to school yesterday. Specifically, I was back at Stuy
running an AI panel discussion for the Stuy HS Alumni Association. I
figured it&amp;#39;s time for me to get back in the CS / CS Ed game.&lt;/p&gt;
&lt;p&gt;
Plans started a few months ago when a member of my Stuy CS family
who&amp;#39;s also in the SHSAA board asked about doing something. I was game
but a little apprehensive, mostly because there have been, let&amp;#39;s say,
issues with the way the SHSAA had operated in the past. Still, this
was a new board with a new staff so I figured, worth exploring.&lt;/p&gt;
&lt;p&gt;
Turns out the new Alumni Association ED is a former student of mine so
that rocketed the trust level of the association way up and we were
off to the races.&lt;/p&gt;
&lt;p&gt;
Setting up any panel or tech event can be tricky. If you&amp;#39;re doing
something for your own classes it&amp;#39;s much easier - you&amp;#39;ve got a good
idea as to the classes experience as well as interest in whatever
event you&amp;#39;re planning. A panel like this, not so much. I had no idea
on the audience size but since it would be mostly Stuy grads along
with a few Stuy students and a low cost or free event it meant that
the room would be filled with nimble minds. The challenge was that
those nimble minds would be all over the place with regards to tech
experience. I was guessing we&amp;#39;d have adult tech pros and hard core CS
people, students who were into CS just finding their way, adults
wanting to learn more but who had no background in either CS or AI,
and probably a few alumna who just wanted to show up for an alumni
event. Turns out I think I got the audience range right.&lt;/p&gt;
&lt;p&gt;
How to make a panel for that? You want to be able to do something of a
deep technical dive but you don&amp;#39;t want to lose the non-techies. You
also want to spend time on all sorts of societal issues - talking AI
is a lot more than just tensor flow, neural nets, transformers, and
LLMs.&lt;/p&gt;
&lt;p&gt;
I reached out the my StuyCS family, my alumni network for four
specific individuals. Oh, if you&amp;#39;re an AI person and part of the
family and wondering why I didn&amp;#39;t ask you - remember - this was a live
NY event so all you Pittsburgh, Seattle, and California AI folks,
sorry - geography made that decision.&lt;/p&gt;
&lt;p&gt;
Alphabetically, first up was Ben - he was one of my technical
heavyweights. I was confident he could handle any technical curveballs
from the audience. He also has worked at both large companies and has
built startups so he could also give some management and
entrepreneurial context. Next, Doug - strong tech background but a lot of
experience as a technical manager. Been at a number of major and minor
companies from small to large. I figured he would anchor the
business/manager side.  Eugene was third - another technical anchor to
balance Ben but Eugene has more formal academic training and also
spent his entire career in a single major tech company. Finally,
Jamil who also brought startup and small/mid company experience but
has always been big on civic tech and equity related issues.&lt;/p&gt;
&lt;p&gt;
Of course, all four overlapped. I joked that Jamil was the conscience
of the panel but truthfully those societal issues were important to
all of us. Likewise, all have had some managerial experience etc.&lt;/p&gt;
&lt;p&gt;
From the limited feedback I got so far, I think the mix worked. We
started &amp;#34;defining&amp;#34; AI, modern AI, LLMs (in lay terms) etc. and then
shifted to issues like the use of other peoples data in training, bias
in AI, and of course, recommendations for the youngsters just getting
started. The audience Q and A got more deeply into these issues along
with future jobs issues and if it&amp;#39;s even worth learning to code
anymore.&lt;/p&gt;
&lt;p&gt;
I won&amp;#39;t recap all the specifics but a highlight to me was how the
panel painted the picture to show that while AI was new and shiny and
is opening new doors with both opportunities and challenges, at the
core, so many of the important issues are societal based, not
technical. Ben mentioning that in a startup the big cost drivers are still
things like personnel and that we&amp;#39;re still very much in the same
startup/funding/scaling model just with new tech and Jamil and others
emphasizing that it&amp;#39;s not that there are these new potential dangers
with bias, for instance with AI but rather that the bias is already
baked into our system and AI is the next frontier - a wake up call
that we can&amp;#39;t just sprinkle some equity sugar on AI but rather have to
deal with the hard societal issues.&lt;/p&gt;
&lt;p&gt;
All in all, I think it was a terrific event.&lt;/p&gt;
&lt;p&gt;
At the end I had a chance to informally spend time with both panelists
and audience and it was great to see a number of old friends. Between
the panelists and audience, I had students from the class of &amp;#39;95 up to
some of my most recent graduates.&lt;/p&gt;
&lt;p&gt;
It was a fun first event to come out of my retirement hibernation. Not
sure whats next but this one was both educational and fun.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Which low level language to teach?</title>
      <link>https://cestlaz.github.io/post/which-low-level/</link>
      <pubDate>Tue, 06 Feb 2024 07:09:37 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/which-low-level/</guid>
      <description>
&lt;p&gt;
A teacher in one of the CSEd forums I&amp;#39;m part of asked for thoughts on
what low level language to teach. She also asked about scripting but
I&amp;#39;m not going address that here. The question came, aparently due to
state guidelines which were somewhat vague. I couldn&amp;#39;t find the
specific guidelines but I did find old guidelines that indicated that
the course in question was intended to be post APCS-A.&lt;/p&gt;
&lt;p&gt;
Back at Stuy, I designed a systems programming course that was post
APCS-AB. I first used assembly language and then pivoted to C. That&amp;#39;s
where it stayed until I left and I&amp;#39;m guessing it&amp;#39;s still there. If I
were to design the course now, I&amp;#39;m not sure if I&amp;#39;d make the same
choice. If I were designing a unit in a post APCS-A class that had
some low-level work, I&amp;#39;m also not sure what I&amp;#39;d do but I found the
question interesting so I thought I&amp;#39;d noodle about it here.&lt;/p&gt;
&lt;p&gt;
The first question I&amp;#39;d ask would be &amp;#34;should the language be low level
or is it any language suited for low level, that is, systems type
work?&amp;#34; If it&amp;#39;s the former, choices are pretty limited. If it&amp;#39;s the
latter, then most popular mainstream languages would work but
scripting languages like Python and JVM based languages like Java
probably miss the mark, at least philosophically.&lt;/p&gt;
&lt;p&gt;
Let&amp;#39;s explore some of the contenders:&lt;/p&gt;
&lt;div id=&#34;outline-container-headline-1&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-1&#34;&gt;
Assembly
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-1&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
This is what I think of when I hear &amp;#34;low level language.&amp;#34; In some ways
assembly is simple. Each instruction does a specific thing. On the
other hand, since you&amp;#39;re giving the CPU explicit instructions to run,
as opposed to higher level &amp;#34;human&amp;#34; constructs, you need a lot of code
to do &amp;#34;simple&amp;#34; things. Assembly certainly gives a platform to explore
a machine at a low level but if we&amp;#39;re talking only a short unit, it
could be hard to get student buy in. Still, some students might love it.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-2&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-2&#34;&gt;
C
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-2&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
C has long been my go to for low level. I like to think about it as
assembly with better constructs like loops, arrays, structs, and
similar. A nice thing is that it&amp;#39;s syntactically similar to Java which
would have been used in APCS-A. A not so nice thing is that it&amp;#39;s less
forgiving and more error prone. This &amp;#34;feature&amp;#34; does let you explore
concepts like memory management and how the computer arranges things
internally but it can also be incredibly frustrating for students and
programmers alike.&lt;/p&gt;
&lt;p&gt;
One really nice feature of using C is that it&amp;#39;s a small, simple
language. K&amp;amp;R - &lt;strong&gt;the&lt;/strong&gt; book on C is only around 100 pages and the
complete reference manual is a short section in back. It also cleaning
compiles to assembly. A really nice unit is to take some C code and
use &lt;strong&gt;gdb&lt;/strong&gt; - the Gnu Debugger - a free debugging tool that can even be
run online to look at the assembly code generated and step through
it. This gives some of the benefits of studying assembly, a little bit
on how memory and the machine works, a touch of how C is translated
when compiled and is very accessible to students.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-3&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-3&#34;&gt;
C++
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-3&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
C++ is newer and much larger than C. It used to be a C extension but
for a long time it&amp;#39;s been a language in its own right. An advantage of
using C++ is that it&amp;#39;s the core language used in many colleges (with
Java being the other main one) and while it&amp;#39;s a little more cumbersome
to use than C, it&amp;#39;s not much of a step up in complexity until you dive
in to the more advanced concepts. You can also do the &amp;#39;explore
assembly using gdb&amp;#39; stuff I described above.&lt;/p&gt;
&lt;p&gt;
Given current markets, I&amp;#39;d be tempted to go C++ as opposed to C if I
were designing this unit today but for anyone doing so, I&amp;#39;d encourage
you, if you do this, to actually teach C++ sensibilities and not
merely C with C++ constructs. &lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-4&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-4&#34;&gt;
Go
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-4&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
Go&amp;#39;s an interesting one. If I remember correctly, it was designed as a
systems programming language to replace C but at the end of the day it
attracted more Python programmers than C programmers.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve only dabbled with it but there&amp;#39;s a lot to like. It&amp;#39;s a small,
simple, clean language. A friend described it as &amp;#34;a minimalist
language with libraries designed by really smart people with good
taste.&amp;#34; I think that&amp;#39;s fair.&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s a compiled language with a blazingly fast compiler and hosts some
nice teaching/learning aids. For instance, it comes with gofmt, a
program that indents go code consistently and design features like
having only one loop construct simplifies things. It also has a
terrific concurrency model but that might not be relevant for a past
APCS-A low level unit.&lt;/p&gt;
&lt;p&gt;
It also appears that you can gdb so I&amp;#39;m guessing it has the same
ability to be used to explore assembly as C and C++.&lt;/p&gt;
&lt;p&gt;
Even though I&amp;#39;m a C guy from way back and taught C++ for the past 7
years at Hunter College, I&amp;#39;d be really tempted to look at Go if I were
exploring low level programming or system programming with a High
School post APCS-A class today.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-5&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-5&#34;&gt;
Rust
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-5&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
Rust is another interesting choice. It seems to be the up and coming
darling systems language of the day. That&amp;#39;s not to say it&amp;#39;s a fad -
there seems to be some solid substance underneath. Like with Go, I&amp;#39;ve
only dabbled and to an even lesser extent.&lt;/p&gt;
&lt;p&gt;
My big concern with it in a high school course, particularly for just
a unit in a high school course is there seems to be a fair amount of
overhead and cognitive load for a beginner.  This overhead gives you
some great protections when programming but it just seems to much
given the high school students lack of experience.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-6&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-6&#34;&gt;
Others (Ada, Swift, Nim)
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-6&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
There are other choices as well. I worked with Ada a bit back in the
day and it would suit the bill. After all it was designed for embedded
systems but it&amp;#39;s less mainstream and is less streamlined than C, C++
or Go. Also, to be honest, I&amp;#39;m so out of date with Ada that I can&amp;#39;t
really say what it looks like today. Swift and Nim also came up as I
poked around for current systems programming languages this morning
but know neither and Swift being apple only would be a concern for me.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-7&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-7&#34;&gt;
Conclusions
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-7&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
So, where would I fall if I had to design this student experience? If
I were pressed for time, I&amp;#39;d probably opt for C++ with C being my
second choice. If I had time to plan, I&amp;#39;d look at Go and Rust but my
gut tells me I&amp;#39;d settle on Go for its minimalism and clean design.&lt;/p&gt;
&lt;p&gt;
In any event, it was an interesting question to ponder on.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>New York - where actual teacher preparation in optional.</title>
      <link>https://cestlaz.github.io/post/knowledge-optional/</link>
      <pubDate>Thu, 01 Feb 2024 14:03:17 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/knowledge-optional/</guid>
      <description>&lt;p&gt;
This morning, I read Arthur Goldstein&amp;#39;s latest &lt;a href=&#34;https://arthurgoldstein.substack.com/p/anybody-can-teach-newcomers-says&#34;&gt;blog post&lt;/a&gt;. Arthur, is a
relatively recently retired NYC public school teacher, a UFT
(United Federation of Teachers) chapter leader, and a frequent critic
of Michael Mulgrew, the current and long term UFT president.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m a union guy through and through but I also, like Arthur, believe
that UFT&amp;#39;s leadership is neither pro-teacher nor pro-student but
rather pro-themselves. It&amp;#39;s a rather sad state of affairs.&lt;/p&gt;
&lt;p&gt;
Today, Arther shared Mulgrew&amp;#39;s latest &amp;#34;accomplishment.&amp;#34; He, along with
the city and state have relaxed the requirements for bilingual and ENL
(English as a new language) certifications. This is in response to the
recent massive influx of newcomers.&lt;/p&gt;
&lt;p&gt;
The deal has two parts. The first makes all the sense in the world. If
a teacher holds the credentials for multiple certifications - one for
bilingual and one not, they will be able to activate the bilingual
cert with no penalty - that is they won&amp;#39;t lose salary, tenure,
seniority or anything else. This should always have been the case and
it should in fact he true, or at least partially true for any
certification area. Maybe not the tenure thing but even in that case,
there should be some modified rule to encourage teachers to switch to
their most needed certification and not be penalized for doing so.&lt;/p&gt;
&lt;p&gt;
The second part is the problematic one. They&amp;#39;re easing the
requirements for the bilingual certification. Now, instead of
completing the coursework and taking an standardized assessment, you
only have to do one or the other. That is, take a standardized test, a
single instance platform on which success certainly doesn&amp;#39;t indicate a
teacher is qualified or take a handful  of courses.&lt;/p&gt;
&lt;p&gt;
Arthur was lamenting over the exam, but given the number of education
programs in NY where you just show up and earn an &amp;#34;A&amp;#34; or even for some
you barely have to show up, this is basically just a rubber stamp for
bilingual teachers.&lt;/p&gt;
&lt;p&gt;
Here&amp;#39;s the language from the UFT&amp;#39;s release on the program:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Certified teachers and pupil personnel services professionals (i.e.,
social workers, school counselors and psychologists) can now complete
either the examination requirement or the enrollment and education
requirements, instead of both. That means candidates can pass the
Bilingual Education Assessment and/or the Content Specialty Test in
ESOL, if available, in lieu of completing coursework and matriculating
in a registered program leading to a bilingual education extension
and/or an ENL certificate.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This struck me as awfully similar to the CS SOCE (Statement of
Continued Eligibility). In New York State, even though we now have
computer science certification, they created the SOCE which basically
said that as long as you taught a single CS class in the last couple
of years, if you fill out a form, you&amp;#39;ll be essentially certified to
teach any CS in your school for the next 10 years.&lt;/p&gt;
&lt;p&gt;
Both of these initiatives attempt to address the lack of qualified
teachers. Bilingual for the influx of new non native English speakers
and CS for the new field of study that the city and state have been
pushing.&lt;/p&gt;
&lt;p&gt;
Both of these initiatives will, and in the Case of CS have resulted in
students being served by unqualified teachers both now and for the
next decade and such actions should be criminal.&lt;/p&gt;
&lt;p&gt;
True, some teachers thrown into a CS classroom know their stuff and
some are working diligently to learn but many aren&amp;#39;t there and to many
are making no serious move to get there.&lt;/p&gt;
&lt;p&gt;
In each of my first to cohorts for Hunter&amp;#39;s advanced certificate
program, I had well over 100 applicants. These were supposed to be the
most prepared of the city&amp;#39;s CS teachers - all culled through the
CS4All program and most had completed multiple years of New York&amp;#39;s CS
training - much of which was provided by organizations like Code.org.&lt;/p&gt;
&lt;p&gt;
My CS prerequisites were pretty simple - a code sample in a text based
language that showed some basics. A program with a function that
returned the smallest value in an array or list of numbers would have
covered all the requirements and then some. That&amp;#39;s also a typical
early assignment in a CS0 class.&lt;/p&gt;
&lt;p&gt;
Each year, only a very small number of applicants - something like
under 10, maybe under 15, could complete this, another handful were able
to, with the help of self study resources like the Runestone academy&amp;#39;s
Python or Java texts got up to speed. Each of the first two cohorts
had a little over 20 students including a handful of masters
candidates. All of the masters candidates came in with more than the
required CS background.&lt;/p&gt;
&lt;p&gt;
Now, for those applicants who learned what they needed and were
accepted, my hat was off to them, they worked hard and did what they
had to do. They were great members of the cohort.&lt;/p&gt;
&lt;p&gt;
On the other hand, of the hundreds who never followed up, many had no
idea what I meant by &amp;#34;in a text based language like Python, Java, or
Javascript,&amp;#34; or similar parts of the application - and many of them
had been teaching CS for multiple years and attending DOE training for
multiple years.&lt;/p&gt;
&lt;p&gt;
Now, New York State comes along and says that they can all teach CS
for 10 more years, no questions asked.&lt;/p&gt;
&lt;p&gt;
The kids will suffer.&lt;/p&gt;
&lt;p&gt;
How can the state get away with this? They don&amp;#39;t care. Neither do the
teacher&amp;#39;s Unions (and again, I&amp;#39;m a big Union guy) - their current
teachers can do whatever they want and all is good. The students don&amp;#39;t
know how they&amp;#39;re being harmed and overall, parents are none the
wiser. I&amp;#39;ve mentioned that a number of my Hunter undergrads came in
having scored a 3, 4, or frequently 5 on APCS-Principals and while
some had a good background, way more than should have would have been
better off not taking anything. All these kids were super bright and
motivated. It wasn&amp;#39;t there fault they were sold a bill of goods.&lt;/p&gt;
&lt;p&gt;
Back to the bilingual issue - again, the DOE, NYSED and UFT can get
away with it because on the surface, it looks good - we can teach our
newcomers but they&amp;#39;re the ones who will suffer. And of course, they&amp;#39;re
a population with no voice.&lt;/p&gt;
&lt;p&gt;
Should be criminal.&lt;/p&gt;
&lt;p&gt;
So, that&amp;#39;s my rant for the day. I promise, more CS teaching content
and positive posts to come.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Learning Elisp 17 - a thesaurus mode</title>
      <link>https://cestlaz.github.io/post/learning-elisp-17/</link>
      <pubDate>Thu, 25 Jan 2024 08:45:52 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/learning-elisp-17/</guid>
      <description>
&lt;p&gt;
When we last left our heroes we had made the API call to
dictionaryapi.com, gotten the response and coverted the json string
into elisp data. Specifically an array that contained a hash table.&lt;/p&gt;
&lt;p&gt;
Today&amp;#39;s video will take us the rest of the way to our thesaurus mode -
run the function and we&amp;#39;ll get a list of synonyms for the word we&amp;#39;re
currently at.&lt;/p&gt;
&lt;p&gt;
First, we had to pull out the synonyms from the response. To do that
we used basic elisp data manipulation. We used &lt;strong&gt;(aref json-resp 0)&lt;/strong&gt; to
pull out the hash table, which was the 0&lt;sup&gt;th&lt;/sup&gt;  element of the array
response, then wrap that in &lt;strong&gt;(gethash &amp;#34;meta&amp;#34;…)&lt;/strong&gt; to pull out the
&amp;#34;meta&amp;#34; hash entry. That&amp;#39;s a hash table in its own right so we then
pull out the &amp;#34;syns&amp;#34; element with another &lt;strong&gt;gethash&lt;/strong&gt; and then finally,
since that&amp;#39;s an array with an array in it, another &lt;strong&gt;aref&lt;/strong&gt;. The
complete code is up at gitlab but it&amp;#39;s essentially:&lt;/p&gt;
&lt;div class=&#34;src src-emacs-lisp&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;aref&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;gethash&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;syns&amp;#34;&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;gethash&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;meta&amp;#34;&lt;/span&gt;  (&lt;span style=&#34;color:#a6e22e&#34;&gt;aref&lt;/span&gt; json-resp &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;))) &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
This gives us an array of synonym strings but we want it to be a list
so we used &lt;strong&gt;mapcar&lt;/strong&gt; to convert.&lt;/p&gt;
&lt;div class=&#34;src src-emacs-lisp&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  (&lt;span style=&#34;color:#a6e22e&#34;&gt;mapcar&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;#&amp;#39;identity&lt;/span&gt; word-list)&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
There&amp;#39;s probably a better way to do this but that&amp;#39;s what came to mind.&lt;/p&gt;
&lt;p&gt;
From there, the actual function to replace the word under the cursor
with its synonym is pretty straightforward:&lt;/p&gt;
&lt;div class=&#34;src src-emacs-lisp&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(defun word-to-syn (n)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  (interactive &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;p&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  (let* ( (word (current-word))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          (word-list (get-synonyms word))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          (new-word (&lt;span style=&#34;color:#a6e22e&#34;&gt;completing-read&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Replacement:&amp;#34;&lt;/span&gt; word-list)))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    (backward-word)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    (kill-word &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    (&lt;span style=&#34;color:#a6e22e&#34;&gt;insert&lt;/span&gt; new-word)))&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
The &lt;strong&gt;current-word&lt;/strong&gt; function returns the word at or before the cursor
location. We then use the &lt;strong&gt;get-synonyms&lt;/strong&gt; function that we just
completed and then use &lt;strong&gt;completing-read&lt;/strong&gt; which lets us select a word
from the synonym list.&lt;/p&gt;
&lt;p&gt;
Once we have the replacement word, it&amp;#39;s just buffer manipulations to
delete the old word and insert the new one.&lt;/p&gt;
&lt;p&gt;
The rest of the video shows turning this into a mode and binding the
function to a key.&lt;/p&gt;
&lt;p&gt;
So, that&amp;#39;s it for the elisp series for now. I&amp;#39;ll do more if I can
think of interesting and fun things to do but no promises.&lt;/p&gt;
&lt;p&gt;
You can get all the code at the repo linked below:&lt;/p&gt;
&lt;div id=&#34;outline-container-headline-1&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-1&#34;&gt;
Code:
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-1&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
The code for the series is still up here:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://gitlab.com/zamansky/learning-elisp-code&#34;&gt;https://gitlab.com/zamansky/learning-elisp-code&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-2&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-2&#34;&gt;
The videos:
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-2&#34; class=&#34;outline-text-2&#34;&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/ZBN4Kphv-ac?si=lMyYassaUwz6ia8g&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;
Video link: &lt;a href=&#34;https://www.youtube.com/watch?v=ZBN4Kphv-ac&#34;&gt;https://www.youtube.com/watch?v=ZBN4Kphv-ac&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Observing History</title>
      <link>https://cestlaz.github.io/post/observing-history/</link>
      <pubDate>Tue, 23 Jan 2024 12:17:15 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/observing-history/</guid>
      <description>&lt;p&gt;
When I was a kid, CS in K12 wasn&amp;#39;t a thing. Personal Computers were
just becoming available. I remember pilgrimages to the basement Polk
Hobby shop to play. I don&amp;#39;t even remember what those computers were
but soon, names like Apple, TRS-80 and Commodore PET were
appearing. Throughout my schooling, CS wasn&amp;#39;t a thing until High
School and even there it was a couple of random classes because
somehow Stuyvesant had an IBM-1130 - a punch card driven machine and a
couple of math teachers taught simple programming electives.&lt;/p&gt;
&lt;p&gt;
In my senior year, 1984, APCS came in but it wasn&amp;#39;t wide spread and it
was a single random class for a handful of students taught primarily
by math teachers. When I went into teaching after college and a short
stint at Goldman, not much has changed.&lt;/p&gt;
&lt;p&gt;
What I&amp;#39;m getting at is that some of us - teachers of, um, let&amp;#39;s say,
an age have really gotten to witness history. We&amp;#39;ve been able to live
through the emergence of a new study area in K12.&lt;/p&gt;
&lt;p&gt;
That doesn&amp;#39;t happen too often.&lt;/p&gt;
&lt;p&gt;
At some levels I always realized this but in many ways I probably just
taught day to day without thinking about it.&lt;/p&gt;
&lt;p&gt;
We&amp;#39;ve witnessed something that didn&amp;#39;t even exist to starting to answer
questions like what should be taught? At what grade or grades?
Separate or as an add on to other subject areas? Who will teach it?
What must they know? What&amp;#39;s the point? Will this help solve the
achievement gap? And on and on.&lt;/p&gt;
&lt;p&gt;
Since America consists of fifty different education systems, if not
more, we&amp;#39;ve seen lots of different approaches - certification
questions, standards, or lack thereof, what counts as CS? CS vs Tech
Ed, requirements or electives?&lt;/p&gt;
&lt;p&gt;
In some ways it&amp;#39;s amazing how far things have come but also amazing
how much further there is to go.&lt;/p&gt;
&lt;p&gt;
Personally, I&amp;#39;m in some ways amazed but also lament so many missed
opportunities. In many ways CS Education in K12 has gone the way of
other education. That&amp;#39;s a shame. Just like in Math, prior to NCLB
Math teachers had to &lt;strong&gt;know&lt;/strong&gt; math. Now. many take &amp;#34;math for math
teachers&amp;#34; and can barely pass local assessments. CS Ed in far too many
places seems to be going that route. CS Certification programs that
barely contain any real CS or even worse, just certifying based on
vendor driven professional development.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m also lamenting the frequency of the checkbox approach - Oh we do
that in this existing class - check, or we have this one course on the
books for a few self selecting students - check.&lt;/p&gt;
&lt;p&gt;
But then, there&amp;#39;s also some good going on out there. The teachers that
applied to my cert program - even the ones that weren&amp;#39;t accepted were
all seeking out real CS knowledge and a network of CS teachers -
that&amp;#39;s inspiring and of course the fact that we&amp;#39;re discussing CS
availability and equity related issues means we&amp;#39;ve gotten things off
the ground and there are people paying attention, at least to that
side of things.&lt;/p&gt;
&lt;p&gt;
All this, is of course, ongoing. It&amp;#39;s going to be years, probably
decades before K12 CS is settled for better or worse. Some people will
want to be very involved - I&amp;#39;d like to think that my involvement has
been for the better, and some would rather just teach but pay
attention. We&amp;#39;re living through the evolution of a field of study and
really not many generations of teachers really get to be able to do
that.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Learning Elisp 16 - using a web API</title>
      <link>https://cestlaz.github.io/post/learning-elisp-16/</link>
      <pubDate>Tue, 16 Jan 2024 11:18:41 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/learning-elisp-16/</guid>
      <description>
&lt;p&gt;
Sorry for the long break. Once December started, I spent the first few
weeks spending my coding time on &lt;a href=&#34;https://adventofcode.com/&#34;&gt;Advent of Code&lt;/a&gt;, then just got
sidetracked but now it&amp;#39;s time to get going again.&lt;/p&gt;
&lt;p&gt;
This is the last elisp topic I specifically wanted to cover so this
and the next video mmight be the end of this series, we&amp;#39;ll see.&lt;/p&gt;
&lt;p&gt;
What are we doing today? Using a web API. Basically, if we want to use
some external data source or facility a typical way to make that
happen is through a web API. We could write our own, but for today
we&amp;#39;re going to use a free to use online thesaurus service. The idea is
that we can send it a word and we&amp;#39;ll get back synonyms. The end result
will be, as we&amp;#39;re writing, we hit the magic key, get a list of
alternative words and then select one, or not.&lt;/p&gt;
&lt;p&gt;
The API we&amp;#39;ll be using is at &lt;a href=&#34;https://dictionaryapi.com/.&#34;&gt;https://dictionaryapi.com/.&lt;/a&gt; It&amp;#39;s part of 
Merriam-Webster&amp;#39;s set of free to use tools. To use it, we have to go
to &lt;a href=&#34;https://dictionaryapi.com/register/index&#34;&gt;this&lt;/a&gt; page and register to get an API key, then to use it to get
synonyms for a word, you go to a url formatted like this:&lt;/p&gt;

https://dictionaryapi.com/api/v3/references/thesaurus/json/&lt;b&gt;word&lt;/b&gt;?key=&lt;b&gt;MYKEY&lt;/b&gt;
&lt;p&gt;
where &lt;strong&gt;word&lt;/strong&gt; is the word you want to lookup and &lt;strong&gt;MYKEY&lt;/strong&gt; is the key you
got when registering.&lt;/p&gt;
&lt;p&gt;
The result will be a string of data representing the &lt;a href=&#34;https://json.org&#34;&gt;JSON&lt;/a&gt; formatted
response.&lt;/p&gt;
&lt;p&gt;
How do we do this?&lt;/p&gt;
&lt;p&gt;
First, to get the data, we can use elisp&amp;#39;s
&lt;code&gt;url-retreive-synchronously&lt;/code&gt;. This takes a string with our url and
returns a buffer with the results. In the video, we first show that we
can use the &lt;code&gt;switch-to-buffer&lt;/code&gt; function to go to the buffer with the
results:&lt;/p&gt;
&lt;div class=&#34;src src-emacs-lisp&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  (defvar key &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;mykey&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  (defvar base-url &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://dictionaryapi.com/api/v3/references/thesaurus/json/&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  (switch-to-buffer (url-retrieve-synchronously (&lt;span style=&#34;color:#a6e22e&#34;&gt;concat&lt;/span&gt; base-url &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;polite&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;?key=&amp;#34;&lt;/span&gt; key)))&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
and then show how we can use &lt;code&gt;with-current-buffer&lt;/code&gt; to take the buffer
with our data and manipulate it before using the &lt;code&gt;buffer-string&lt;/code&gt;
function to return what we want.&lt;/p&gt;
&lt;p&gt;
Finally, we convert the json string into an elisp data structure, an
array of arrays and hash tables using &lt;code&gt;json-parse-string&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;
Here&amp;#39;s the complete code:&lt;/p&gt;
&lt;div class=&#34;src src-emacs-lisp&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  (defvar key &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;mykey&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  (defvar base-url &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://dictionaryapi.com/api/v3/references/thesaurus/json/&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;;; Example using switch-to-buffer&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;;; (switch-to-buffer&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;;; (url-retrieve-synchronously (concat base-url &amp;#34;umpire&amp;#34; &amp;#34;?key=&amp;#34; key)))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  (defun get-synonyms (word)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    (let* ((url (&lt;span style=&#34;color:#a6e22e&#34;&gt;concat&lt;/span&gt; base-url word &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;?key=&amp;#34;&lt;/span&gt; key))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  	 (resp (with-current-buffer (url-retrieve-synchronously url)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  		 (&lt;span style=&#34;color:#a6e22e&#34;&gt;goto-char&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;point-min&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  		 (&lt;span style=&#34;color:#a6e22e&#34;&gt;re-search-forward&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^$&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  		 (&lt;span style=&#34;color:#a6e22e&#34;&gt;delete-region&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;point&lt;/span&gt;) (&lt;span style=&#34;color:#a6e22e&#34;&gt;point-min&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  		 (&lt;span style=&#34;color:#a6e22e&#34;&gt;buffer-string&lt;/span&gt;)))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  	 (json-resp (json-parse-string resp))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  	 )
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      json-resp))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  (get-synonyms &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;umpire&amp;#34;&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
The video covers all the details. In the next installment, we&amp;#39;ll see
how we can take this json response, pull out the synonyms and easily
replace the current word with one.&lt;/p&gt;
&lt;div id=&#34;outline-container-headline-1&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-1&#34;&gt;
Code:
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-1&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
The code for the series is still up here:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://gitlab.com/zamansky/learning-elisp-code&#34;&gt;https://gitlab.com/zamansky/learning-elisp-code&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-2&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-2&#34;&gt;
The videos:
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-2&#34; class=&#34;outline-text-2&#34;&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/tGZNhJmZ_2M?si=QHZ176EWF8OdodLg&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;
Video link: &lt;a href=&#34;https://www.youtube.com/watch?v=tGZNhJmZ_2M&#34;&gt;https://www.youtube.com/watch?v=tGZNhJmZ_2M&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Teaching using manipulatives</title>
      <link>https://cestlaz.github.io/post/manipulatives/</link>
      <pubDate>Wed, 10 Jan 2024 11:08:04 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/manipulatives/</guid>
      <description>&lt;p&gt;
Listened to the latest episode of the &lt;a href=&#34;https://csedpodcast.org/&#34;&gt;CS Ed Podcast&lt;/a&gt; yesterday. It
featured Colleen Lewis, of &lt;a href=&#34;https://www.csteachingtips.org/&#34;&gt;CS Teaching Tips&lt;/a&gt; fame talking about how she
uses manipulatives. Much like Colleens session last SIGCSE on
&lt;a href=&#34;https://cestlaz.github.io/post/sigcse-2023-microteaching/&#34;&gt;microteaching&lt;/a&gt; this episode made me both happy and sad.&lt;/p&gt;
&lt;p&gt;
Happy because it&amp;#39;s awesome that Colleen is bringing attention to
strong classroom teaching practices and she&amp;#39;s sharing good stuff. Sad
because these are things rarely talked about in teaching CS or college
level teaching in general.&lt;/p&gt;
&lt;p&gt;
In the podcast Colleen mentioned manipulatives like physical pockets
to represent variables and also discusses how she gets her classes on
board. I recommend you give a listen (&lt;a href=&#34;https://csedpodcast.org/blog/s4e2_tpb_physical_java_models/&#34;&gt;link&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;
The sad part is that using manipulatives is day one methods class
stuff. I&amp;#39;m reminded of this clip from Mr. Holland&amp;#39;s Opus - a teacher
movie I really like:&lt;/p&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/wUJzk-m98Ek?si=U1ipQLys8umb9p2A&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;
A well prepared teacher has a tool belt full of options and isn&amp;#39;t
afraid to drag any of them out and use them as appropriate.&lt;/p&gt;
&lt;p&gt;
When I took math methods classes, manipulatives were day 1. Base 10
blocks, linking cubes, pattern blocks, cuisenaire rods, and more. From
store bought to adapting free materials on hand. Of course, math
manipulatives are frequently used in earlier grades by students for
hands on exercises but they&amp;#39;re also great for demonstrations and whole
class activities and yes, even in High School or College.&lt;/p&gt;
&lt;p&gt;
While some teachers, particularly from what I&amp;#39;ve seen, at the college
level, are gatekeepers, it&amp;#39;s our jobs to make simple the complex. If
diagrams help, we should use them. In class &amp;#34;games&amp;#34; - well why not,
and certainly manipulatives. Colleen set up pockets for variables
and in fact, on her site you can request a set but you can create your
own. I mean, I&amp;#39;m sure all our schools have piles of those interoffice
mail folders that don&amp;#39;t get used anymore. Folders, or envelopes can
also be used to teach message passing and networking concepts. How
about a cardboard box for a literal &amp;#34;black box.&amp;#34; Even props.  I know
that not everybody has custom made recursive sock puppets,&lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/sock-puppets.jpg&#34; alt=&#34;/img/sock-puppets.jpg&#34; title=&#34;/img/sock-puppets.jpg&#34; width=&#34;300px&#34;/&gt;
&lt;p&gt;
and few people have the production budget like say a class like
CS50,but even lame makeshift ideas like drawing two dots for eyes on
your hand can be used for positive effect.&lt;/p&gt;
&lt;p&gt;
For other ideas, how about having the class step through a program
passing a ball around as a &amp;#34;talking stick.&amp;#34; The student with the ball
&amp;#34;executes&amp;#34; the line (or function or whatever). How about a physical
stack for stacks or having the students line up for a list and then
give them a &amp;#34;reference&amp;#34; to who&amp;#39;s after them (on a postit for example)
for a linked list activity. The ideas are out there if you look for them.&lt;/p&gt;
&lt;p&gt;
So don&amp;#39;t be afraid to try out using physical tools, or manipulatives
and if you&amp;#39;ve got an interesting one, I&amp;#39;m sure everyone would love to
hear about it.&lt;/p&gt;
&lt;p&gt;
Circling back to the podcast and what Colleen shared, here are a
couple of links to learn more:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.google.com/document/d/1hk98trfOiU3CyPyJ07fGfql2mYaWf8qGZ0fS8FhDVwg/edit#heading=h.5i5t4kfuu5b5&#34;&gt;https://docs.google.com/document/d/1hk98trfOiU3CyPyJ07fGfql2mYaWf8qGZ0fS8FhDVwg/edit#heading=h.5i5t4kfuu5b5&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.csteachingtips.org/3D&#34;&gt;https://www.csteachingtips.org/3D&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Enjoy.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Kicking off 2024</title>
      <link>https://cestlaz.github.io/post/2024/</link>
      <pubDate>Tue, 02 Jan 2024 09:54:20 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/2024/</guid>
      <description>&lt;p&gt;
Time to kick off 2024. I closed out 2023 the way I usually do - going
to bed early but I didn&amp;#39;t start 2024 with a run like last year. I&amp;#39;m
still nursing a broken toe and it&amp;#39;ll be a couple more weeks before I&amp;#39;m
cleared for full activity.&lt;/p&gt;
&lt;p&gt;
I won&amp;#39;t make any predictions on what&amp;#39;s to come in CS Education in 2024
but I thought I&amp;#39;d share a few things I&amp;#39;d be looking at.&lt;/p&gt;
&lt;p&gt;
The hot topic in and out of education last year was AI and that looks
to continue throughout 2024. For general education the issue will be
cheating on one side an how to leverage the technology on the
other. For CS an interesting twist will be how teachers deal with AI
enhanced programming environments. The interesting questions will be
not only be how we either limit or enable to the tools but also we&amp;#39;ll
probably see the start of a long term conversation as to what it means
to teach programming. Nothing huge will change in this coming year but
issues like the importance or lack thereof of understanding algorithms
and data structures as opposed to using AI completion will start to
surface as AI IDEs become more commonplace. Of course, in addition to
the technical AI issues, the ethical ones ranging from uses to
using private data for training are sure to be hot topics. &lt;/p&gt;
&lt;p&gt;
1Going back to School programming environments, that&amp;#39;s something else
that I&amp;#39;ll be looking at. Over the past few years, tools like repl.it
became extremely popular. A few months ago, though, repl.it removed
it&amp;#39;s educational features leaving many teachers in the lurch. Repl.it
was a hit because it could work on a chromebook, was free, and had
great classroom features. It turns out that putting ones trust in a
private company&amp;#39;s largess was probably not a great idea.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve always been wary of making my teaching reliant on outside
entities and that&amp;#39;s something that I hope the greater CS community
takes more seriously. I get it that many schools have few options -
they have to use chromebooks and only approved software but having a
well educated vocal community would be a start. &lt;/p&gt;
&lt;p&gt;
Speaking of educated communities, that&amp;#39;s a big one that I&amp;#39;ll be
looking at - the preparedness of K12 CS teachers. This has been a drum
I&amp;#39;ve been banging for a long time and will continue to do so.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve always believed that K12 CS teachers need to have a decent
background in CS - something like a strong undergrad CS minor that
goes at least a course beyond APCS-A and has some breadth. That&amp;#39;s how
I designed Hunter&amp;#39;s CS teacher certification program.&lt;/p&gt;
&lt;p&gt;
It appears, however that I&amp;#39;m not the norm. NYSED created a system by
which CS teachers with no knowledge can continue to teach CS for the
next decade. I wrote about that &lt;a href=&#34;https://cestlaz.github.io/post/soce/&#34;&gt;here&lt;/a&gt;. I&amp;#39;ve also seen plenty of new
certification programs come online that require no real CS knowledge
in order for the participants to complete the programs.&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s alarming but deep down I think the ship has sailed.&lt;/p&gt;
&lt;p&gt;
There will be a few pockets of excellence in terms of preparing pre
service teachers and a few deep CS professional development options
out there but we&amp;#39;ll more often than not see weak CS accompanied by
tangential education issues.&lt;/p&gt;
&lt;p&gt;
Right now, I think those will be the things I&amp;#39;ll be keeping my eye out
for but who knows. Before ChatGPT hit, AI wasn&amp;#39;t on educators radar so
you never know.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Low Level CS in HS</title>
      <link>https://cestlaz.github.io/post/low-level/</link>
      <pubDate>Tue, 19 Dec 2023 09:31:44 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/low-level/</guid>
      <description>&lt;p&gt;
There&amp;#39;s been discussion recently about current CS student&amp;#39;s knowledge,
or lack thereof of hardware. The discussion was spurred when &lt;a href=&#34;https://www.magesguild.io/the-decline-of-hardware-knowledge-in-the-era-of-cloud-native-compute/&#34;&gt;this&lt;/a&gt;
article made it&amp;#39;s round in the CS Ed communities. My friend and fellow
CS Ed Blogger Alfred Thompson gave his take &lt;a href=&#34;https://blog.acthompson.net/2023/12/how-much-hardware-knowledge-to-cs.html?spref=fb &#34;&gt;on his blog&lt;/a&gt;. I thought I&amp;#39;d
share mine here.&lt;/p&gt;
&lt;p&gt;
First, let&amp;#39;s get some definitions straight. The original article
wasn&amp;#39;t really talking about hardware. The author was really talking
about what I&amp;#39;d call &amp;#34;low level&amp;#34; computer and programming
concepts. Things like bit level operations, the internals of memory
management and in fact memory management altogether, and things like
interrupts and how system calls work.&lt;/p&gt;
&lt;p&gt;
When we&amp;#39;re talking hardware, we could be talking about a couple of
things. It could be Information Technology (IT) hardware - putting
together computers. Knowing interface standards like EIDE or the older
SCSI. Networking technologies. We could also be talking about things
that should be covered in robotics - wiring and programming an ATMEL, the
processor under the hood on an arduino directly to control a device
for example. Robotics, however, at the K12 level is usually more of an
intro programming class with physical output instead of merely visual
on a screen.&lt;/p&gt;
&lt;p&gt;
The question that arose was this: should any of these be covered in
K12?&lt;/p&gt;
&lt;p&gt;
Let&amp;#39;s look at each in turn.&lt;/p&gt;
&lt;p&gt;
IT Hardware? Probably not, at least not across the board in all CS
classes. Building computers and wiring your own networks were big in
the 90s and turn of the century. Not so much anymore. You used to be
able to purchase components at a variety of places but now, vendors
have dwindled. At the same time, the market has consolidated and moved
more towards laptops or smaller - platforms students can&amp;#39;t easily work
on. On the other hand, this can be and should be a fun and great
elective.&lt;/p&gt;
&lt;p&gt;
Low level robotics type hardware? Also, not in required classes but
would be a great elective.&lt;/p&gt;
&lt;p&gt;
That brings us to the low level programming concepts. Once again, as
an elective this can be great. In addition to covering some of this in
the classes I designed at Stuy, I created and offered a System Level
programming class that covered a lot of this. It was popular among the
CS students and from what I was told, super worthwhile for those who
went on to study CS or a related field in college.&lt;/p&gt;
&lt;p&gt;
What about for everyone else?&lt;/p&gt;
&lt;p&gt;
That&amp;#39;s the question. On the one hand, time is very limited. If a
school offers or requires CS it might just be one semester or one
year. You can&amp;#39;t cover everything in that amount of time. Also, as
Alfred pointed out in his post, we don&amp;#39;t currently even have nearly
enough knowledgable K12 CS teachers to teach the basics.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;d like to try to make a case though for including some of it.&lt;/p&gt;
&lt;p&gt;
Even though everyone uses computers these days, they can certainly be
intimidating and feel like magic. People have no idea how they work. I
joke with my students that if they unplug the keyboard quickly while
typing they can shake some characters out of the cable. Teaching some
low level CS concepts can demystify computers. Take away the
fear. Just as learning some programming and algorithms can demystify
the &amp;#34;magic&amp;#34; of recommendation systems and high level wonders, some low
level knowledge can demytify how these computer things work inthe
first place.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m not talking about going all &lt;a href=&#34;https://www.nand2tetris.org/&#34;&gt;Nand to Tetris&lt;/a&gt;. I&amp;#39;m also not talking
about dropping in topics out of context. The College Board did this
famously with binary, decimal, and hex. Without context it&amp;#39;s
meaningless and worthless. Hunter, where I last taught did the same
thing. They required binary, decimal, and hex in their CS0 course. I
ignored it. The argument the professors gave was that the kids needed
it when they took their first systems/architecture course. I asked
them, &amp;#34;well, for all the students in all the other CS0 classes, they
did cover the topic, did it really help?&amp;#34; The answer was &amp;#34;no, they all
forgot and we had to reteach it.&amp;#34; So much for it being important in
CS0.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m talking about a unit where you can get far enough to understand
something memorable. I brought a bunch of HS students to a 45 minute
talk once explaining how solid state memory worked. These kids had
zero background and the speaker kept things at an informal level but
after the 45 minutes, those kids understood at a basic level, how a
flash drive stored information.&lt;/p&gt;
&lt;p&gt;
Another example is a unit developed for my intro course. The heavy
lifting was done by a colleague and friend of mine - I can&amp;#39;t take the
credit. The unit centered around a small assembly interpreter that he
designed and built a web emulator for. Kids learned some logic gates,
how you could do arithmetic and were also able to see how memory
worked. The kids got to look behind the curtain. Sure, their laptop
was a bazillion times more complicated but at their cores the same
things were happening.&lt;/p&gt;
&lt;p&gt;
Now, the rub comes with resources and bang for your buck. Can you
spend a couple of week on something like that? Do you have teachers
who know enough to do it? If you do it, what other topic(s) can&amp;#39;t you
cover.&lt;/p&gt;
&lt;p&gt;
If you&amp;#39;ve only got one semester with the kids, you&amp;#39;ve got to call your
shots. I can&amp;#39;t say that low level CS is the most important thing to
cover there but when there is time, I think it&amp;#39;s certainly
worthwhile. On the other hand, if you have a year or more with your
students, I&amp;#39;m pretty sure a creative teacher can come up with a way to
get the basics in.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Advent 2023 Day 15 - hash tables</title>
      <link>https://cestlaz.github.io/post/advent-2023-day15/</link>
      <pubDate>Fri, 15 Dec 2023 14:40:23 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/advent-2023-day15/</guid>
      <description>&lt;p&gt;
Haven&amp;#39;t written up the last few days but I thought &lt;a href=&#34;https://adventofcode.com/2023/day/15&#34;&gt;today&amp;#39;s&lt;/a&gt; Advent of
Code problem was worth a few words. I might still go back and write up
a few other ones, and who knows if I&amp;#39;ll finish any more problems - Is
stopped around here last year. We&amp;#39;ll see.&lt;/p&gt;
&lt;p&gt;
I liked today&amp;#39;s challenge because it was a nice introduction to hash
tables. Specifically, to solve the problem, you implement a simple
open hash table. In some cases, you could use your languages built in
hash table but then you&amp;#39;d have to already know something about it.&lt;/p&gt;
&lt;p&gt;
Part 1 had you do some parsing and calculating a hash function.&lt;/p&gt;
&lt;p&gt;
Part 2 required building a table of 256 items where each item held an
unknown list of data items. Based on your input data, you had to
either add a new item, delete an ite, or update the value of an item
already in the table.&lt;/p&gt;
&lt;p&gt;
Basically a hash table.  Even though the question doesn&amp;#39;t explicitly
say &amp;#34;hash table&amp;#34; it does define &lt;strong&gt;HASH&lt;/strong&gt; function* and calls the process
you are going to perform the &amp;#34;Holiday ASCII String Helper Manual
Arrangement Procedure, or &lt;strong&gt;HASHMAP&lt;/strong&gt; for short.&amp;#34;&lt;/p&gt;
&lt;p&gt;
Why do I like this problem. First off, it&amp;#39;s a nice and different way
to introduce hash tables in a data structure classes but more
importantly I think this type of approach can be used as a unit in a
boot camp type class.&lt;/p&gt;
&lt;p&gt;
I can&amp;#39;t tell you how many boot camp developed programmers and PD
trained teachers use built in hash tables with no understanding of
their limitations or in some cases real power. They use them because
they were taught them and they&amp;#39;re &amp;#34;easy.&amp;#34; Dictionaries in Python or
Javascript become the universal hammer.&lt;/p&gt;
&lt;p&gt;
An approach like this can be built by a relative beginner in Python,
Javascript or similar using the basic constructs, including built in
dictionaries but then can give a platform to explore has tables more
deeply. It can also be a platform to discuss variant data structures -
a hash table, but you can&amp;#39;t just use the built in Python dictionary.&lt;/p&gt;
&lt;p&gt;
So, I&amp;#39;d recommend checking this one out.&lt;/p&gt;
&lt;p&gt;
The problem, once again can be found &lt;a href=&#34;https://adventofcode.com/2023/day/15&#34;&gt;here&lt;/a&gt; and my solution (in
Clojure), &lt;a href=&#34;https://gitlab.com/zamansky/advent2023/-/blob/main/src/day15.clj?ref_type=heads&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Advent 2023 Day 08 2 - checking the data</title>
      <link>https://cestlaz.github.io/post/advent-2023-day-08-2/</link>
      <pubDate>Fri, 08 Dec 2023 18:57:16 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/advent-2023-day-08-2/</guid>
      <description>&lt;p&gt;
I wanted to add a bit to &lt;a href=&#34;https://cestlaz.github.io/post/advent-2023-day-08/&#34;&gt;yesterday&amp;#39;s&lt;/a&gt; post.&lt;/p&gt;
&lt;p&gt;
Yesterday I wrote that for part 2 I just counted the cycles from each
starting point. If you looked at my &lt;a href=&#34;https://gitlab.com/zamansky/advent2023/-/blob/main/src/day08.clj?ref_type=heads&#34;&gt;code&lt;/a&gt; you&amp;#39;d notice that I didn&amp;#39;t
actually do that.&lt;/p&gt;
&lt;p&gt;
If you recall, nodes were identified by 3 letter codes. All nodes that
end in an &lt;code&gt;A&lt;/code&gt; like AAA or BBA are start nodes and all nodes that end
in a &lt;code&gt;Z&lt;/code&gt; are end nodes and we had to find the step, when starting
simultaneously at all start nodes, that they all get to end nodes.&lt;/p&gt;
&lt;p&gt;
To actually find a cycle for a given start point we&amp;#39;d have to:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Start at the start node&lt;/li&gt;
&lt;li&gt;Follow the path until you get to an end node&lt;/li&gt;
&lt;li&gt;Continue following until you get back to that first end node&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;
I didn&amp;#39;t do that - my solution was simpler but it still
worked. Further, if you read the problem statement, my solution
shouldn&amp;#39;t have worked for all cases.&lt;/p&gt;
&lt;p&gt;
Why did I write it and why did it work?&lt;/p&gt;
&lt;p&gt;
Because we were able to explore our data before solving the problem.&lt;/p&gt;
&lt;p&gt;
That&amp;#39;s another thing I liked about this problem.&lt;/p&gt;
&lt;p&gt;
Sure, there are times when we&amp;#39;re writing a program to solve for some
unknown but often we have data, or at least some of the data and we
can explore it to help shape our programs.&lt;/p&gt;
&lt;p&gt;
In this case we can grab a start node and track it using our part 1
solution, see how one or more &amp;#34;path&amp;#34; behaves and ultimately learn
enough about the data to solve our problem.&lt;/p&gt;
&lt;p&gt;
I don&amp;#39;t know how often teachers get to work with students on problems
where they can use data exploration to tune their solutions, This is a
great example of one.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Advent 2023 Day 08 - Ghost paths</title>
      <link>https://cestlaz.github.io/post/advent-2023-day-08/</link>
      <pubDate>Fri, 08 Dec 2023 08:25:27 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/advent-2023-day-08/</guid>
      <description>&lt;p&gt;
Today&amp;#39;s puzzle was just what I needed this morning. Made me think, but
not too much :-).&lt;/p&gt;
&lt;p&gt;
You can find the problem &lt;a href=&#34;https://adventofcode.com/2023/day/8&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;
Part 1 was pretty straightforward. You had a set of locations and for
each location you could go left or right. So, for example, if node &lt;code&gt;AAA&lt;/code&gt;
is defined as &lt;code&gt;AAA = (BBB,CCC)&lt;/code&gt; then, if your next instruction was &lt;code&gt;L&lt;/code&gt;
or left, you&amp;#39;d go to BBB, if it was &lt;code&gt;R&lt;/code&gt;, then CCC. You had to follow
the instruction list item by item and keep going until you got to node
&lt;code&gt;ZZZ&lt;/code&gt;. If you got past the last instruction, you just repeat the
instruction list again.&lt;/p&gt;
&lt;p&gt;
As I said, pretty straightforward. Just loop over the instructions
updating your current location until you get to &lt;code&gt;ZZZ&lt;/code&gt;. The only minor
issue is that managing your current instruction and looping back to
the start again could be a bit hairy. Fortunately, in Clojure, we can
just use the &lt;code&gt;cycle&lt;/code&gt; function which gives us an infinite sequence. For
example if you run &lt;code&gt;(cycle &amp;#34;LRL&amp;#34;)&lt;/code&gt; you&amp;#39;ll get &lt;code&gt;LRLLRLLRL...&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;
The ultimate ask was for the length of the path from AAA to ZZZ.&lt;/p&gt;
&lt;p&gt;
Here&amp;#39;s the core code I used:&lt;/p&gt;
&lt;div class=&#34;src src-clojure&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-clojure&#34; data-lang=&#34;clojure&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  (&lt;span style=&#34;color:#66d9ef&#34;&gt;loop &lt;/span&gt;[dirs (cycle direction-list)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;             current &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;AAA&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;             count &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;             ]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        (&lt;span style=&#34;color:#66d9ef&#34;&gt;if &lt;/span&gt;(=  current &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ZZZ&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          count
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          (&lt;span style=&#34;color:#66d9ef&#34;&gt;let &lt;/span&gt;[move   (first dirs)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                [l r]  (&lt;span style=&#34;color:#a6e22e&#34;&gt;graph&lt;/span&gt; current)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                next (&lt;span style=&#34;color:#66d9ef&#34;&gt;if &lt;/span&gt;(= move &lt;span style=&#34;color:#e6db74&#34;&gt;\L&lt;/span&gt;) l r)]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            (&lt;span style=&#34;color:#a6e22e&#34;&gt;recur&lt;/span&gt; (rest dirs) next  (inc count)))))&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
Part two was a nice twist. Instead of going from AAA to ZZZ you had
multiple starting paths - nodes that ended in &lt;code&gt;A&lt;/code&gt; and multiple ending
nodes - nodes that ended in a &lt;code&gt;Z~&lt;/code&gt;. If you started a ghost at each of the
&amp;#34;starting nodes&amp;#34; simultaneously and had them follow the instructions,
at what step will they all get to a (possibly different) ending node
together.&lt;/p&gt;
&lt;p&gt;
Clearly the search space was too big for brute force.&lt;/p&gt;
&lt;p&gt;
I thought about searching backwards for a minute but remembered that
there were multiple &amp;#34;end&amp;#34; nodes so that wouldn&amp;#39;t do it but then I
thought about cycles. Maybe this was just leaning on past Advent of
Code problems but I figured that each start would cycle at some
point. It had to since all the starts wouldn&amp;#39;t hit a Z initially at
the same time - that would be too easy. I also figured that each start
would cycle on the first &amp;#34;end&amp;#34; it hit and not go through multiple
&amp;#34;end&amp;#34; nodes.&lt;/p&gt;
&lt;p&gt;
With that, the solution was easy. I reused my part 1 solution, just
tweaking the start point and end conditions. That gave me the cycle
length (which was easy to confirm).&lt;/p&gt;
&lt;p&gt;
I then found the cycle length for each starting node and foundthe
least common multiple among them.&lt;/p&gt;
&lt;p&gt;
Problem solved.&lt;/p&gt;
&lt;p&gt;
Really enjoyed this one - required some thought but unlike a couple of
earlier days am able to wrap things up before breakfast.&lt;/p&gt;
&lt;p&gt;
The complete code can be found &lt;a href=&#34;https://gitlab.com/zamansky/advent2023/-/blob/main/src/day08.clj?ref_type=heads&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Advent 2023 Day 06 - multiple approaches to a problem</title>
      <link>https://cestlaz.github.io/post/advent-2023-day-06/</link>
      <pubDate>Wed, 06 Dec 2023 09:37:31 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/advent-2023-day-06/</guid>
      <description>&lt;script type=&#34;text/javascript&#34;
  src=&#34;https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML&#34;&gt;
&lt;/script&gt;
&lt;p&gt;
I haven&amp;#39;t and probably won&amp;#39;t write up problems 2 through 5 and to be
honest, don&amp;#39;t know how many days I&amp;#39;ll go on solving this year. I
thought that &lt;a href=&#34;thought today&amp;#39;s &#34;&gt;today&amp;#39;s problem&lt;/a&gt; was interesting enough for a write up so
if you&amp;#39;re interested, keep reading. &lt;/p&gt;
&lt;p&gt;
Here&amp;#39;s a link to the problem: &lt;a href=&#34;https://adventofcode.com/2023/day/6&#34;&gt;https://adventofcode.com/2023/day/6&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;
And my solution(s) are &lt;a href=&#34;https://gitlab.com/zamansky/advent2023/-/tree/main/src?ref_type=heads&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;
What I liked about today&amp;#39;s problem is that there are various, let&amp;#39;s
say levels to the solution(s).&lt;/p&gt;
&lt;p&gt;
For part 1 you have a series of races. Each race has a time length and
the record distance. You press the &amp;#34;accelerate&amp;#34; button for as long as
you want and then release it which releases your toy boat.&lt;/p&gt;
&lt;p&gt;
In the example they give, the time is 7 and the record distance is 9.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th class=&#34;align-right&#34;&gt;Time you press&lt;/th&gt;
&lt;th class=&#34;align-right&#34;&gt;Distance traveled&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&#34;align-right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;align-right&#34;&gt;1&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;6&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;align-right&#34;&gt;2&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;10&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;align-right&#34;&gt;3&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;12&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;align-right&#34;&gt;4&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;12&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;align-right&#34;&gt;5&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;10&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;align-right&#34;&gt;6&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;6&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;align-right&#34;&gt;7&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;
So, if you press for 2, you only can travel for the remaining 5
seconds but your speed will be 2, hence 10 traveled. When you press
for 3 your speed becomes 3 but you only have 4 seconds to travel so 12
distance. etc.&lt;/p&gt;
&lt;p&gt;
You have to figure out how many &amp;#34;press&amp;#34; options yield a distance
greater than the distance they specify. In our case, they specified a
distance of 9 so there are 4 times that are greater.&lt;/p&gt;
&lt;p&gt;
You&amp;#39;re given a list of races, each with a time limit and a record
distance you&amp;#39;re trying to beat. &lt;/p&gt;
&lt;p&gt;
The first way a student might solve this is with straight
simulation. Loop over each race and then for each race, loop over the
distance to calculate the time. Straightforward and works and a &amp;#34;math
phobic&amp;#34; student can get the job done.&lt;/p&gt;
&lt;p&gt;
The second way is by using a little math. One might notice that the
distance traveled given the amount of time you &lt;strong&gt;press&lt;/strong&gt; and the &lt;strong&gt;time&lt;/strong&gt;
of the race can be calculated using \(distance = press * (time - press)\)&lt;/p&gt;
&lt;p&gt;
Then for each race, you can loop over each time and use the
equation. A small improvement and also a gentle introduction to how
some basic math can clean things up.&lt;/p&gt;
&lt;p&gt;
Finally, one might notice that using that equation we&amp;#39;re looking to
solve this relationship:&lt;/p&gt;
&lt;div class=&#34;latex-block&#34;&gt;
&lt;p&gt;\(press * (time - press) &amp;lt; record\)&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;
Which we can write as:&lt;/p&gt;
&lt;div class=&#34;equation-block&#34;&gt;
&lt;p&gt;\(press*time - press^2 &amp;lt; record\)&lt;/p&gt;
&lt;p&gt;
or&lt;/p&gt;
&lt;p&gt;
\(-press^2 + press*time - record &amp;lt; 0\)&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;
Which is a quadratic equation. If you look at the chart you&amp;#39;ll notice
that the distance traveled start at 0, go up, and then return to 0. A
parabola - the shape graphed by a quadratic.&lt;/p&gt;
&lt;p&gt;
We can map the above variable names to the more familiar
\(ax^2+bx+c=0\) representation as follows:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Our variable&lt;/th&gt;
&lt;th&gt;Quad variable&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;x&lt;/td&gt;
&lt;td&gt;press&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;a&lt;/td&gt;
&lt;td&gt;-1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;b&lt;/td&gt;
&lt;td&gt;time&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;c&lt;/td&gt;
&lt;td&gt;record&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;
If one knows the quadratic equation, they can solve for the two
roots. The solutions to our problem will be in between them. Yes, you
have to be careful on the floating point issues with solving but
it means just plugging in to a formula for each race.&lt;/p&gt;
&lt;p&gt;
The nice thing about this problem is it can be attacked in a few
different ways. It also relates the CS solution to HS math and is a
really nice way of showing how a quadratic can be useful.&lt;/p&gt;
&lt;p&gt;
Here&amp;#39;s the plan:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Have the students make a chart of time and distance  like we did up top&lt;/li&gt;
&lt;li&gt;Chart the graph&lt;/li&gt;
&lt;li&gt;Note it&amp;#39;s a parabola&lt;/li&gt;
&lt;li&gt;Derive the first equation&lt;/li&gt;
&lt;li&gt;Show how it&amp;#39;s a quadratic&lt;/li&gt;
&lt;li&gt;Hilarity ensues&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Of course you could switch the order of a few steps, do it
differently, or branch off afterwards.&lt;/p&gt;
&lt;p&gt;
Now, if a teacher doesn&amp;#39;t know the quadratic formula or about
quadratics they couldn&amp;#39;t teach this way and that&amp;#39;s a limitation and a
problem. Should a CS teacher know quadratics? Maybe, maybe not. I&amp;#39;d
personally say they should. Regardless how much and what a teacher
should know should be a bigger deal than it currently is, particularly
in CS where there is far too much teaching to the script.&lt;/p&gt;
&lt;p&gt;
That, however, is for another day.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Advent of Code 2023 Day 01</title>
      <link>https://cestlaz.github.io/post/advent-2023-day-01/</link>
      <pubDate>Fri, 01 Dec 2023 09:28:02 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/advent-2023-day-01/</guid>
      <description>&lt;p&gt;
It&amp;#39;s that time again. &lt;a href=&#34;https://adventofcode.com/&#34;&gt;Advent of Code&lt;/a&gt; 2023. A new two part programming
problem each day from now through December 25th.&lt;/p&gt;
&lt;p&gt;
Since 2015 I&amp;#39;ve looked forward to the event, taken part, and posted at
least a few write ups here on my blog. I figured this year would be
the same.&lt;/p&gt;
&lt;p&gt;
Of course, it does end up putting a crunch in my routine. Usually each
morning I wake up, work out, usually a run unless the weather&amp;#39;s bad,
have my coffee, do the puzzle, read blogs and other content over
breakfast and then I&amp;#39;m ready for the rest of my day.&lt;/p&gt;
&lt;p&gt;
Advent of Code adds another morning activity. Actually, maybe not this
year since I broke a toe last week and am not allowed to work out for
the foreseeable future.&lt;/p&gt;
&lt;p&gt;
So, this morning, I woke up, made coffee, worked on the puzzle (not
quite done yet) and then looked at &lt;a href=&#34;https://adventofcode.com/2023/day/1&#34;&gt;today&amp;#39;s problem&lt;/a&gt;. &lt;/p&gt;
&lt;p&gt;
To be honest, I was a little surprised. After reading it it seemed
somewhat harder than past day 1 questions. It might have to do with
the fact that I haven&amp;#39;t programmed at all since last years event and
really not much in the past couple of years but still.&lt;/p&gt;
&lt;p&gt;
Usually the first days problem involves some straight through
processing of the data without a whole lot of thought. After I
completed today&amp;#39;s problem I looked back on past years adn actually,
while this one is a bit more involved, it really isn&amp;#39;t that different.&lt;/p&gt;
&lt;p&gt;
Part 1 of today&amp;#39;s problem was a straightforward as past year. You&amp;#39;ve
got a bunch of lines each with some digits interspersed:&lt;/p&gt;
&lt;div class=&#34;src src-text&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1bcc2
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a1b2c3fgh4
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;etc.&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
You have to find the first and last digits in each line and take them
as a number. For the above you&amp;#39;d have 12 for the first line and 14 for
the second. You then had to sum all of those numbers up.&lt;/p&gt;
&lt;p&gt;
I thought the most straightforward way to do this was to go through
the data and keep only the digits.&lt;/p&gt;
&lt;p&gt;
While I wrote my solution in Clojure, in Python for each line you
could use an expression like this:&lt;/p&gt;
&lt;div class=&#34;src src-python&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;[x &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; l &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; x&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; x&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;9&amp;#39;&lt;/span&gt;]&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
Then you can just take the first and last items in the list, put them
together and convert to a number:&lt;/p&gt;
&lt;div class=&#34;src src-text&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;int(x[0]+x[-1])&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
Finally, add all the lines together and you&amp;#39;re done.&lt;/p&gt;
&lt;p&gt;
Part 2 threw a wrench in the works.&lt;/p&gt;
&lt;p&gt;
Now, in addition to the digits counting as digits, spelled out digits
(one, two, etc.) had to count as digits as well. Looking at the sample
data, no problem:&lt;/p&gt;
&lt;div class=&#34;src src-text&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;two1nine
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;eightwothree
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;abcone2threexyz
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;xtwone3four
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;4nineeightseven2
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;zoneight234
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;7pqrstsixteen&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
One could just replace all occurences of &amp;#34;one&amp;#34; with &amp;#34;1,&amp;#34; &amp;#34;two&amp;#34; with
&amp;#34;2,&amp;#34; and so on.&lt;/p&gt;
&lt;p&gt;
The catch was that you could also have overlapping numbers:&lt;/p&gt;
&lt;div class=&#34;src src-text&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;9oneighthree9&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
Should that be converted to &amp;#34;91839,&amp;#34; &amp;#34;91igh39,&amp;#34; &amp;#34;9on8hree9,&amp;#34; or
&amp;#34;91839.&amp;#34;&lt;/p&gt;
&lt;p&gt;
This made things trickier - first, how do you interpret it and then
how do you solve.&lt;/p&gt;
&lt;p&gt;
It turned out that you had to allow for overlapping words so the above
example would translate to 91839.&lt;/p&gt;
&lt;p&gt;
My solution, in Clojure, which you can find &lt;a href=&#34;https://gitlab.com/zamansky/advent2023/-/blob/main/src/day01.clj?ref_type=heads&#34;&gt;here&lt;/a&gt; involves using
overlapping regular expressions - I didn&amp;#39;t know about them so it took
a while to figure that out.&lt;/p&gt;
&lt;p&gt;
Another approach, at least I think would be to replace the strings one
at a time (first do the &amp;#34;one&amp;#34; occurences, then &amp;#34;two&amp;#34; etc.) but replace
them with the digit within the original text. So, &amp;#34;one&amp;#34; would be
replaced by &amp;#34;o1ne&amp;#34; or something similar. This way, if the final &amp;#34;e&amp;#34;
was next to an &amp;#34;ight&amp;#34; you&amp;#39;d get that &amp;#34;eight&amp;#34; when you replaced for
&amp;#34;eight.&amp;#34;&lt;/p&gt;
&lt;p&gt;
All of this isn&amp;#39;t too bad but probably required more thought than your
typical advent of code day 1.&lt;/p&gt;
&lt;p&gt;
Still, a fun morning activity.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Learning Elisp 15 - cleaning up our minor mode</title>
      <link>https://cestlaz.github.io/post/learning-elisp-15/</link>
      <pubDate>Wed, 29 Nov 2023 11:44:55 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/learning-elisp-15/</guid>
      <description>
&lt;p&gt;
Today we&amp;#39;re finishing off our emoji project. This video covers two
quick things.&lt;/p&gt;
&lt;p&gt;
The first is how we can make the mode use either of our replacement
methods - one that actually replaces the text with the emoji and the
other that uses text properties to overlay the emoji without changing
the text.&lt;/p&gt;
&lt;p&gt;
This is done with a variable that we can set telling us which function
to call. We used one named &lt;code&gt;emoji-replace-by-insert&lt;/code&gt;. If it&amp;#39;s &lt;code&gt;t&lt;/code&gt; (true)
we use the replace method, if it&amp;#39;s &lt;code&gt;nil&lt;/code&gt; we use the overlay one.&lt;/p&gt;
&lt;p&gt;
We could just use an if statement in our define minor mode but I
decided to use this as an opportunity to show how we can assign a
function to a variable which might be new to some readers/viewers.&lt;/p&gt;
&lt;p&gt;
Let&amp;#39;s say we want to create a variable named &lt;code&gt;my_function_variable&lt;/code&gt;
and have it stand in for, let&amp;#39;s say the built in &lt;code&gt;1+&lt;/code&gt; function that
increments a value. We could do a simple assignment:&lt;/p&gt;
&lt;div class=&#34;src src-emacs-lisp&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  (setq my_function_variable &lt;span style=&#34;color:#a6e22e&#34;&gt;#&amp;#39;1+&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
Unfortunately, in Elisp we can&amp;#39;t just call our new variable as a
function straight out but rather must call it using funcall, like
this:&lt;/p&gt;
&lt;div class=&#34;src src-emacs-lisp&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  (&lt;span style=&#34;color:#a6e22e&#34;&gt;funcall&lt;/span&gt; my_variable_function &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;) &lt;span style=&#34;color:#75715e&#34;&gt;;; this returns 6, just like (1+ 5) would&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
In other languages we could just call the function directly. In the
case of defining our mode, we can just throw in the variable once we
assign it. Here&amp;#39;s the code:&lt;/p&gt;
&lt;div class=&#34;src src-eamcs-lisp&#34;&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-eamcs-lisp&#34; data-lang=&#34;eamcs-lisp&#34;&gt;(define-minor-mode emoji-replace-mode
  &amp;#34;fill in the docstring later&amp;#34;
  :lighter &amp;#34; ER&amp;#34;
  (let ((func (if emoji-replace-by-insert
		  #&amp;#39;emoji-replace-insert
		#&amp;#39;emoji-replace-overlay)))
  (if emoji-replace-mode
      (add-hook &amp;#39;after-change-functions func nil t)
    (remove-hook &amp;#39;after-change-functions func))))&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;
We use the &lt;code&gt;let&lt;/code&gt; form to assign our variable &lt;code&gt;func&lt;/code&gt; to the appropriate
function and then just pass along &lt;code&gt;func&lt;/code&gt; when we use &lt;code&gt;add-hook&lt;/code&gt; and
&lt;code&gt;remove-hook&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;
That&amp;#39;s it.&lt;/p&gt;
&lt;p&gt;
The other thing we cover involves cleaning up our variables. In
earlier videos we used &lt;code&gt;setq&lt;/code&gt; but also showed &lt;code&gt;defvar&lt;/code&gt; with the
practical difference being that &lt;code&gt;defvar&lt;/code&gt; had a docstring.&lt;/p&gt;
&lt;p&gt;
In this video, we look at &lt;code&gt;defcustom&lt;/code&gt; which looks like &lt;code&gt;defvar&lt;/code&gt; but
also lets you change the variable value using emacs&amp;#39;
&lt;code&gt;customize-variable&lt;/code&gt; command and interface. Further, if we do change
the variable this way and save it through the interface, it will save
the change in your &lt;code&gt;init.el&lt;/code&gt; file for future use. It&amp;#39;s a nice touch
when making a complete &amp;#34;package.&amp;#34;&lt;/p&gt;
&lt;p&gt;
That&amp;#39;s it for this project. I might do one more on setting things up
for installation using straight or something similar. If not, it&amp;#39;ll be
on to the next project which I think will be a thesaurus moed.&lt;/p&gt;
&lt;div id=&#34;outline-container-headline-1&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-1&#34;&gt;
Code:
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-1&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
The code for the series is still up here:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://gitlab.com/zamansky/learning-elisp-code&#34;&gt;https://gitlab.com/zamansky/learning-elisp-code&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-2&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-2&#34;&gt;
The videos:
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-2&#34; class=&#34;outline-text-2&#34;&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/Y9TPHo33Y1Y?si=fG4a5XbFnx6yS11J&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;
Video link: &lt;a href=&#34;https://www.youtube.com/watch?v=Y9TPHo33Y1Y&#34;&gt;https://www.youtube.com/watch?v=Y9TPHo33Y1Y&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Bringing Politics to your classroom?</title>
      <link>https://cestlaz.github.io/post/bringing-politics-to-class/</link>
      <pubDate>Wed, 22 Nov 2023 13:54:13 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/bringing-politics-to-class/</guid>
      <description>&lt;p&gt;
While perusing Reddit this morning, waiting for the stuffing to bake,
I came across &lt;a href=&#34;https://www.reddit.com/r/Professors/comments/1819lan/does_anyone_know_more_about_what_happened_at/&#34;&gt;this post&lt;/a&gt;. Apparently there was a todo at Berkeley
involving a CS instructor. Specifically a grad student teaching their
data structures course.&lt;/p&gt;
&lt;p&gt;
You can link from the first post to the &lt;a href=&#34;https://www.reddit.com/r/berkeley/comments/180yq0g/thoughts/?share_id=SOixfq7Qa35iw-TwjBLi1&#34;&gt;Berkeley subreddit post&lt;/a&gt; and can
listen to the &lt;a href=&#34;https://www.youtube.com/watch?v=wf63XKv77Mo&#34;&gt;video&lt;/a&gt; if you want.&lt;/p&gt;
&lt;p&gt;
It seems that this was the last day of class and the instructor
decided to end class early, announce that he was going to share some
of his own views so students should feel free to leave and then
proceeded to give a very one sided diatribe on the Israel/Palestine
situation and to say one sided is me being nice. The instructor said
that his opinions were his own but also noted that this would be his
last chance to share them. He also made a small attempt to tie it back
to CS citing ethics issues albeit in a general sense and not tied in
to the class &lt;a href=&#34;https://fa23.datastructur.es/index.html&#34;&gt;syllabus&lt;/a&gt;. &lt;/p&gt;
&lt;p&gt;
This raises an important question. Should teachers bring  politics
into their classrooms and if so, how and when.&lt;/p&gt;
&lt;p&gt;
In my opinion, the instructor, in this case was extremely out of line
and I&amp;#39;m not just saying this because my views on the issue are very
much on the other side to his. I am in general, very pro Israel and
believe that much of what we&amp;#39;re seeing as pro-Palestinian  PR is in
fact antisemitic. The test to me is one, will they call out the
barbarism of Hamas, two, will they acknowledge that Jews are also
indigenous to the region and have a right to a Jewish state, and
three, will they call out with equal vigor anti arab actions brought
on by non-Jewish actors. Usually, but not always, the protesters fail
on all three counts. I also feel that it&amp;#39;s important for me to state
that I&amp;#39;m very much against Israel&amp;#39;s current right wing government and
many of their policies and they likewise need to be held accountable.&lt;/p&gt;
&lt;p&gt;
Back to this Berkeley situation.&lt;/p&gt;
&lt;p&gt;
In this case, the instructor was way out of line. Why?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;He&amp;#39;s a CS PhD and has no actual expertise in the subject.&lt;/li&gt;
&lt;li&gt;By ending class early, he used class time as well as his classroom
to share his political views. &lt;/li&gt;
&lt;li&gt;Even though he said the class was over and students could leave an
instructor is in a position of power and students likely felt
pressure to stay.&lt;/li&gt;
&lt;li&gt;Similarly, his words carry more weight as he&amp;#39;s in a position of
power even though his words show only that he&amp;#39;s been exposed to one
sides propaganda (note, that this means he hasn&amp;#39;t heard either the
other side&amp;#39;s propaganda nor factual nor history information).  Of
course I could be wrong on this one but his words certainly sound
like I&amp;#39;m right.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Now, if this wasn&amp;#39;t on school time or property it might be a different
story. Similarly if this was really directly tied into a lesson it
might be different. Most importantly, if he presented all sides fairly
with factual information it might be different.&lt;/p&gt;
&lt;p&gt;
Alas, it wasn&amp;#39;t.&lt;/p&gt;
&lt;p&gt;
If it were, though, it would still be tricky. I doubt I would have
shared my recent Israel/Palestine post or maybe even this one had I
not recently retired as it might influence the one or two stray
students who might happen upon this blog.&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s also tricky because there aren&amp;#39;t always two sides. I am of the
opinion, for instance that the current Republican party is a serious
threat to American democracy. There aren&amp;#39;t two sides. There&amp;#39;s no
equivalence between &amp;#34;we want to raise minimum wage&amp;#34; on one side and
&amp;#34;we think LGBTQ people are a threat.&amp;#34; Sorry. No two sides.&lt;/p&gt;
&lt;p&gt;
Many issues, though are in fact nuanced even if the scales are weighted
more on one side than the other.&lt;/p&gt;
&lt;p&gt;
The actual Israel/Palestine issue is one of those issues and in this
instance the instructor clearly overstepped their bounds.&lt;/p&gt;
&lt;p&gt;
If I were to raise the issue in class (and I probably wouldn&amp;#39;t given
what I teach) I&amp;#39;d have to share historic context and resources from
both sides, share my biases, and perhaps bring in someone to present
the opposing side if I felt I couldn&amp;#39;t be fair.&lt;/p&gt;
&lt;p&gt;
While not politics, I&amp;#39;ve always tried to take that stance on any
subjective issue I teach. Not as serious at all but when talking
coding style, I explain what I do, why I do it, what other people do
and why and then it&amp;#39;s up to the students to decide.&lt;/p&gt;
&lt;p&gt;
&amp;#34;Non-CS&amp;#34; issues certainly have their place in CS classes. We should be
talking about ethics and equity and that should be across all our
classes. We should also bring topical issues and other fields into our
classes when we can. When we do, though we have to be careful that
we&amp;#39;re being teachers and not propagandists. &lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Learning Elisp 14 - defining a minor mode</title>
      <link>https://cestlaz.github.io/post/learning-elisp-14/</link>
      <pubDate>Tue, 21 Nov 2023 14:47:19 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/learning-elisp-14/</guid>
      <description>
&lt;p&gt;
Another short one today. We&amp;#39;re taking the code we already wrote and
making a minor mode out of it.&lt;/p&gt;
&lt;p&gt;
In Emacs, a minor mode is a set of functionality that you can turn on
(or off) in a buffer (or globally). For example, the built in
&lt;code&gt;auto-fill-mode&lt;/code&gt; can be turned on in a buffer will automatically add
newlines when your line gets &amp;#34;too long.&amp;#34; You can see the modes that
you currently have on using the &lt;code&gt;describe-mode&lt;/code&gt; function, usually
bound to &lt;code&gt;C-h m&lt;/code&gt;. I also currently have &lt;code&gt;Hungry-Delete&lt;/code&gt; mode as well
as &lt;code&gt;Flyspell&lt;/code&gt; and a few others. Hungry-Delete automatically deletes
multiple whitespace characters all at once so if I have five spaces
between words, I can just delete or kill once and they&amp;#39;ll all go
away. Flyspell adds auto spell checking.&lt;/p&gt;
&lt;p&gt;
Minor modes can be turned on manually using &lt;code&gt;M-x whatever-mode&lt;/code&gt;
command which toggles whatever mode on and off or automatically based
on hooks. For example, when you load a C file, I go into c mode which
is a major mode (more about them some other time) as well as these
minor modes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Auto-Save&lt;/li&gt;
&lt;li&gt;Corfu&lt;/li&gt;
&lt;li&gt;Eglot–Managed&lt;/li&gt;
&lt;li&gt;Eldoc&lt;/li&gt;
&lt;li&gt;Flymake&lt;/li&gt;
&lt;li&gt;Font-Lock&lt;/li&gt;
&lt;li&gt;Hungry-Delete&lt;/li&gt;
&lt;li&gt;Yas&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Here&amp;#39;s specific code we go over in the video to turn on and off our new
mode:&lt;/p&gt;
&lt;div class=&#34;src src-emacs-lisp&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(define-minor-mode emoji-replace-mode
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;fill in the docstring later&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  :lighter &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; ER&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  (if emoji-replace-mode
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      (add-hook &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;after-change-functions&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;#&amp;#39;&lt;/span&gt;emoji-replace-insert &lt;span style=&#34;color:#66d9ef&#34;&gt;nil&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;t&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    (remove-hook &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;after-change-functions&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;#&amp;#39;&lt;/span&gt;emoji-replace-insert)))&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
The macro &lt;code&gt;define-minor-mode&lt;/code&gt; does all the magic. The key is that it
defines a &amp;#34;mode variable&amp;#34; - in this case named &lt;code&gt;emoji-replace-mode&lt;/code&gt;
which tells us if we&amp;#39;re turning the mode on or off. Based on that, we
either add or remove our hook. The &lt;strong&gt;:lighter &amp;#34; ER&amp;#34;&lt;/strong&gt; sets what to show
in the mode line.&lt;/p&gt;
&lt;p&gt;
We&amp;#39;re just scratching the surface today - just setting up the
basics. Later we&amp;#39;ll see how to clean up the variables we need for the
mode - specifically our list of emojis as well as how we can select
either of our emoji replacement methods - overlay a text property or
replace the text. We&amp;#39;ll also see about setting up key combos for a
mode in our next elisp project.&lt;/p&gt;
&lt;p&gt;
That&amp;#39;s it for today.&lt;/p&gt;
&lt;p&gt;
Enjoy.&lt;/p&gt;
&lt;div id=&#34;outline-container-headline-1&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-1&#34;&gt;
Code:
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-1&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
The code for the series is still up here:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://gitlab.com/zamansky/learning-elisp-code&#34;&gt;https://gitlab.com/zamansky/learning-elisp-code&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-2&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-2&#34;&gt;
The videos:
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-2&#34; class=&#34;outline-text-2&#34;&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/YBV9czwq-nw?si=6KV1To4h38Mr977C&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;
Video link: &lt;a href=&#34;https://www.youtube.com/watch?v=YBV9czwq-nw&#34;&gt;https://www.youtube.com/watch?v=YBV9czwq-nw&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Repl.it, Coding Rooms and Twitter - the loss of free services</title>
      <link>https://cestlaz.github.io/post/free-services/</link>
      <pubDate>Thu, 16 Nov 2023 14:08:47 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/free-services/</guid>
      <description>&lt;p&gt;
A number of months ago, the K12 CS Ed community was abuzz. It seems
that Coding Rooms - an online collaboration and coding platform was
closing their free teacher tier. I was going to write about it then
but didn&amp;#39;t get to it.&lt;/p&gt;
&lt;p&gt;
Some time later, I noticed some complaints about teacher
throttling. Again, meant to write but it didn&amp;#39;t happen;&lt;/p&gt;
&lt;p&gt;
The other day though, there was another disturbance in the force as
teachers started commiserating about Repl.it closing down the
teacher teams part of their platform. This was accompanied with
complaints about the nerfing of their free tier which apparently has
been ongoing. I thought &amp;#34;wait, didn&amp;#39;t this happen already?&amp;#34; but
remembered that the earlier one was Coding Rooms.&lt;/p&gt;
&lt;p&gt;
Now, I never really used Coding Rooms much - when they launched I was
mid semester and had already settled in on my tool set. It looked like
they had some cool things and at the time, they were talking the
&amp;#34;supporting teachers&amp;#34; game but it never made sense for me to switch
over to them for my platform.&lt;/p&gt;
&lt;p&gt;
Twitter? Musk pretty much made it worthless months ago. I&amp;#39;ll still pop
on at times but mostly what&amp;#39;s I&amp;#39;m seeing there is extremist
propaganda.&lt;/p&gt;
&lt;p&gt;
Repl.it is another story. I&amp;#39;ve played with it on and off for years and
used it with my online classes. Rather, I promoted it as a recommended
coding platform for my online classes. I never used their teams for
education features. Since my classes and I lived through the nerfing
of the free repl phase and it wasn&amp;#39;t all that bad for us, I guess I
haven&amp;#39;t really be affected by these changes but at least it&amp;#39;s a
product I&amp;#39;ve been using and know fairly well.&lt;/p&gt;
&lt;p&gt;
On the one hand, this sucks for teachers - particularly the fact that
Repl.it just announced the change mid semester. On the other hand,
what do you expect for nothing? Rubber Biscuit?&lt;/p&gt;
&lt;p&gt;
Coding Rooms, Twitter, and Repl.it are all companies working to build
market share and make money (okay, maybe not Twitter :-) ). They don&amp;#39;t
owe anything to any of us for free and there was never any guarantee
that free would remain free. If you&amp;#39;ve been looking we&amp;#39;ve seen the
free tier for web services disappear now for years. It used to be that
every API had a free tier. Now you only get a small number of starter
credits. Heroku and other hosting sites also used to have free tiers
or made it ridiculously easy to get credits. In that sense, the
overall writing has been on the wall.&lt;/p&gt;
&lt;p&gt;
On the other hand, GitHub maintains free services. Free though as in
we&amp;#39;re not paying money. All our code I&amp;#39;m sure is being used to train
their AI. Now, for GitHub, I&amp;#39;m not saying they&amp;#39;re better or worse. I
used to be a big GitHub supporter - GitHub for Education in particular
but now all my friends their are gone so I&amp;#39;m feeling like more of a
GitLab guy these days.&lt;/p&gt;
&lt;p&gt;
Anyway, I also don&amp;#39;t blame teachers. Teachers are in an impossible
position. They need tools for their kids to work with. Some have been
forced to use Chromebooks so no local installations. Others are
hampered by internal IT policies, although IT people are frequently
misunderstood and demonized, and of course budgets, particularly in
public schools are always an issue.&lt;/p&gt;
&lt;p&gt;
Still, as teachers, we can and probably should do better. We
frequently use things because they&amp;#39;re convenient rather than
right. Most of the chatter I saw about Repl.it was in the assorted CS
Ed Facebook groups. Facebook is a closed private platform. Zuck can
make some policy decision and it all goes away yet we use it as a
community platform because it&amp;#39;s convenient. On the other hand, a bit
of the discourse was on the APCS ListServ. I think that listserv might
be run by the College Board so that&amp;#39;s not good, but at least, in
theory with a listserv, you&amp;#39;ve got everyone&amp;#39;s email address and can
migrate to other platforms.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;d love to see more of what we do on open source and open platforms.
This blog is hosted on GitHub but it&amp;#39;s all plain text and built with
open source tools. I&amp;#39;ve got a copy of it all locally and can migrate
it or self host it easily. Speaking of blogs, I miss the old days
where there were more CS Ed bloggers and more discourse on said
blogs. Yes it was more distributed but it was open. Nowadays I rarely
see new CS Ed blog posts in my feed which is a shame.&lt;/p&gt;
&lt;p&gt;
In any event I don&amp;#39;t see anything changing - over the last few years,
when people I speak to talk about using a new communication platform,
they default to Discord. Personally, I&amp;#39;ve never been a fan of it but
in any event, it&amp;#39;s another closed silo, so is Slack for that matter.&lt;/p&gt;
&lt;p&gt;
I lament, but I also know Usenet news is never coming back.&lt;/p&gt;
&lt;p&gt;
So, that&amp;#39;s where we are. Teachers will find another free something and
use that for a while, then it will go away. Those that have the
resources will use either free or open source tools or in some cases
commercial ones but it&amp;#39;s doubtful that our schools will ever get the
funding they need so that this is no longer an issue.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Learning Elisp 13 - Text Properties</title>
      <link>https://cestlaz.github.io/post/learning-elisp-13/</link>
      <pubDate>Wed, 08 Nov 2023 11:09:46 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/learning-elisp-13/</guid>
      <description>
&lt;p&gt;
Today&amp;#39;s a short 10 minute video as we continue to work on the emoji
project.&lt;/p&gt;
&lt;p&gt;
In the last episode we replaced text in the form :emoji-name: with the
emoji. This time, we&amp;#39;re doing it a little differently - we&amp;#39;re going to
overlay the text with the emoji. This way we see the emoji but the
underlying text is still present. This is kind of like when
programming in a language that supports &lt;code&gt;lambda&lt;/code&gt;, in many editors you
can type &lt;code&gt;lambda&lt;/code&gt; but it appears as the symbol: λ (note that the
previous symbol is not an emoji but was entered using the RFC1345
input method).&lt;/p&gt;
&lt;p&gt;
The important difference with this method is that when you save and
later load the file, the original characters are still there the
symbols are only visual sugar.&lt;/p&gt;
&lt;p&gt;
We accomplish this overlaying with text properties. Specifically the
&lt;code&gt;display&lt;/code&gt; property. Here&amp;#39;s a sample call:&lt;/p&gt;
&lt;div class=&#34;src src-emacs-lisp&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  (&lt;span style=&#34;color:#a6e22e&#34;&gt;put-text-property&lt;/span&gt; beginning end &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;display&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;WHAT TO DISPLAY&amp;#34;&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
The first two parameters - &lt;code&gt;beginning&lt;/code&gt; and &lt;code&gt;end&lt;/code&gt; form the region where
you&amp;#39;re setting the property. Recall that the upper left of a buffer is
location 1 and it increments as you move into the document. So, for
example, if your buffer had:&lt;/p&gt;
&lt;div class=&#34;src src-text&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Here are a couple of lines of
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;text in an emacs buffer&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
and we used this call:&lt;/p&gt;
&lt;div class=&#34;src src-emacs-lisp&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  (&lt;span style=&#34;color:#a6e22e&#34;&gt;put-text-property&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;display&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;OVERLAY&amp;#34;&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
your buffer would look like this:&lt;/p&gt;
&lt;div class=&#34;src src-text&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Here OVERLAY a couple of lines of
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;text in an emacs buffer&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
If you add text before OVERLAY it shifts over just as the original
text would. If you save the buffer though, the original text (are) is
what&amp;#39;s saved.&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s pretty cool.&lt;/p&gt;
&lt;p&gt;
The video shows how we can use this to overlay our emojis.&lt;/p&gt;
&lt;p&gt;
Next time, we&amp;#39;ll turn it into a mode.&lt;/p&gt;
&lt;div id=&#34;outline-container-headline-1&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-1&#34;&gt;
Code:
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-1&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
The code for the series is still up here:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://gitlab.com/zamansky/learning-elisp-code&#34;&gt;https://gitlab.com/zamansky/learning-elisp-code&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-2&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-2&#34;&gt;
The videos:
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-2&#34; class=&#34;outline-text-2&#34;&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/x9eFxYS-hzw?si=BGFC_bmYJlDYqex6&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;
Video link: &lt;a href=&#34;https://www.youtube.com/watch?v=x9eFxYS-hzw&#34;&gt;https://www.youtube.com/watch?v=x9eFxYS-hzw&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Should we be using printed textbooks?</title>
      <link>https://cestlaz.github.io/post/text-books/</link>
      <pubDate>Tue, 07 Nov 2023 08:13:44 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/text-books/</guid>
      <description>&lt;p&gt;
A couple of weeks ago a friend posted to Social media asking for a
text book recommendation. As it happened, the one he had been using
for his class was no longer going to be published. One of the replies 
was strongly against using printed text books stating that online
resources are superior.&lt;/p&gt;
&lt;p&gt;
I thought this was worth exploring.&lt;/p&gt;
&lt;p&gt;
First thing worth discussing is cost. For public K12 students this
generally isn&amp;#39;t an issue. Schools receive (or should receive) funds
for textbooks. Students sign them out at the beginning of the semester
in each class and return them at the end. To be honest, I don&amp;#39;t know
if any of this is now being done electronically or not but the big
issue is finding the right textbook. I wrote about that &lt;a href=&#34;https://cestlaz.github.io/posts/textbooks/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;
At the college level, costs become an issue. Textbooks - be they
printed or online can be expensive and even the rental price can be a
reach for low income students. I&amp;#39;ve seen text books being sold for
well over one hundred dollars for really no other reason than because
they can.&lt;/p&gt;
&lt;p&gt;
Taking publisher greed out of the equation, I do believe that authors
should be fairly compensated for their work so I&amp;#39;m not of the school
of thought that all educational resources should be free but I&amp;#39;m also
sensitive to educational costs out of control.&lt;/p&gt;
&lt;p&gt;
For the sake of this post, let&amp;#39;s take all that out of the equation and
just focus on textbook vs online resources and pretend the costs are
the same.&lt;/p&gt;
&lt;p&gt;
The principal argument against textbooks and for online resources is
that textbooks quickly become outdated while online resources are
perpetually maintained. This might be true for fast changing APIs or
rapidly evolving technologies like Javascript build systems but it
generally doesn&amp;#39;t hold true for the materials covered in many CS
classes.&lt;/p&gt;
&lt;p&gt;
Take a data structures or algorithms text. While a standard text like
&lt;a href=&#34;https://en.wikipedia.org/wiki/Introduction_to_Algorithms&#34;&gt;CLRS&lt;/a&gt; has had multiple editions over the years, a single class won&amp;#39;t
cover the full text and the text is at its core, the same. That is to
say that CLRS has easily been useful and appropriate as a class text
for at this point, decades. The same can also be said for most algo
and DS texts. The limiting factor in terms of longevity would really
be implementation language and possibly programming style.&lt;/p&gt;
&lt;p&gt;
For data structures and algorithms, a printed text could also be
superior to an online resource - online resources on these topics
usually just present finished code and rarely developmental exposition
which can be extremely helpful to a student. A printed text also has
another advantage over even an online textbook - easier bookmarking
and random access. You can&amp;#39;t easily flip back and forth online.&lt;/p&gt;
&lt;p&gt;
What about programming language based classes. I recently looked over
some older programming books I have. C, C++, Go, Clojure, Java,
Javascript. Ocaml, Haskel, Lisp, Racket, and Prolog. While the books
vary in overall quality from meh to great they&amp;#39;d all still be
perfectly servicable as class texts. Languages just don&amp;#39;t change that
quickly.&lt;/p&gt;
&lt;p&gt;
Neither do most tech topics. Sure, you might get unlucky and purchase
a text book right before a major change and there are a few cutting
edge topics that you might want to avoid but by and large a CS text
should give you five to ten years easy.&lt;/p&gt;
&lt;p&gt;
Now, this isn&amp;#39;t to say that an online textbook can&amp;#39;t be great or even
superior in some ways. Online texts can be more interactive for
instance and can be updated with new assignments and projects and the
exposition can be easily updated if needs be.&lt;/p&gt;
&lt;p&gt;
All this is to say that both printed textbooks, online texts, and
other online resources can all be great and can all be important and
if cost isn&amp;#39;t an issue, I think having a printed text can be a huge
benefit to a kid - another point of view to complement the
instructor. That said, due to cost, I ended up using online resources
extensively over my last few years of teaching.&lt;/p&gt;
&lt;p&gt;
As a final note, for online texts, do check out &lt;a href=&#34;https://runestone.academy/runestone/default/user/login?_next=/runestone/default/index&#34;&gt;Runestone&lt;/a&gt; - they
provide a number of high quality online texts for free. They don&amp;#39;t
cover everything but for what they do, they have some great stuff.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Israel, Palestine, and antisemitism</title>
      <link>https://cestlaz.github.io/post/israel-palestine/</link>
      <pubDate>Thu, 02 Nov 2023 16:17:14 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/israel-palestine/</guid>
      <description>&lt;p&gt;
I was born and bred in NYC. Went to public school and worked mostly in
the public sector. I&amp;#39;ve lived my life among one of the most diverse
populations in the world. As a Jew, I&amp;#39;ve also only lived in a
communities pn which Jews, though a minority, are accepted and
frequently assimilated. Throughout my life I&amp;#39;ve rarely faced
antisemitism personally and feel that even in the greater USA, public occurrences of
antisemitism have been relatively infrequent.&lt;/p&gt;
&lt;p&gt;
Not recently.&lt;/p&gt;
&lt;p&gt;
Since the Hamas atrocities of October 7, to my view, antisemitism has
reared its ugly head big time. Not merely the blatant calls for my
people&amp;#39;s extermination from neo-nazis and the like but more subtle
antisemitism cached in the call for Palestinian liberation.&lt;/p&gt;
&lt;p&gt;
Before you get too upset, let me be clear - Israel has a right wing
problem, a Netenyahu problem and for years, pro Palestinian voices on
settlements have been ignored. Many Jews, including myself have been
vocal for a while against some current and past Israeli policies but
these calls aren&amp;#39;t antisemitism. I&amp;#39;m talking about the &amp;#34;pro
Palestinian&amp;#34; talking points and rallies.&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ll go into more details but the TL;DR is pretty simple. If there&amp;#39;s a
rally and it only talks about an immediate cease fire or other Israeli
acquiescence without calling for the release of the hostages and the
end of Hamas&amp;#39; terrorist actions then that rally is antisemetic.&lt;/p&gt;
&lt;p&gt;
When the slogans and signs read &amp;#34;from the river to the sea,&amp;#34; that&amp;#39;s
antisemitism - it&amp;#39;s echoing the age old call to wipe the Jews from the
face of the earth.&lt;/p&gt;
&lt;p&gt;
Even when some people &amp;#34;try&amp;#34; to be balanced and say that Israel has a
right to defend itself, they follow up with a call for Israel to
immediately stop any retaliatory or defensive action knowing that
history has shown that this only empowers terrorists like Hamas. The
talking heads never actual give a reasonable course of action for
Israel other than lay down your arms which reminds me of the line
originally attributed to Golda Meir &amp;#34;If the Arabs put down their
weapons today, there would be no more violence. If the Jews put down
there weapons today, there would be no more Israel.&amp;#34;&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s also worth looking at recent history. Multiple times,
Palestinians were offered a 2 state solution going back to the late
forties when modern Israel began. The Arab nations thought it better
to decline and try to destroy the Jews. This history repeated time and
again most notably at the turn of the century when Arafat said no to a
deal that would have given the Palestinians 95% of what they wanted.&lt;/p&gt;
&lt;p&gt;
But let&amp;#39;s get back to the antisemitism.&lt;/p&gt;
&lt;p&gt;
Beyond what I&amp;#39;ve already said you have to consider why nobody calls
out the Arab nations on their treatment of Palestinians (or even Hamas
who would rather build tunnels and rockets to kill Jews rather than
build infrastructure to support Palestinians). From 1947 to 1967, Arab
nations controlled Gaza and the West Bank. Where was the outcry for
Palestinian Independence?&lt;/p&gt;
&lt;p&gt;
Some people say that the Palestinians elected Hamas. Others note that
there hasn&amp;#39;t been a free vote in Gaza since 2006. Okay, but then why
aren&amp;#39;t there protests and rallies about that?&lt;/p&gt;
&lt;p&gt;
It seems that if you&amp;#39;re Arab (or I guess European) you can abuse and
kill Palestinians and it&amp;#39;s okay, it&amp;#39;s only an issue if you&amp;#39;re Jewish.&lt;/p&gt;
&lt;p&gt;
This is all to say that from my point of view, a HUGE amount of the
pro Palestine posturing is thinly veiled antisemitism - no more, no
less. If people truly cared about Palestine and a two state solution
(as I do) they&amp;#39;d call out Hamas, work to rid Palestine of them, work
to establish self rule and at the same time call out Israel&amp;#39;s current
leadership and policies.&lt;/p&gt;
&lt;p&gt;
People have to be more aware of this and the inherent dangers but I
fear ignorance and hate are more the order of the day.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Learning Elisp 12 - Emoji Replace part 2</title>
      <link>https://cestlaz.github.io/post/learning-elisp-12/</link>
      <pubDate>Mon, 30 Oct 2023 13:15:42 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/learning-elisp-12/</guid>
      <description>
&lt;p&gt;
Here&amp;#39;s the next part of our emoji project. In this video, we make the
magic automatically happen. That is, when the user types an emoji in
quotes - like 🐘, Emacs will automatically replace it with the
emoji, 🐘.&lt;/p&gt;
&lt;p&gt;
Now, mind you, the way we&amp;#39;re doing it isn&amp;#39;t the best way. In fact,
after I posted the previous video, Micky Peterson linked to an article
he wrote on using &lt;a href=&#34;https://www.masteringemacs.org/article/inserting-emoji-input-methods&#34;&gt;input methods&lt;/a&gt; to insert emoji. Using input methods
would be much cleaner but this series isn&amp;#39;t necessarily about doing
something the best way but rather exploring and playing with elisp in
a way that hopefully will empower readers and viewers to build
whatever they need.&lt;/p&gt;
&lt;p&gt;
The magic to making our version work is by using Emacs Hooks. You can
think of hooks like events if you&amp;#39;ve done GUI or web programming. In a
web interface you might make a button and set an event so that
whenever the button is pressed some function is called or you make a
text input field and set an event so that whenever the content of that
input field changes, some function is called.&lt;/p&gt;
&lt;p&gt;
Hooks are like that and there are tons fo them.&lt;/p&gt;
&lt;p&gt;
In the video, I use this simple example:&lt;/p&gt;
&lt;div class=&#34;src src-emacs-lisp&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  (defun redact ()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    (save-excursion
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     (&lt;span style=&#34;color:#a6e22e&#34;&gt;goto-char&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     (replace-string &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;secret&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;REDACTED&amp;#34;&lt;/span&gt;)))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  (add-hook &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;before-save-hook&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;#&amp;#39;&lt;/span&gt;redact)&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
The function simply replaces all occurrences of the string &amp;#34;secret&amp;#34;
and changes it to &amp;#34;REDACTED.&amp;#34; The before-save-hook runs associated
functions before saving a file so in the above code sample, once the
hook is added, whenever you save a file, the redact function will run
and all occurrences of &amp;#34;secret&amp;#34; will be changed.&lt;/p&gt;
&lt;p&gt;
This is a silly example but a more useful one for this hook would be
to run a code autoformatter.&lt;/p&gt;
&lt;p&gt;
To remove the hook we would use:&lt;/p&gt;
&lt;div class=&#34;src src-emacs-lisp&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  (remove-hook &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;before-save-function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;#&amp;#39;&lt;/span&gt;redact)&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
Note that the &lt;code&gt;add-hook&lt;/code&gt; function also has options to decide if the
hook is for the buffer or everywhere.&lt;/p&gt;
&lt;p&gt;
For the emoji project, we&amp;#39;ll use the &lt;code&gt;after-change-functions&lt;/code&gt; hook
which lets us call a function whenever the buffer is changed.&lt;/p&gt;
&lt;p&gt;
The video goes into all the details. &lt;/p&gt;
&lt;p&gt;
Next up, we&amp;#39;ll see how we can overlay an emoji over text instead of
replacing.&lt;/p&gt;
&lt;div id=&#34;outline-container-headline-1&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-1&#34;&gt;
Code:
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-1&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
The code for the series is still up here:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://gitlab.com/zamansky/learning-elisp-code&#34;&gt;https://gitlab.com/zamansky/learning-elisp-code&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-2&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-2&#34;&gt;
The videos:
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-2&#34; class=&#34;outline-text-2&#34;&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34;
src=&#34;https://www.youtube.com/embed/6h4KngDdsbo?si=BUqK5052J4GgLWgP&#34;
title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer;
autoplay; clipboard-write; encrypted-media; gyroscope;
picture-in-picture; web-share&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;
Video link: &lt;a href=&#34;https://www.youtube.com/watch?v=6h4KngDdsbo&#34;&gt;https://www.youtube.com/watch?v=6h4KngDdsbo&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Learning Elisp 11 - Emoji Replace Part 1</title>
      <link>https://cestlaz.github.io/post/learning-elisp-11/</link>
      <pubDate>Wed, 18 Oct 2023 13:57:18 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/learning-elisp-11/</guid>
      <description>
&lt;p&gt;
Back from my trip and ready to continue the elisp series.&lt;/p&gt;
&lt;p&gt;
Today we&amp;#39;re starting our emoji project. When we&amp;#39;re done we&amp;#39;ll have a
minor mode where we can type in something like 🐘 in a buffer
and Emacs will replace it with the elephant emoji 🐘. That&amp;#39;s part
one. We&amp;#39;ll then learn how to overlay the emoji over the text so that
while it will appear as the emoji (🐘) the actual text of 🐘
will still be in the buffer and file if you save it. The former,
replacing the text with the emoji is useful if you actually want the
emoji in the file. I&amp;#39;m using it to create emoji based polls that I can
cut and paste into Slack or Zulip. The overlay idea is useful when you
want the emoji to display for visual effect but you don&amp;#39;t want it in
the actual file.&lt;/p&gt;
&lt;p&gt;
There&amp;#39;s no new elisp in this first video - we&amp;#39;re going to put together
a function that sees if you type an emoji name before the current
point (cursor) and if so, replaces it with the emoji. The function
pulls together a lot of what was covered in earlier videos.&lt;/p&gt;
&lt;p&gt;
So, no code explanations here. The second video will deal with hooks -
the way we&amp;#39;ll make this all happen &amp;#34;automatically&amp;#34; and then we&amp;#39;ll
cover the overlays and then finally making minor mode and
configuration.&lt;/p&gt;
&lt;p&gt;
Enjoy.&lt;/p&gt;
&lt;div id=&#34;outline-container-headline-1&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-1&#34;&gt;
Code:
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-1&#34; class=&#34;outline-text-2&#34;&gt;
&lt;p&gt;
The code for the series is still up here:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://gitlab.com/zamansky/learning-elisp-code&#34;&gt;https://gitlab.com/zamansky/learning-elisp-code&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-headline-2&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;headline-2&#34;&gt;
The videos:
&lt;/h2&gt;
&lt;div id=&#34;outline-text-headline-2&#34; class=&#34;outline-text-2&#34;&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/DvFjCVHpoyk?si=b7YeY71Lwl1TBBua&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;
Video link: &lt;a href=&#34;https://www.youtube.com/watch?v=DvFjCVHpoyk&#34;&gt;https://www.youtube.com/watch?v=DvFjCVHpoyk&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>The State of Developer Education podcast</title>
      <link>https://cestlaz.github.io/post/dev-educator-podcast/</link>
      <pubDate>Mon, 16 Oct 2023 09:22:58 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/dev-educator-podcast/</guid>
      <description>&lt;p&gt;
Now that I&amp;#39;m back from my trip (and the subsequent cold that I&amp;#39;ve
battled for the past few days), time to get back to &amp;#34;work.&amp;#34;&lt;/p&gt;
&lt;p&gt;
About a month ago, my friend &lt;a href=&#34;https://www.linkedin.com/in/jonmarkgo/&#34;&gt;Jonathan Gottfied&lt;/a&gt; interviewed me for his
&lt;a href=&#34;https://deveducation.fm/e/r8krr96n-mike-zamansky&#34;&gt;State of Developer Education&lt;/a&gt; podcast. It&amp;#39;s an hour plus dive into CS /
Tech education. It dropped when I was on the plane back to NY last
Thursday. I meant to write this on Friday but my cold took me out
until today.&lt;/p&gt;
&lt;p&gt;
It was a thrill to be asked and fun to do - as you know, I love
talking shop. I&amp;#39;ve known the host, Jon, for years, I think we met when
he was at Twilio. For the past almost decade though, Jon has been
building &lt;a href=&#34;https://mlh.io/&#34;&gt;Major League Hacking&lt;/a&gt; - &lt;strong&gt;the&lt;/strong&gt; organization to support
college hackathons. While I&amp;#39;m not  sold on the 30+ hours straight
format, a hackathon can be great tech extracurricular and MLH has done
so much to add structure and support for them. One of the things I
love about hackathons is that they&amp;#39;re tech education adjacent and can
fill in missing pieces for students - networking with others, a social
activity, project creation, and outside personal learning. All great
things. Running an organization like MLH can also give people like Jon
a valuable &amp;#34;outsiders&amp;#34; view of what&amp;#39;s coming out of the classroom. To
clarify, I say outsider to mean someone not employed as a teacher or
instructor. &lt;/p&gt;
&lt;p&gt;
As to the episode of the podcast I was on, you can check it out here:&lt;/p&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/rvTBhZo6rks?si=93vXdEqRZ0QRze3N&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;
or in podcast form here:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://podcasts.apple.com/us/podcast/the-evolving-landscape-of-computer-science/id1658813805?i=1000631091275&#34;&gt;https://podcasts.apple.com/us/podcast/the-evolving-landscape-of-computer-science/id1658813805?i=1000631091275&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://open.spotify.com/episode/576l1rFDpAQhaSHSgLd15H&#34;&gt;https://open.spotify.com/episode/576l1rFDpAQhaSHSgLd15H&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For teachers who read this blog, I&amp;#39;d recommend checking out the
podcast series in general. I&amp;#39;ve listened to a bunch and found them
both interesting and valuable. Most of the episodes I&amp;#39;ve listened to
are of professionals in the devrel space. Some come from traditional
CS backgrounds, some don&amp;#39;t. As teachers, we can learn from their
perspectives and also gain insights into the professional tech
world beyond just being a traditional software engineer.&lt;/p&gt;
&lt;p&gt;
So, I&amp;#39;d encourage you all to check out the series here:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://deveducation.fm/&#34;&gt;https://deveducation.fm/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/playlist?list=PLPDgudJ_VDUdqDSSq6-zmgeIWwULGQX7R&#34;&gt;https://www.youtube.com/playlist?list=PLPDgudJ_VDUdqDSSq6-zmgeIWwULGQX7R&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Enjoy.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>The Hague and an extra day</title>
      <link>https://cestlaz.github.io/post/hague/</link>
      <pubDate>Wed, 11 Oct 2023 11:18:26 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/hague/</guid>
      <description>&lt;p&gt;
Last day of the trip we decided to take a day trip to The Hague. On
the way we passed through Haarlem&lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/hague/haarlem.jpg&#34; alt=&#34;/img/hague/haarlem.jpg&#34; title=&#34;/img/hague/haarlem.jpg&#34; width=&#34;250px&#34;/&gt;
&lt;p&gt;
For some reason I couldn&amp;#39;t get this song out of my head&lt;/p&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/kIFN13-a1iA?si=mKvczkvG-QG_6WJP&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;
We had some time to do some wandering&lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/hague/hague-canal.jpg&#34; alt=&#34;/img/hague/hague-canal.jpg&#34; title=&#34;/img/hague/hague-canal.jpg&#34; width=&#34;250px&#34;/&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/hague/palace.jpg&#34; alt=&#34;/img/hague/palace.jpg&#34; title=&#34;/img/hague/palace.jpg&#34; width=&#34;250px&#34;/&gt;
&lt;p&gt;
and even stumbled upon their Chinatown:&lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/hague/chinatown-hague.jpg&#34; alt=&#34;/img/hague/chinatown-hague.jpg&#34; title=&#34;/img/hague/chinatown-hague.jpg&#34; width=&#34;250px&#34;/&gt;
&lt;p&gt;
but the reason for the trip was the Escher museum&lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/hague/museum.jpg&#34; alt=&#34;/img/hague/museum.jpg&#34; title=&#34;/img/hague/museum.jpg&#34; width=&#34;250px&#34;/&gt;
&lt;p&gt;
Cool museum in a beautiful mansion.&lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/hague/echser1.jpg&#34; alt=&#34;/img/hague/echser1.jpg&#34; title=&#34;/img/hague/echser1.jpg&#34; width=&#34;250px&#34;/&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/hague/escher2.jpg&#34; alt=&#34;/img/hague/escher2.jpg&#34; title=&#34;/img/hague/escher2.jpg&#34; width=&#34;250px&#34;/&gt;
&lt;p&gt;
It had tons of Escher&amp;#39;s work along with his story.&lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/hague/escher3.jpg&#34; alt=&#34;/img/hague/escher3.jpg&#34; title=&#34;/img/hague/escher3.jpg&#34; width=&#34;250px&#34;/&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/hague/escher4.jpg&#34; alt=&#34;/img/hague/escher4.jpg&#34; title=&#34;/img/hague/escher4.jpg&#34; width=&#34;250px&#34;/&gt;
&lt;p&gt;
I particularly liked that it had a lot of works that weren&amp;#39;t the usual
tessellations and impossible figures but of course it had those as well.&lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/hague/escher5.jpg&#34; alt=&#34;/img/hague/escher5.jpg&#34; title=&#34;/img/hague/escher5.jpg&#34; width=&#34;250px&#34;/&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/hague/escher6.jpg&#34; alt=&#34;/img/hague/escher6.jpg&#34; title=&#34;/img/hague/escher6.jpg&#34; width=&#34;250px&#34;/&gt;
&lt;p&gt;
Getting back to Amsterdam we wandered around for a final time and
found their Chinatown as well&lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/hague/chinatown-amsterdam.jpg&#34; alt=&#34;/img/hague/chinatown-amsterdam.jpg&#34; title=&#34;/img/hague/chinatown-amsterdam.jpg&#34; width=&#34;250px&#34;/&gt;
&lt;p&gt;
Finally, we settled in to the hotel.&lt;/p&gt;
&lt;p&gt;
We were supposed to come home today so we got to the airport nice and
early. No problem, at least until we boarded. Three hours later it was
determined that the plane had a bad part and they didn&amp;#39;t have a
spare. Even if they did it would have taken a few hours to replace.&lt;/p&gt;
&lt;p&gt;
So, we&amp;#39;re spending another night in Amsterdam. Just at a hotel airport
so that&amp;#39;s a little annoying. Not really the worst thing in the world
though. The hotel is fine, I&amp;#39;m assuming dinner and breakfast here will
be as well and these things happen.&lt;/p&gt;
&lt;p&gt;
I was just hoping to get back home to Devorah and Natan after two
weeks and Batya&amp;#39;s probably sick of me already.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Amsterdam days 3 and 4</title>
      <link>https://cestlaz.github.io/post/amsterdam2/</link>
      <pubDate>Mon, 09 Oct 2023 09:35:10 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/amsterdam2/</guid>
      <description>&lt;p&gt;
We started walking from our hotel to the &lt;a href=&#34;https://www.vangoghmuseum.nl/en&#34;&gt;Van Gogh&lt;/a&gt; museum. On the way
we passed the &lt;a href=&#34;https://cowmuseum.amsterdam/&#34;&gt;Cow Parade&lt;/a&gt; store. This was pretty cool since we remember
the Cow Parade from back when it was in New York decades ago. Big
fiberglass painted cows at random spots in the city.&lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/amsterdam/cows.jpg&#34; alt=&#34;/img/amsterdam/cows.jpg&#34; title=&#34;/img/amsterdam/cows.jpg&#34; width=&#34;250px&#34;/&gt;
&lt;p&gt;
The Van Gogh museum was pretty amazing (and also had wood
floors). While most of his best known works might be in other museums
around the world there were plenty of great ones to view and admire.&lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/amsterdam/van-gogh.jpg&#34; alt=&#34;/img/amsterdam/van-gogh.jpg&#34; title=&#34;/img/amsterdam/van-gogh.jpg&#34; width=&#34;250px&#34;/&gt;
&lt;p&gt;
There were also plenty of work from his contemporaries&lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/amsterdam/monet.jpg&#34; alt=&#34;/img/amsterdam/monet.jpg&#34; title=&#34;/img/amsterdam/monet.jpg&#34; width=&#34;250px&#34;/&gt;
&lt;p&gt;
It was particularly interesting to see things like a gallery of his
influences or walls with his works surrounded by similar works by his
contemporaries.&lt;/p&gt;
&lt;p&gt;
Like the Rijksmuseum this is a must see. We did hear a couple comment
though while standing online that it always sells out so maybe book
tickets in advance.&lt;/p&gt;
&lt;p&gt;
From there we wanted to see the Ann Frank house&lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/amsterdam/ann-frank.jpg&#34; alt=&#34;/img/amsterdam/ann-frank.jpg&#34; title=&#34;/img/amsterdam/ann-frank.jpg&#34; width=&#34;250px&#34;/&gt;
&lt;p&gt;
With so much else to do we decided not to book the tour in advance and
that we&amp;#39;d just walk by. We already knew the story so thought we&amp;#39;d
rather spend the time in the WWII Resistance museum and the Jewish
Museum to learn about things we were less familiar with but would walk
by the house to see it and the neighborhood.&lt;/p&gt;
&lt;p&gt;
On the way we needed sustenance so we sought out a highly recommended
cookie shop but were thwarted by a &lt;strong&gt;huge&lt;/strong&gt; line.&lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/amsterdam/cookies.jpg&#34; alt=&#34;/img/amsterdam/cookies.jpg&#34; title=&#34;/img/amsterdam/cookies.jpg&#34; width=&#34;250px&#34;/&gt;
&lt;p&gt;
It looked like it would be well over a 45 minute wait. Sorry, we don&amp;#39;t
do that anymore. We found something else, walked by the Ann Frank
house, did some more wandering, had a great light lunch then took a
break back at our hotel.&lt;/p&gt;
&lt;p&gt;
Then the Jewish Museum. It had two parts with two additional ones
opening in March - the museum, on the site of former Ashkenazi
synagogues, the Portuguese Synagogue across the street and the two to
come pieces, the &lt;a href=&#34;https://jck.nl/en/location/hollandsche-schouwburg&#34;&gt;Hollandsche Schouwburg&lt;/a&gt; and the &lt;a href=&#34;https://jck.nl/en/location/national-holocaust-museum&#34;&gt;National Holocoust
Museum&lt;/a&gt;. The next post will cover the Portuguese Synagogue but to be
honest, the museum didn&amp;#39;t thrill either of us. The general Judaism
section was fine but not inspirational and the organization had you
jumping from station to station in what appeared to be random
order. They had some interesting artifacts and we learned a bit but it
wasn&amp;#39;t super engaging to us. The Holocaust section also was pretty
subdued. To be honest, the WWII Resistance museum painted a better
picture of the Holocaust as did the Brussels museum. I&amp;#39;d also rank the
NY and DC ones better. As to the straight Jewish part we also liked the
Brussels museum more and I&amp;#39;ll put in a plug here for the
&lt;a href=&#34;https://theweitzman.org/&#34;&gt;Weitzman Museum&lt;/a&gt; in Philly.&lt;/p&gt;
&lt;p&gt;
In all fairness though this isn&amp;#39;t counting the Portuguese Synagogue
which was included in admission but we couldn&amp;#39;t go to yet since it was
closed for Simchat Torah and who knows what the forthcoming two sites
will add to the overall experience&lt;/p&gt;
&lt;p&gt;
Staying on our cultural theme, we&amp;#39;ve been noticing many bagel shops in
Amsterdam so we thought we&amp;#39;d try one.&lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/amsterdam/bagel.jpg&#34; alt=&#34;/img/amsterdam/bagel.jpg&#34; title=&#34;/img/amsterdam/bagel.jpg&#34; width=&#34;250px&#34;/&gt;
&lt;p&gt;
We ended up taking out form &lt;a href=&#34;https://soupenzo.nl/&#34;&gt;Soup En Zo&lt;/a&gt;, a really good soup place
and pairing the soups with Bagels from Tony&amp;#39;s NY Bagels across the
street. The soups were great and the bagels were surprisingly
good. Not too large, good chew - better than some lesser NY ones.&lt;/p&gt;
&lt;p&gt;
That was it for day 3. Day 4 started with the Amsterdam
&lt;a href=&#34;https://www.hetscheepvaartmuseum.com/&#34;&gt;Maritime Museum&lt;/a&gt;. Really interesting. Some good history of the region
as well as boat and boat history. I really liked the modalities
used. Many galleries combined wonderful art - paintings in particular
to tell the story of Amsterdam&lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/amsterdam/maritme.jpg&#34; alt=&#34;/img/amsterdam/maritme.jpg&#34; title=&#34;/img/amsterdam/maritme.jpg&#34; width=&#34;250px&#34;/&gt;
&lt;p&gt;
They also had a replica of an old 18th century trade ship that you
could explore.&lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/amsterdam/smallroom.jpg&#34; alt=&#34;/img/amsterdam/smallroom.jpg&#34; title=&#34;/img/amsterdam/smallroom.jpg&#34; width=&#34;250px&#34;/&gt;
&lt;p&gt;
Pretty cramped particularly when you consider that statistically
people form the Netherlands are the tallest in the world.&lt;/p&gt;
&lt;p&gt;
They also had old maps:&lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/amsterdam/map.jpg&#34; alt=&#34;/img/amsterdam/map.jpg&#34; title=&#34;/img/amsterdam/map.jpg&#34; width=&#34;250px&#34;/&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/amsterdam/maps.jpg&#34; alt=&#34;/img/amsterdam/maps.jpg&#34; title=&#34;/img/amsterdam/maps.jpg&#34; width=&#34;250px&#34;/&gt;
&lt;p&gt;
Ship models:&lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/amsterdam/gig.jpg&#34; alt=&#34;/img/amsterdam/gig.jpg&#34; title=&#34;/img/amsterdam/gig.jpg&#34; width=&#34;250px&#34;/&gt;
&lt;p&gt;
and much more.&lt;/p&gt;
&lt;p&gt;
For lunch we then walked out to &lt;a href=&#34;https://en.wikipedia.org/wiki/Java-eiland&#34;&gt;Java Eiland&lt;/a&gt; where we passed the Meta
offices but Batya didn&amp;#39;t go in.&lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/amsterdam/meta.jpg&#34; alt=&#34;/img/amsterdam/meta.jpg&#34; title=&#34;/img/amsterdam/meta.jpg&#34; width=&#34;250px&#34;/&gt;
&lt;p&gt;
And then back near the Hotel to finally visit the Portuguese Synagogue.&lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/amsterdam/synagogue.jpg&#34; alt=&#34;/img/amsterdam/synagogue.jpg&#34; title=&#34;/img/amsterdam/synagogue.jpg&#34; width=&#34;250px&#34;/&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/amsterdam/synagogue2.jpg&#34; alt=&#34;/img/amsterdam/synagogue2.jpg&#34; title=&#34;/img/amsterdam/synagogue2.jpg&#34; width=&#34;250px&#34;/&gt;
&lt;p&gt;
Wow. While we were disappointed in the Jewish Museum, this part, which
was right across the street made it super worth it. You basically
walked around the outer perimeter of the site going in and out of
buildings where various religious functions occurred and got to hear
about the function and specific history from past congregations. We
also went in to explore the sanctuary. Again, wow. Big, beautiful,
candle lit (that is, no electricity) and in fact is still functioning.&lt;/p&gt;
&lt;p&gt;
As much as the previous days museum visit was meh, this pushed the
overall experience over the top.&lt;/p&gt;
&lt;p&gt;
That&amp;#39;s it for today except for a new place for dinner which we&amp;#39;ll head
out for soon. Tomorrow, the plan is to go to the Hague for the Escher
Museum and then Wednesday, back to NYC.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Amsterdam, the first two days</title>
      <link>https://cestlaz.github.io/post/amserdam1/</link>
      <pubDate>Sat, 07 Oct 2023 11:36:18 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/amserdam1/</guid>
      <description>&lt;p&gt;
Final leg of the trip in Amsterdam. Train ride and hotel went smoothly
but we were hungry so got a quick bite across from the Rembranthuis&lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/amsterdam/rembranthuis.jpg&#34; alt=&#34;/img/amsterdam/rembranthuis.jpg&#34; title=&#34;/img/amsterdam/rembranthuis.jpg&#34; width=&#34;250px&#34;/&gt;
&lt;p&gt;
After some wandering&lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/amsterdam/market.jpg&#34; alt=&#34;/img/amsterdam/market.jpg&#34; title=&#34;/img/amsterdam/market.jpg&#34; width=&#34;250px&#34;/&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/amsterdam/canal.jpg&#34; alt=&#34;/img/amsterdam/canal.jpg&#34; title=&#34;/img/amsterdam/canal.jpg&#34; width=&#34;250px&#34;/&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/amsterdam/amsterdam-selfie.jpg&#34; alt=&#34;/img/amsterdam/amsterdam-selfie.jpg&#34; title=&#34;/img/amsterdam/amsterdam-selfie.jpg&#34; width=&#34;250px&#34;/&gt;
&lt;p&gt;
we found our way to the &lt;a href=&#34;https://www.verzetsmuseum.org/&#34;&gt;WWII Dutch Resistance Museum&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;
Great place to go if you want to be both proud and inspired and
depressed at the same time.&lt;/p&gt;
&lt;p&gt;
It contained propaganda from both sides&lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/amsterdam/posters.jpg&#34; alt=&#34;/img/amsterdam/posters.jpg&#34; title=&#34;/img/amsterdam/posters.jpg&#34; width=&#34;250px&#34;/&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/amsterdam/foldup.jpg&#34; alt=&#34;/img/amsterdam/foldup.jpg&#34; title=&#34;/img/amsterdam/foldup.jpg&#34; width=&#34;250px&#34;/&gt;
&lt;p&gt;
Photos of hiding people and equipment:&lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/amsterdam/hiding1.jpg&#34; alt=&#34;/img/amsterdam/hiding1.jpg&#34; title=&#34;/img/amsterdam/hiding1.jpg&#34; width=&#34;250px&#34;/&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/amsterdam/hiding2.jpg&#34; alt=&#34;/img/amsterdam/hiding2.jpg&#34; title=&#34;/img/amsterdam/hiding2.jpg&#34; width=&#34;250px&#34;/&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/amsterdam/hiding3.jpg&#34; alt=&#34;/img/amsterdam/hiding3.jpg&#34; title=&#34;/img/amsterdam/hiding3.jpg&#34; width=&#34;250px&#34;/&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/amsterdam/hiding4.jpg&#34; alt=&#34;/img/amsterdam/hiding4.jpg&#34; title=&#34;/img/amsterdam/hiding4.jpg&#34; width=&#34;250px&#34;/&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/amsterdam/giraffe.jpg&#34; alt=&#34;/img/amsterdam/giraffe.jpg&#34; title=&#34;/img/amsterdam/giraffe.jpg&#34; width=&#34;250px&#34;/&gt;
&lt;p&gt;
and relayed the horror and tragedy that occurred during the Holocaust
highlighting the brave acts of many to try to save lives as well as
the stories of those who acquiesced and for the most part, regretted
it.&lt;/p&gt;
&lt;p&gt;
It left an impact and if you&amp;#39;re in Amsterdam I highly recommend it,
particularly give the direction of things with the Republicans in the
United States these days.&lt;/p&gt;
&lt;p&gt;
Dinner after that was a real treat. Batya and I got dinner with my old
student Artem.&lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/amsterdam/artem.jpg&#34; alt=&#34;/img/amsterdam/artem.jpg&#34; title=&#34;/img/amsterdam/artem.jpg&#34; width=&#34;250px&#34;/&gt;
&lt;p&gt;
Artem graduated Stuy in I think 2000 and I was marginally in touch but
hadn&amp;#39;t seen him since the early part of this century. When I announced
to my alumni community that I was heading to the Netherlands and
asking for recs, Artem chimed in and we coordinated. Such a treat to
reconnect with a former student in person. To be able to see him doing
well in life so many years later.&lt;/p&gt;
&lt;p&gt;
We got dinner at Entrepot and it was one of the best meals I&amp;#39;ve had in
years.&lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/amsterdam/dinner.jpg&#34; alt=&#34;/img/amsterdam/dinner.jpg&#34; title=&#34;/img/amsterdam/dinner.jpg&#34; width=&#34;250px&#34;/&gt;
&lt;p&gt;
That was it for day 1.&lt;/p&gt;
&lt;p&gt;
Day 2 started with another Sandeman tour. Got an overview of the city
and learned some interesting things. One stood out. We learned about
these &lt;a href=&#34;https://en.wikipedia.org/wiki/Stolperstein&#34;&gt;Stumbling Stones&lt;/a&gt;&lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/amsterdam/stumble-stones.jpg&#34; alt=&#34;/img/amsterdam/stumble-stones.jpg&#34; title=&#34;/img/amsterdam/stumble-stones.jpg&#34; width=&#34;250px&#34;/&gt;
&lt;p&gt;
placed in front of houses&lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/amsterdam/ss-building.jpg&#34; alt=&#34;/img/amsterdam/ss-building.jpg&#34; title=&#34;/img/amsterdam/ss-building.jpg&#34; width=&#34;250px&#34;/&gt;
&lt;p&gt;
memorializing victims of the Holocaust. &lt;/p&gt;
&lt;p&gt;
We also stopped by the former home of the Dutch West India Company&lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/amsterdam/west-indies.jpg&#34; alt=&#34;/img/amsterdam/west-indies.jpg&#34; title=&#34;/img/amsterdam/west-indies.jpg&#34; width=&#34;250px&#34;/&gt;
&lt;p&gt;
and talked about Dutch colonial times including New Amsterdam. It was
cool that our guide was into the Amsterdam/New Amsterdam thing and was
currently reading &amp;#34;The Island at the Center of the World&amp;#34; and had it
in his bag.&lt;/p&gt;
&lt;p&gt;
After that lunch at a pancake restaurant recommended by Artem. It was
in a repurposed carousel.&lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/amsterdam/carousel.jpg&#34; alt=&#34;/img/amsterdam/carousel.jpg&#34; title=&#34;/img/amsterdam/carousel.jpg&#34; width=&#34;250px&#34;/&gt;
&lt;p&gt;
Next up the &lt;a href=&#34;https://www.rijksmuseum.nl/nl&#34;&gt;Rijksmuseum&lt;/a&gt;. Many amazing artworks including
&lt;a href=&#34;https://www.rijksmuseum.nl/nl&#34;&gt;The Night Watch&lt;/a&gt; but here is a less famous one.&lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/amsterdam/riijks2.jpg&#34; alt=&#34;/img/amsterdam/riijks2.jpg&#34; title=&#34;/img/amsterdam/riijks2.jpg&#34; width=&#34;250px&#34;/&gt;
&lt;p&gt;
All I can say is amazing place. Also props to the designers on the
wooden floors - much easier on the feet than stone.&lt;/p&gt;
&lt;p&gt;
As a final treat we saw &lt;a href=&#34;https://www.grachtenrace.amsterdam/&#34;&gt;De Grachtenrace Amsterdam&lt;/a&gt; - a rowing race in
the canals. We wanted to catcht it but didn&amp;#39;t know exactly where or
when it was running - just the day. We saw around 20 boats race by
right after we left the museum&lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/amsterdam/rowing.jpg&#34; alt=&#34;/img/amsterdam/rowing.jpg&#34; title=&#34;/img/amsterdam/rowing.jpg&#34; width=&#34;250px&#34;/&gt;
&lt;p&gt;
Batya and I did this type of rowing and racing withe the &lt;a href=&#34;https://villagecommunityboathouse.org/&#34;&gt;Village
Community Boathouse&lt;/a&gt; out of pier 40 when she was at Stuy.&lt;/p&gt;
&lt;p&gt;
That was it for our first couple of days in Amsterdam with a lot more
to come.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Antwerp in 24 hours</title>
      <link>https://cestlaz.github.io/post/antwerp/</link>
      <pubDate>Thu, 05 Oct 2023 10:10:17 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/antwerp/</guid>
      <description>&lt;p&gt;
Heading to Amsterdam this morning and we&amp;#39;ll be here until mid next week.&lt;/p&gt;
&lt;p&gt;
We spent yesterday in Antwerp but for a while we didn&amp;#39;t know if we
were going to get there. Unbeknownst to us when we planned our trip,
yesterday was the season&amp;#39;s first general strike in Belgium. When we
found out in Brussels we weren&amp;#39;t sure we&amp;#39;d be able to get out of the
city at all but it turned out that while the local trains would be out
the intercity ones were going business as usual. Since we couldn&amp;#39;t get
to the required train station easily our host Helen drove us be she
had to do so before work. This meant that we arrived in Antwerp at
around 8:00am. Not a big deal. It was too early to check into our
hotel but we were able to leave our heavier bags and set out for
breakfast and a day of exploring.&lt;/p&gt;
&lt;p&gt;
To start, even before that, we came in to &lt;a href=&#34;https://en.wikipedia.org/wiki/Antwerpen-Centraal_railway_station&#34;&gt;Antwerp Central Station&lt;/a&gt;. &lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/antwerp/train1.jpg&#34; alt=&#34;/img/antwerp/train1.jpg&#34; title=&#34;/img/antwerp/train1.jpg&#34; width=&#34;300px&#34;/&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/antwerp/train2.jpg&#34; alt=&#34;/img/antwerp/train2.jpg&#34; title=&#34;/img/antwerp/train2.jpg&#34; width=&#34;300px&#34;/&gt;
&lt;p&gt;
It&amp;#39;s really amazing. The original station goes back to the mid 19th
century with the current one replacing it around 50 years later. The
facade and entry are gorgeous but going back to the track area is
equally amazing. The &lt;a href=&#34;https://en.wikipedia.org/wiki/Antwerpen-Centraal_railway_station&#34;&gt;Wikipedia page&lt;/a&gt; has more and better images so
check them out.&lt;/p&gt;
&lt;p&gt;
There was also this elevator status wall noting the levels:&lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/antwerp/zero-index.jpg&#34; alt=&#34;/img/antwerp/zero-index.jpg&#34; title=&#34;/img/antwerp/zero-index.jpg&#34; width=&#34;300px&#34;/&gt;
&lt;p&gt;
Gotta love the zero indexing of the floors.&lt;/p&gt;
&lt;p&gt;
After breakfast we wandered around&lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/antwerp/building.jpg&#34; alt=&#34;/img/antwerp/building.jpg&#34; title=&#34;/img/antwerp/building.jpg&#34; width=&#34;250px&#34;/&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/antwerp/buildings.jpg&#34; alt=&#34;/img/antwerp/buildings.jpg&#34; title=&#34;/img/antwerp/buildings.jpg&#34; width=&#34;250px&#34;/&gt;
&lt;p&gt;
and among other things found this, the &lt;a href=&#34;https://en.wikipedia.org/wiki/Brabo_Fountain&#34;&gt;Brabo Fountain&lt;/a&gt; in front of city
hall. &lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/antwerp/statue1.jpg&#34; alt=&#34;/img/antwerp/statue1.jpg&#34; title=&#34;/img/antwerp/statue1.jpg&#34; width=&#34;250px&#34;/&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/antwerp/statue2.jpg&#34; alt=&#34;/img/antwerp/statue2.jpg&#34; title=&#34;/img/antwerp/statue2.jpg&#34; width=&#34;250px&#34;/&gt;
&lt;p&gt;
Very cool. We also passed the cathedral seen in the background.&lt;/p&gt;
&lt;p&gt;
On the side, we saw these builders&lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/antwerp/builders.jpg&#34; alt=&#34;/img/antwerp/builders.jpg&#34; title=&#34;/img/antwerp/builders.jpg&#34; width=&#34;250px&#34;/&gt;
&lt;p&gt;
and realized why cathedrals, including our local St. John&amp;#39;s the
Unfinished take so long - the builders are made of bronze and don&amp;#39;t
move!!!!!&lt;/p&gt;
&lt;p&gt;
This was on our way to &lt;a href=&#34;https://en.wikipedia.org/wiki/Het_Steen&#34;&gt;Het Steen&lt;/a&gt; castle.&lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/antwerp/selfie-castle.jpg&#34; alt=&#34;/img/antwerp/selfie-castle.jpg&#34; title=&#34;/img/antwerp/selfie-castle.jpg&#34; width=&#34;250px&#34;/&gt;
&lt;p&gt;
It had an old school instagram frame:&lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/antwerp/insta-castle.jpg&#34; alt=&#34;/img/antwerp/insta-castle.jpg&#34; title=&#34;/img/antwerp/insta-castle.jpg&#34; width=&#34;250px&#34;/&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/antwerp/insta.jpg&#34; alt=&#34;/img/antwerp/insta.jpg&#34; title=&#34;/img/antwerp/insta.jpg&#34; width=&#34;250px&#34;/&gt;
&lt;p&gt;
Inside was &amp;#34;The Antwerp Story&amp;#34; which had a nice overview of the city
and you could climb to the top as well. &lt;/p&gt;
&lt;p&gt;
From there we tried to go to the &lt;a href=&#34;https://museumplantinmoretus.be/en/content/welcome-museum-plantin-moretus&#34;&gt;Plantin Moretus&lt;/a&gt; museum but were
thwarted - it was closed due to the strike.&lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/antwerp/closed.jpg&#34; alt=&#34;/img/antwerp/closed.jpg&#34; title=&#34;/img/antwerp/closed.jpg&#34; width=&#34;250px&#34;/&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/antwerp/closed-2.jpg&#34; alt=&#34;/img/antwerp/closed-2.jpg&#34; title=&#34;/img/antwerp/closed-2.jpg&#34; width=&#34;250px&#34;/&gt;
&lt;p&gt;
From there it was to the &lt;a href=&#34;https://en.wikipedia.org/wiki/Antwerp_Zoo&#34;&gt;Antwerp Zoo&lt;/a&gt; - the oldest zoo in the
country. It was right next to the train station and just 10 minutes
from our hotel.&lt;/p&gt;
&lt;p&gt;
We saw lots of animals including this meerkat just standing there.&lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/antwerp/meerkat.jpg&#34; alt=&#34;/img/antwerp/meerkat.jpg&#34; title=&#34;/img/antwerp/meerkat.jpg&#34; width=&#34;250px&#34;/&gt;
&lt;p&gt;
He was just standing there on his hind too legs you know, like that
guy - you know the one who stands - Rory Calhoun.&lt;/p&gt;
&lt;p&gt;
And also elephants:&lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/antwerp/elephants.jpg&#34; alt=&#34;/img/antwerp/elephants.jpg&#34; title=&#34;/img/antwerp/elephants.jpg&#34; width=&#34;250px&#34;/&gt;
&lt;p&gt;
And many more. There was also a nice little aquarium building where we
found Dory:&lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/antwerp/dory.jpg&#34; alt=&#34;/img/antwerp/dory.jpg&#34; title=&#34;/img/antwerp/dory.jpg&#34; width=&#34;250px&#34;/&gt;
&lt;p&gt;
After all of that we went back to the Hotel but they still didn&amp;#39;t have
our room so we wandered some more - by the Ruben&amp;#39;s house which is
closed for renovations and over to a local park. Then back to the
Hotel where they screwed up our room but we did finally get it
partially resolved - at least so that we had a roof over our head for
the night.&lt;/p&gt;
&lt;p&gt;
We finished off the day with a pretty awesome Ethiopian meal.&lt;/p&gt;
&lt;p&gt;
This morning we got some more chocolate for the road and are now on
the train to Amsterdam where we&amp;#39;ll spend the next five days.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Brussels</title>
      <link>https://cestlaz.github.io/post/brussels/</link>
      <pubDate>Wed, 04 Oct 2023 01:29:57 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/brussels/</guid>
      <description>&lt;p&gt;
We spent the last few days in Brussels. Got in on the Eurostar at
around 1:00. We were crashing with a good friend - a teacher who
worked with Devorah back in the day but left NY and is now in
Brussels. The catch was that she wasn&amp;#39;t getting home from work until
5:00 so we had to occupy ourselves until then. Schelpping around
rolling suitcases usually isn&amp;#39;t a big deal but there were two
challenges.&lt;/p&gt;
&lt;p&gt;
First, schlepping around rolling suitcases is much harder on cobbled
streets, particularly when it&amp;#39;s unseasonably warm and most museums -
you know - tourist attractions with coat rooms are closed in Brussels
on Mondays.&lt;/p&gt;
&lt;p&gt;
We ended up at the &lt;a href=&#34;https://www.brussels-comics-figurines-museum.be/en/&#34;&gt;Brussels Comics Figurines Museum&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;
Very cool. The first featured comic strip was &lt;a href=&#34;https://en.wikipedia.org/wiki/Marsupilami&#34;&gt;The Marsupilami&lt;/a&gt;. &lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/brussels/marsupilami.jpg&#34; alt=&#34;/img/brussels/marsupilami.jpg&#34; title=&#34;/img/brussels/marsupilami.jpg&#34; width=&#34;300px&#34;/&gt;
&lt;p&gt;
Lots of figurines and a running cartoon. Fun stuff.&lt;/p&gt;
&lt;p&gt;
There were lots more:&lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/brussels/comic2.jpg&#34; alt=&#34;/img/brussels/comic2.jpg&#34; title=&#34;/img/brussels/comic2.jpg&#34; width=&#34;250px&#34;/&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/brussels/comic4.jpg&#34; alt=&#34;/img/brussels/comic4.jpg&#34; title=&#34;/img/brussels/comic4.jpg&#34; width=&#34;250px&#34;/&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/brussels/comic1.jpg&#34; alt=&#34;/img/brussels/comic1.jpg&#34; title=&#34;/img/brussels/comic1.jpg&#34; width=&#34;250px&#34;/&gt;
&lt;p&gt;
Some I knew like Tintin and the Smurfs and some I didn&amp;#39;t. Lots of
interesting backstory.&lt;/p&gt;
&lt;p&gt;
My favorite was, of course, Asterix (and of course Obelix):&lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/brussels/comic3.jpg&#34; alt=&#34;/img/brussels/comic3.jpg&#34; title=&#34;/img/brussels/comic3.jpg&#34; width=&#34;300px&#34;/&gt;
&lt;p&gt;
After the museum we puttered around a bit, refueled on a waffle and
made it to our host&amp;#39;s.&lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/brussels/waffle.jpg&#34; alt=&#34;/img/brussels/waffle.jpg&#34; title=&#34;/img/brussels/waffle.jpg&#34; width=&#34;300px&#34;/&gt;
&lt;p&gt;
We started off the next day with a free tour. Well, sort of. We went
on a &lt;a href=&#34;https://www.neweuropetours.eu/brussels-walking-tours/&#34;&gt;Sandeman&lt;/a&gt; tour. They&amp;#39;re free and request you tip based on whatever
value you feel you received. Devorah and Batya have used them before.&lt;/p&gt;
&lt;p&gt;
We started at the &lt;a href=&#34;https://en.wikipedia.org/wiki/Grand-Place&#34;&gt;Grand Place&lt;/a&gt; talked a bit about it&amp;#39;s and the city&amp;#39;s
history and walked and learned about Brussels for the next almost
three hours. &lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/brussels/gp3.jpg&#34; alt=&#34;/img/brussels/gp3.jpg&#34; title=&#34;/img/brussels/gp3.jpg&#34; width=&#34;300px&#34;/&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/brussels/gp4.jpg&#34; alt=&#34;/img/brussels/gp4.jpg&#34; title=&#34;/img/brussels/gp4.jpg&#34; width=&#34;300px&#34;/&gt;
&lt;p&gt;
Batya and I both very much enojyed the tour. &lt;/p&gt;
&lt;p&gt;
Next up, the &lt;a href=&#34;https://www.kbr.be/en/ &#34;&gt;KBR&lt;/a&gt; museum. This was recommended by a friend. There was
some local history but mostly it was about illuminated manuscripts.&lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/brussels/kbr.jpg&#34; alt=&#34;/img/brussels/kbr.jpg&#34; title=&#34;/img/brussels/kbr.jpg&#34; width=&#34;300px&#34;/&gt;
&lt;p&gt;
They had some history on Illuminated Manuscripts as well as on how
they were made and sported an impressive collection. The oldest we saw
was form the 900s. Extremely cool.&lt;/p&gt;
&lt;p&gt;
That evening we got dinner with our friend Helen and a bunch of her
colleagues. Helen is now teaching in Brussels so I asked her to set up
a dinner with her CS or related teachers. They don&amp;#39;t strictly do CS,
they do ICT which has some CS and coding in it but also trends to what
we would cover on the CTE side.&lt;/p&gt;
&lt;p&gt;
I loved meeting and talking with all of them. Learned a bit about what
it was like for them and what&amp;#39;s going on in CS Ed in their school,
Belgium and other places in Europe and I hope I was also able to share
some interesting insights form our side. I might blog more about all
of this at some later date but it was really a highlight for me.&lt;/p&gt;
&lt;p&gt;
Yesterday, our last day in Brussels we started at the
&lt;a href=&#34;https://www.brusselsmuseums.be/en/museums/jewish-museum-of-belgium&#34;&gt;Jewish&lt;/a&gt;
Museum. It covered the expected intro to Judiasm, had a
Holocaust section and a few exhibits by and about Jewish artists from
or related to Belgium. I was particularly interested in the first two
things - I wanted to see how they were covered in Europe. Very
interesting and as with everything else we&amp;#39;ve seen, worth a visit. I
particularly liked the information about development and histories of
some of the congregations that formed in Belgium.&lt;/p&gt;
&lt;p&gt;
For the afternoon we decided to go castle hunting with Helen. First up
was &lt;a href=&#34;https://www.castles.nl/grimbergen-castle&#34;&gt;Grimbergen&lt;/a&gt;. Cool old castle but mostly ruins. We were able to walk
around and liked it but it was a short stop - not that much there.&lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/brussels/castle1.jpg&#34; alt=&#34;/img/brussels/castle1.jpg&#34; title=&#34;/img/brussels/castle1.jpg&#34; width=&#34;300px&#34;/&gt;
&lt;p&gt;
We then found our way to Chateau de Bouchout at Plantentuin
Meise. Cool castle but also in a botanic garden. We walked a couple of
the sections and went through a pretty amazing greenhouse. Plus
teachers got free entry. Another win.&lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/brussels/castle4.jpg&#34; alt=&#34;/img/brussels/castle4.jpg&#34; title=&#34;/img/brussels/castle4.jpg&#34; width=&#34;300px&#34;/&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/brussels/castle3.jpg&#34; alt=&#34;/img/brussels/castle3.jpg&#34; title=&#34;/img/brussels/castle3.jpg&#34; width=&#34;300px&#34;/&gt;
&lt;p&gt;
All in all three successful days of touring.&lt;/p&gt;
&lt;p&gt;
We almost had an adventure the next day - this morning on our way to
Antwerp but I&amp;#39;ll save that for the next post.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>